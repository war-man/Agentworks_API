//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Threading.Tasks;
using MoneyGram.AgentConnect.DomainModel;
using MoneyGram.AgentConnect.EntityMapper;
using MoneyGram.Common.Extensions;
using DOMAIN = MoneyGram.AgentConnect.DomainModel.Transaction;
using SERVICE = MoneyGram.AgentConnect.Service;

namespace MoneyGram.AgentConnect.Repository
{
	public class AgentConnectRepository : IAgentConnect
	{
		protected IAgentConnectProxyFactory AgentConnectProxyFactory { get; }

		public AgentConnectRepository(IAgentConnectProxyFactory agentConnectProxyFactory)
        {
            agentConnectProxyFactory.ThrowIfNull(nameof(agentConnectProxyFactory));

            AgentConnectProxyFactory = agentConnectProxyFactory;
        }

		protected void PopulateRequestWithConfig(SERVICE.Request acRequest, Agent agent)
        {
            acRequest.timeStamp = DateTime.Now;
            acRequest.agentID = agent.AgentId;
            acRequest.agentSequence = agent.AgentSequence;
            // Temporary until  RCDMS matches the AC schema of 20 char.
            acRequest.operatorName = agent.OperatorName.Truncate(7);
            acRequest.language = agent.Language;

            if (agent.UnitProfileId.HasValue)
            {
                acRequest.unitProfileID = agent.UnitProfileId.Value;
                acRequest.unitProfileIDSpecified = true;
            }
        }

{METHODS}
    }
}