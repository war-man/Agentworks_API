<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 
	2013, 2014, 2015, 2016 MoneyGram Payment Systems, Inc. All rights reserved. --><definitions name="AgentConnect1705" targetNamespace="http://www.moneygram.com/AgentConnect1705" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://www.moneygram.com/AgentConnect1705" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd="http://www.moneygram.com/AgentConnect1705">
	<types>
		
<xs:schema elementFormDefault="qualified" targetNamespace="http://www.moneygram.com/AgentConnect1705" xmlns:ac="http://www.moneygram.com/AgentConnect1705" xmlns:imag="http://moneygram.com/service/imageorchestrator_v1" xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xs:complexType name="Request">
		<xs:sequence>
			<xs:element minOccurs="0" name="unitProfileID" type="ac:UnitProfileIDType"/>
			<xs:element minOccurs="0" name="agentID" type="ac:AgentIDType"/>
			<xs:element minOccurs="0" name="agentSequence" type="ac:AgentSequenceType"/>
			<xs:element minOccurs="0" name="language" type="ac:LocaleType"/>
			<xs:element minOccurs="0" name="mgiSessionID" type="ac:MGISessionIDType"/>
			<xs:element minOccurs="1" name="timeStamp" type="xs:dateTime"/>
			<xs:element minOccurs="1" name="clientSoftwareVersion" type="ac:ClientSWVersionType"/>
			<xs:element minOccurs="1" name="poeType" type="ac:EnumType">
				<xs:annotation>
					<xs:documentation>
						AC Agents should use AC
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="1" name="channelType" type="ac:EnumType">
				<xs:annotation>
					<xs:documentation>
						Use the getEnumerations API to find valid channelTypes.
						AC agents should work with the integrations team to determine the appropriate channel to use.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="operatorName" type="ac:OperatorNameType"/>
			<xs:element minOccurs="1" name="targetAudience" type="ac:EnumType">
				<xs:annotation>
					<xs:documentation>
						Examples are: Agent_Facing, Consumer_Facing 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="poeCapabilities">
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" minOccurs="0" name="poeCapability" type="ac:KeyValuePairType">
							<xs:annotation>
								<xs:documentation> 
									Identifies key capabilities of the client. 
									AC agents should work with the integrations team to determine specific capabilities right for them.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Response">
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="0" name="errors">
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" minOccurs="0" name="error" type="ac:BusinessError"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="amendValidationRequest" type="ac:AmendValidationRequest"/>
	<xs:complexType name="AmendValidationRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
					<xs:element maxOccurs="1" minOccurs="0" name="fieldValues">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="fieldValue" type="ac:KeyValuePairType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="verifiedFields">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="infoKey" type="ac:InfoKeyType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element minOccurs="0" name="primaryReceiptLanguage" type="ac:LocaleType"/>
					<xs:element minOccurs="0" name="secondaryReceiptLanguage" type="ac:LocaleType"/>
					<xs:element maxOccurs="1" minOccurs="0" name="receiptImages">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="receiptImage" type="ac:ReceiptImageContentType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="amendValidationResponse" type="ac:AmendValidationResponse"/>
	<xs:complexType name="AmendValidationResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="mgiSessionID" type="ac:MGISessionIDType"/>
										<xs:element minOccurs="1" name="readyForCommit" type="xs:boolean"/>
										<xs:element minOccurs="1" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="fieldsToCollect">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="fieldToCollect" type="ac:InfoBase"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element minOccurs="0" name="receipts" type="ac:PreCompletionReceiptType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="receiptInfo">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="1" minOccurs="0" name="disclosureTexts">
														<xs:complexType>
															<xs:sequence>
																<xs:element maxOccurs="unbounded" minOccurs="0" name="disclosureText" type="ac:TextTranslationType"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="billerSearchRequest" type="ac:BillerSearchRequest"/>
	<xs:complexType name="BillerSearchRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="searchType" type="ac:BillerSearchType"/>
					<xs:element minOccurs="0" name="productVariant" type="ac:ProductVariantType"/>
					<xs:element minOccurs="0" name="industryID" type="ac:IndustryIdType"/>
					<xs:element minOccurs="0" name="receiveCode" type="ac:ReceiveCodeType"/>
					<xs:element minOccurs="0" name="billerName" type="ac:StringMax64Type"/>
					<xs:element minOccurs="0" name="receiveAgentID" type="ac:AgentIDType"/>
					<xs:element minOccurs="0" name="binNumber" type="ac:BinNumberType"/>
					<xs:element minOccurs="0" name="defaultInformationalFee" type="ac:AmountIncludeZeroType"/>
					<xs:element minOccurs="0" name="defaultMaxFee" type="xs:boolean"/>
					<xs:element minOccurs="0" name="maxRowsToReturn" type="ac:Int3Type"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="billerSearchResponse" type="ac:BillerSearchResponse"/>
	<xs:complexType name="BillerSearchResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element maxOccurs="unbounded" minOccurs="0" name="billerInfo" type="ac:BillerInfo"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="billPaymentDetailReportRequest" type="ac:BillPaymentDetailReportRequest"/>
	<xs:complexType name="BillPaymentDetailReportRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element name="activityDate" type="xs:date"/>
					<xs:element minOccurs="0" name="productVariant" type="ac:ProductVariantType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="billPaymentDetailReportResponse" type="ac:BillPaymentDetailReportResponse"/>
	<xs:complexType name="BillPaymentDetailReportResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element maxOccurs="unbounded" minOccurs="0" name="reportInfo" type="ac:BillPaymentDetailInfo"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="billPaymentSummaryReportRequest" type="ac:BillPaymentSummaryReportRequest"/>
	<xs:complexType name="BillPaymentSummaryReportRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="activityDate" type="xs:date"/>
					<xs:element minOccurs="0" name="productVariant" type="ac:ProductVariantType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="billPaymentSummaryReportResponse" type="ac:BillPaymentSummaryReportResponse"/>
	<xs:complexType name="BillPaymentSummaryReportResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element maxOccurs="unbounded" minOccurs="0" name="reportInfo" type="ac:BillPaymentSummaryInfo"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="bpValidationRequest" type="ac:BPValidationRequest"/>
	<xs:complexType name="BPValidationRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
					<xs:element minOccurs="1" name="transactionStaging" type="xs:boolean"/>
					<xs:element minOccurs="1" name="sendAmount" type="ac:AmountNonZeroType"/>
					<xs:element minOccurs="0" name="feeAmount" type="ac:AmountIncludeZeroType"/>
					<xs:element maxOccurs="1" minOccurs="0" name="promoCodes">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="promoCode" type="ac:PromoCodeType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element minOccurs="1" name="sendCurrency" type="ac:CurrencyCodeType"/>
					<xs:element minOccurs="1" name="receiveCurrency" type="ac:CurrencyCodeType"/>
					<xs:element minOccurs="1" name="destinationCountry" type="ac:CountryCodeType"/>
					<xs:element minOccurs="1" name="productVariant" type="ac:ProductVariantType"/>
					<xs:element minOccurs="0" name="serviceOfferingID" type="ac:ServiceOfferingIDType"/>
					<xs:element minOccurs="0" name="receiveCode" type="ac:ReceiveCodeType"/>
					<xs:element minOccurs="0" name="receiveAgentID" type="ac:AgentIDType"/>
					<xs:element maxOccurs="1" minOccurs="0" name="fieldValues">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="fieldValue" type="ac:KeyValuePairType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="verifiedFields">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="infoKey" type="ac:InfoKeyType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element minOccurs="0" name="primaryReceiptLanguage" type="ac:LocaleType"/>
					<xs:element minOccurs="0" name="secondaryReceiptLanguage" type="ac:LocaleType"/>
					<xs:element maxOccurs="1" minOccurs="0" name="receiptImages">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="receiptImage" type="ac:ReceiptImageContentType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="bpValidationResponse" type="ac:BPValidationResponse"/>
	<xs:complexType name="BPValidationResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="mgiSessionID" type="ac:MGISessionIDType"/>
										<xs:element minOccurs="1" name="readyForCommit" type="xs:boolean"/>
										<xs:element minOccurs="1" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
										<!--ACINTERNAL-START-->
										<xs:element minOccurs="0" name="token" type="ac:TokenType"/>
										<!--ACINTERNAL-END-->
										<xs:element minOccurs="0" name="mgiRewardsNumber" type="ac:StringMax20Type"/>
										<xs:element minOccurs="1" name="productVariant" type="ac:ProductVariantType"/>
										<xs:element minOccurs="0" name="billerCutoffTime" type="ac:StringMax12Type"/>
										<xs:element minOccurs="0" name="billerAddress" type="ac:AddressType"/>
										<xs:element minOccurs="0" name="billerAddress2" type="ac:AddressType"/>
										<xs:element minOccurs="0" name="billerAddress3" type="ac:AddressType"/>
										<xs:element minOccurs="0" name="billerCity" type="ac:CityType"/>
										<xs:element minOccurs="0" name="billerState" type="ac:CountrySubdivisionCodeType"/>
										<xs:element minOccurs="0" name="billerPostalCode" type="ac:PostalType"/>
										<xs:element minOccurs="0" name="billerPhone" type="ac:PhoneType"/>
										<xs:element minOccurs="0" name="agentTransactionId" type="ac:StringMax20Type"/>
										<xs:element minOccurs="0" name="serviceOfferingID" type="ac:ServiceOfferingIDType"/>
										<xs:element minOccurs="0" name="processingFee" type="ac:AmountIncludeZeroType"/>
										<xs:element minOccurs="0" name="infoFeeIndicator" type="xs:boolean"/>
										<xs:element minOccurs="0" name="exchangeRateApplied" type="ac:FXRateType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="sendAmounts" type="ac:SendAmountInfo"/>
										<xs:element maxOccurs="1" minOccurs="0" name="receiveAmounts" type="ac:ReceiveAmountInfo"/>
										<xs:element maxOccurs="1" minOccurs="0" name="promotionInfos">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="promotionInfo" type="ac:PromotionInfo"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element maxOccurs="1" minOccurs="0" name="fieldsToCollect">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="fieldToCollect" type="ac:InfoBase"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element minOccurs="0" name="receipts" type="ac:PreCompletionReceiptType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="receiptInfo">
											<xs:complexType>
												<xs:sequence>
													<xs:element minOccurs="0" name="billerWebsite" type="ac:StringMax128Type"/>
													<xs:element minOccurs="0" name="printMGICustomerServiceNumber" type="xs:boolean"/>
													<xs:element maxOccurs="1" minOccurs="0" name="expectedPostingTimeFrames">
														<xs:complexType>
															<xs:sequence>
																<xs:element maxOccurs="unbounded" minOccurs="0" name="expectedPostingTimeFrame" type="ac:TextTranslationType"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
													<xs:element maxOccurs="1" minOccurs="0" name="billerNotes">
														<xs:complexType>
															<xs:sequence>
																<xs:element maxOccurs="unbounded" minOccurs="0" name="billerNote" type="ac:TextTranslationType"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
													<xs:element maxOccurs="1" minOccurs="0" name="serviceOfferingDescriptions">
														<xs:complexType>
															<xs:sequence>
																<xs:element maxOccurs="unbounded" minOccurs="0" name="serviceOfferingDescription" type="ac:TextTranslationType"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
													<xs:element maxOccurs="1" minOccurs="0" name="customerTips">
														<xs:complexType>
															<xs:sequence>
																<xs:element maxOccurs="unbounded" minOccurs="0" name="customerTip" type="ac:TextTranslationType"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
													<xs:element maxOccurs="1" minOccurs="0" name="promotionalMessages">
														<xs:complexType>
															<xs:sequence>
																<xs:element maxOccurs="unbounded" minOccurs="0" name="promotionalMessage" type="ac:TextTranslationType"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
													<xs:element maxOccurs="1" minOccurs="0" name="disclosureTexts">
														<xs:complexType>
															<xs:sequence>
																<xs:element maxOccurs="unbounded" minOccurs="0" name="disclosureText" type="ac:TextTranslationType"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:element name="checkInRequest" type="ac:CheckInRequest"/>
	<xs:complexType name="CheckInRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="checkInResponse" type="ac:CheckInResponse"/>
	<xs:complexType name="CheckInResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="0" name="token" type="ac:TokenType"/>
										<xs:element minOccurs="0" name="timeZoneCorrection" type="ac:TimeZoneCorrectionType"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:element name="cityListRequest" type="ac:CityListRequest"/>
	<xs:complexType name="CityListRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="country" type="ac:CountryCodeType"/>
					<xs:element minOccurs="0" name="countrySubdivisionCode" type="ac:CountrySubdivisionCodeType"/>
					<xs:element minOccurs="1" name="city" type="ac:StringMax24Type"/>
					<xs:element minOccurs="0" name="maxRowsToReturn" type="ac:Int4Type"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="cityListResponse" type="ac:CityListResponse"/>
	<xs:complexType name="CityListResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element maxOccurs="unbounded" minOccurs="0" name="city" type="ac:CityType"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="completeSessionRequest" type="ac:CompleteSessionRequest"/>
	<xs:complexType name="CompleteSessionRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="commit" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>Committed means that the money is being paid to the
								receiver or has been collected from the sender. </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="1" name="mgiSessionType" type="ac:SessionType"/>
					<xs:element maxOccurs="1" minOccurs="0" name="receiptImages">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="receiptImage" type="ac:ReceiptImageContentType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="completeSessionResponse" type="ac:CompleteSessionResponse"/>
	<xs:complexType name="CompleteSessionResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="0" name="confirmationNumber" type="ac:ConfirmationNumberType"/>
										<xs:element minOccurs="0" name="referenceNumber" type="ac:ReferenceNumberType"/>
										<xs:element minOccurs="0" name="transactionID" type="ac:StringMax18Type"/>
										<xs:element minOccurs="0" name="referenceNumberText" type="ac:ReferenceNumberTextType"/>
										<xs:element minOccurs="0" name="partnerConfirmationNumber" type="ac:PartnerConfirmationNumberType"/>
										<xs:element minOccurs="0" name="partnerName" type="ac:PartnerNameType"/>
										<xs:element minOccurs="0" name="receiveAgentAbbreviation" type="ac:ReceiveAgentAbbreviationType"/>
										<xs:element minOccurs="0" name="freePhoneCallPIN" type="ac:FreePhoneCallPINType"/>
										<xs:element minOccurs="0" name="tollFreePhoneNumber" type="ac:PhoneType"/>
										<xs:element minOccurs="0" name="expectedDateOfDelivery" type="xs:date"/>
										<xs:element minOccurs="1" name="transactionDateTime" type="xs:dateTime"/>
										<!--ACINTERNAL-START-->
										<xs:element minOccurs="0" name="agentCheckAuthorizationNumber" type="ac:AgentCheckAuthNumber"/>
										<!--ACINTERNAL-END-->
										<xs:element minOccurs="0" name="receipts" type="ac:CompletionReceiptType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="receiptInfo">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="1" minOccurs="0" name="receiptTextInfos">
														<xs:complexType>
															<xs:sequence>
																<xs:element maxOccurs="unbounded" minOccurs="0" name="receiptTextInfo" type="ac:TextTranslationType"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:element name="complianceTransactionRequest" type="ac:ComplianceTransactionRequest"/>
	<xs:complexType name="ComplianceTransactionRequest">
		<xs:annotation>
			<xs:documentation>MoneyOrders</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element name="requestType" type="ac:ComplianceTransactionRequestType"/>
					<xs:element minOccurs="0" name="cci" type="ac:CustomerComplianceInfo"/>
					<xs:element minOccurs="0" name="mgReferenceNumber" type="xs:string"/>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="moneyOrder" type="ac:MoneyOrderInfo"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="complianceTransactionResponse" type="ac:ComplianceTransactionResponse"/>
	<xs:complexType name="ComplianceTransactionResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element name="complianceInfoRequired" type="xs:boolean"/>
										<xs:element maxOccurs="1" minOccurs="0" name="cci" type="ac:CustomerComplianceInfo"/>
										<xs:element name="ofacStatus" type="xs:boolean"/>
										<xs:element maxOccurs="1" minOccurs="0" name="ofacSourceID" type="xs:string"/>
										<xs:element maxOccurs="1" minOccurs="0" name="batchID" type="ac:StringMax20Type"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:element name="confirmTokenRequest" type="ac:ConfirmTokenRequest"/>
	<xs:complexType name="ConfirmTokenRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="codeTableVersion" type="ac:StringMax20Type"/>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="clientTableVersions" type="ac:VersionInfo"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="confirmTokenResponse" type="ac:ConfirmTokenResponse"/>
	<xs:complexType name="ConfirmTokenResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="profileChanged" type="xs:boolean"/>
										<xs:element minOccurs="1" name="codeTableChanged" type="xs:boolean"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:element name="consumerHistoryLookupRequest" type="ac:ConsumerHistoryLookupRequest"/>
	<xs:complexType name="ConsumerHistoryLookupRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
					<xs:element minOccurs="0" name="consumerPhone" type="ac:Phone14Type"/>
					<xs:element minOccurs="0" name="mgiRewardsNumber" type="ac:StringMax20Type"/>
					<xs:element minOccurs="0" name="billerAccountNumber" type="ac:BillerAccountNumberType"/>
					<xs:element minOccurs="0" name="agentFrequentCustomerNumber" type="ac:AgentFrequentCustomerNumberType"/>
					<xs:element minOccurs="1" name="maxSendersToReturn" type="ac:IntMaxToReturnType"/>
					<xs:element minOccurs="1" name="maxReceiversToReturn" type="ac:IntMaxToReturnType"/>
					<xs:element minOccurs="1" name="mgiSessionType" type="ac:SessionType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="consumerHistoryLookupResponse" type="ac:ConsumerHistoryLookupResponse"/>
	<xs:complexType name="ConsumerHistoryLookupResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element maxOccurs="1" minOccurs="0" name="senderInfos">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="senderInfo" type="ac:SenderLookupInfo"/>
													<xs:element maxOccurs="1" minOccurs="0" name="infos" type="ac:InfosType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:element name="createOrUpdateProfileConsumerRequest" type="ac:CreateOrUpdateProfileConsumerRequest"/>
	<xs:complexType name="CreateOrUpdateProfileConsumerRequest">
		<xs:annotation>
			<xs:documentation>
				This API updates or creates a consumer profile. If a consumerProfileID is known, this API updates the profile. 
				Otherwise, it attempts to find/update the appropriate profile through merging. 
				If no profile is found, a new one is created, if enough information is provided.
				
				This API is used outside the send, billpayment or receive flows. Or when the flow is unknown at this time.
				
				This API can be repeated multiple times. If not enough data is provided to create a profile in the initial rounds, the API
				will ask for additional data to be provided. 
				
				This API uses GAF with a transactionType of "createOrUpdateProfileConsumer"
				
				If this API is used on it's own, completeSession should be used. 
				If it's used as a precursor to xxxValidation, then the completeSession is with the transaction.
				
				If a consumerProfileID is returned in the response, it should be included on subsequent createOrUpdateProfileConsumerRequests.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
					<xs:element minOccurs="0" name="consumerProfileID" type="ac:ConsumerProfileIDType">
						<xs:annotation>
							<xs:documentation>
								This is the Universal Consumer Profile ID. From a client perspective, not sending a profile ID is a create. Sending a profile ID is an update.
								Not sending an ID will allow MGI systems to match and possibly find a profile which will be updated.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="consumerProfileIDType" type="ac:ConsumerProfileIDTypeType"/>
					<xs:element minOccurs="0" name="consumerProfileIDTypeToReturn" type="ac:ConsumerProfileIDTypeType"/>
					<xs:element maxOccurs="1" minOccurs="0" name="fieldValues">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="fieldValue" type="ac:KeyValuePairType">
									<xs:annotation>
										<xs:documentation>No profile ID fields are allowed in the key/value pairs. 
											Except Plus Number or IDs the user sees/enters.
										</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="verifiedFields">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="infoKey" type="ac:InfoKeyType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="createOrUpdateProfileConsumerResponse" type="ac:CreateOrUpdateProfileConsumerResponse"/>
	<xs:complexType name="CreateOrUpdateProfileConsumerResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="mgiSessionID" type="ac:MGISessionIDType"/>
										<xs:element minOccurs="1" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
										<xs:element minOccurs="0" name="customerServiceMessage" type="ac:StringMax255Type"/>
										<xs:element minOccurs="0" name="consumerProfileID" type="ac:ConsumerProfileIDType">
											<xs:annotation>
												<xs:documentation>
													This is the Universal Consumer Profile ID.
												</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element maxOccurs="1" minOccurs="0" name="consumerProfileIDs">
											<xs:annotation>
												<xs:documentation>
													This collection returns the Plus Number when the consumer has one as well as all IDs of the type requested in consumerProfileIDTypeToReturn
												</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="consumerProfileIDInfo" type="ac:ConsumerProfileIDInfo"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element maxOccurs="1" minOccurs="0" name="fieldsToCollect">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="fieldToCollect" type="ac:InfoBase"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="createOrUpdateProfileReceiverRequest" type="ac:CreateOrUpdateProfileReceiverRequest"/>
	<xs:complexType name="CreateOrUpdateProfileReceiverRequest">
		<xs:annotation>
			<xs:documentation>
				This API updates or creates a consumer profile. If a consumerProfileID is known, this API updates the profile. 
				Otherwise, it attempts to find/update the appropriate profile through merging. 
				If no profile is found, a new one is created, if enough information is provided.
				
				This API is to be used within the receive flow.
				
				This API can be repeated multiple times. If not enough data is provided to create a profile in the initial rounds, the API
				will ask for additional data to be provided. 
				
				This API uses GAF with a transactionType of "createOrUpdateProfileReceiver"
				
				If this API is used on it's own, completeSession should be used. 
				If it's used as a precursor to xxxValidation, then the completeSession is with the transaction.
				
				If a consumerProfileID is returned in the response, it should be included on subsequent createOrUpdateProfileReceiverRequests.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
					<xs:element minOccurs="0" name="consumerProfileID" type="ac:ConsumerProfileIDType">
						<xs:annotation>
							<xs:documentation>
								From a client perspective, not sending a profile ID is a create. Sending a profile ID is an update.
								Not sending an ID will allow MGI systems to match and possibly find a profile which will be updated.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="consumerProfileIDType" type="ac:ConsumerProfileIDTypeType"/>
					<xs:element minOccurs="0" name="consumerProfileIDTypeToReturn" type="ac:ConsumerProfileIDTypeType"/>
					<xs:element maxOccurs="1" minOccurs="0" name="fieldValues">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="fieldValue" type="ac:KeyValuePairType">
									<xs:annotation>
										<xs:documentation>No profile ID fields are allowed in the key/value pairs. 
											Except Plus Number or IDs the user sees/enters.
										</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="verifiedFields">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="infoKey" type="ac:InfoKeyType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="createOrUpdateProfileReceiverResponse" type="ac:CreateOrUpdateProfileReceiverResponse"/>
	<xs:complexType name="CreateOrUpdateProfileReceiverResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="mgiSessionID" type="ac:MGISessionIDType"/>
										<xs:element minOccurs="1" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
										<xs:element minOccurs="0" name="customerServiceMessage" type="ac:StringMax255Type"/>
										<xs:element minOccurs="0" name="consumerProfileID" type="ac:ConsumerProfileIDType">
											<xs:annotation>
												<xs:documentation>
													This is the Universal Consumer Profile ID.
												</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element maxOccurs="1" minOccurs="0" name="consumerProfileIDs">
											<xs:annotation>
												<xs:documentation>
													This collection returns the Plus Number when the reciever has one as well as all IDs of the type requested in consumerProfileIDTypeToReturn
												</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="consumerProfileIDInfo" type="ac:ConsumerProfileIDInfo"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element maxOccurs="1" minOccurs="0" name="fieldsToCollect">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="fieldToCollect" type="ac:InfoBase"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="createOrUpdateProfileSenderRequest" type="ac:CreateOrUpdateProfileSenderRequest"/>
	<xs:complexType name="CreateOrUpdateProfileSenderRequest">
		<xs:annotation>
			<xs:documentation>
				This API updates or creates a consumer profile. If a consumerProfileID is known, this API updates the profile. 
				Otherwise, it attempts to find/update the appropriate profile through merging. 
				If no profile is found, a new one is created, if enough information is provided.
				
				This API is to be used within the send or billpayment flows.
				
				This API can be repeated multiple times. If not enough data is provided to create a profile in the initial rounds, the API
				will ask for additional data to be provided. 
				
				This API uses GAF with a transactionType of "createOrUpdateProfileSender"
				
				If this API is used on it's own, completeSession should be used. 
				If it's used as a precursor to xxxValidation, then the completeSession is with the transaction.
				
				If a consumerProfileID is returned in the response, it should be included on subsequent createOrUpdateProfileSenderRequests.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
					<xs:element minOccurs="0" name="consumerProfileID" type="ac:ConsumerProfileIDType">
						<xs:annotation>
							<xs:documentation>
								From a client perspective, not sending a profile ID is a create. Sending a profile ID is an update.
								Not sending an ID will allow MGI systems to match and possibly find a profile which will be updated.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="consumerProfileIDType" type="ac:ConsumerProfileIDTypeType"/>
					<xs:element minOccurs="0" name="consumerProfileIDTypeToReturn" type="ac:ConsumerProfileIDTypeType"/>
					<xs:element maxOccurs="1" minOccurs="0" name="fieldValues">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="fieldValue" type="ac:KeyValuePairType">
									<xs:annotation>
										<xs:documentation>No profile ID fields are allowed in the key/value pairs. 
											Except Plus Number or IDs the user sees/enters.
										</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="verifiedFields">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="infoKey" type="ac:InfoKeyType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="createOrUpdateProfileSenderResponse" type="ac:CreateOrUpdateProfileSenderResponse"/>
	<xs:complexType name="CreateOrUpdateProfileSenderResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="mgiSessionID" type="ac:MGISessionIDType"/>
										<xs:element minOccurs="1" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
										<xs:element minOccurs="0" name="customerServiceMessage" type="ac:StringMax255Type"/>
										<xs:element minOccurs="0" name="consumerProfileID" type="ac:ConsumerProfileIDType">
											<xs:annotation>
												<xs:documentation>
													This is the Universal Consumer Profile ID.
												</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element maxOccurs="1" minOccurs="0" name="consumerProfileIDs">
											<xs:annotation>
												<xs:documentation>
													This collection returns the Plus Number when the sender has one as well as all IDs of the type requested in consumerProfileIDTypeToReturn
												</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="consumerProfileIDInfo" type="ac:ConsumerProfileIDInfo"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element maxOccurs="1" minOccurs="0" name="fieldsToCollect">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="fieldToCollect" type="ac:InfoBase"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:element name="depositAnnouncementRequest" type="ac:DepositAnnouncementRequest"/>
	<xs:complexType name="DepositAnnouncementRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="mgiEmployeeAutoAccept" type="xs:boolean"/>
					<xs:element minOccurs="1" name="depositReferenceNumber" type="ac:DepositReferenceNumberType"/>
					<xs:element minOccurs="1" name="depositDate" type="xs:dateTime"/>
					<xs:element minOccurs="1" name="announcementDate" type="xs:dateTime"/>
					<xs:element minOccurs="1" name="announcementAmount" type="ac:AmountIncludeZeroType"/>
					<xs:element minOccurs="1" name="announcementCurrencyCode" type="ac:CurrencyCodeType"/>
					<xs:element minOccurs="1" name="paymentTypeCode" type="ac:StringMax2Type"/>
					<xs:element minOccurs="1" name="bankShortCode" type="ac:BankShortCodeType"/>
					<xs:element minOccurs="1" name="bankName" type="ac:StringMax100Type"/>
					<xs:element minOccurs="1" name="announcementRemarks" type="ac:AnnouncementRemarksType"/>
					<xs:element minOccurs="1" name="agentEmployeeID" type="ac:StringMax8Type"/>
					<xs:element minOccurs="0" name="proofImage" type="xs:base64Binary" xmime:expectedContentTypes="*/*"/>
					<!--  <xs:element minOccurs="0" name="proofImagePath" type="xs:string"/> -->
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="depositAnnouncementResponse" type="ac:DepositAnnouncementResponse"/>
	<xs:complexType name="DepositAnnouncementResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="depositAnnouncementID" type="ac:DepositAnnouncementIDType"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:element name="directoryOfAgentsByAreaCodePrefixRequest" type="ac:DirectoryOfAgentsByAreaCodePrefixRequest"/>
	<xs:complexType name="DirectoryOfAgentsByAreaCodePrefixRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="areaCodePrefix" type="ac:AreaCodePrefixType"/>
					<xs:element minOccurs="0" name="country" type="ac:CountryCodeType"/>
					<xs:element minOccurs="0" name="maxRowsToReturn" type="ac:Int4Type"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="directoryOfAgentsByAreaCodePrefixResponse" type="ac:DirectoryOfAgentsByAreaCodePrefixResponse"/>
	<xs:complexType name="DirectoryOfAgentsByAreaCodePrefixResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element maxOccurs="unbounded" minOccurs="0" name="agentInfo" type="ac:AgentInfo"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="directoryOfAgentsByCityRequest" type="ac:DirectoryOfAgentsByCityRequest"/>
	<xs:complexType name="DirectoryOfAgentsByCityRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="country" type="ac:CountryCodeType"/>
					<xs:element minOccurs="0" name="countrySubdivisionCode" type="ac:CountrySubdivisionCodeType"/>
					<xs:element minOccurs="1" name="city" type="ac:CityType"/>
					<xs:element minOccurs="0" name="maxRowsToReturn" type="ac:Int4Type"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="directoryOfAgentsByCityResponse" type="ac:DirectoryOfAgentsByCityResponse"/>
	<xs:complexType name="DirectoryOfAgentsByCityResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element maxOccurs="unbounded" minOccurs="0" name="agentInfo" type="ac:AgentInfo"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="directoryOfAgentsByZipRequest" type="ac:DirectoryOfAgentsByZipRequest"/>
	<xs:complexType name="DirectoryOfAgentsByZipRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="zipCode" type="ac:PostalType"/>
					<xs:element minOccurs="0" name="country" type="ac:CountryCodeType"/>
					<xs:element minOccurs="0" name="maxRowsToReturn" type="ac:Int4Type"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="directoryOfAgentsByZipResponse" type="ac:DirectoryOfAgentsByZipResponse"/>
	<xs:complexType name="DirectoryOfAgentsByZipResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element maxOccurs="unbounded" minOccurs="0" name="agentInfo" type="ac:AgentInfo"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:element name="disclosureTextDetailsRequest" type="ac:DisclosureTextDetailsRequest"/>
	<xs:complexType name="DisclosureTextDetailsRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="paperFormat" type="ac:PaperFormatType"/>
					<xs:element minOccurs="0" name="mimeType" type="ac:MimeType"/>
					<xs:element minOccurs="0" name="downloadAsAttachment" type="xs:boolean"/>
					<xs:element maxOccurs="1" minOccurs="1" name="languages">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="1" name="longLanguageCode" type="ac:LanguageLongCodeType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="dcaTokenValues">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="dcaToken" type="ac:DCATokenType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element minOccurs="0" name="province" type="ac:StateType"/>
					<xs:element minOccurs="1" name="destinationCountry" type="ac:CountryCodeType"/>
					<xs:element minOccurs="0" name="disclosureTextRevisionNumber" type="ac:StringMax4Type"/>
					<xs:element maxOccurs="1" minOccurs="1" name="dcaTextTagValues">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="1" name="dcaTextTag" type="xs:string"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="disclosureTextDetailsResponse" type="ac:DisclosureTextDetailsResponse"/>
	<xs:complexType name="DisclosureTextDetailsResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element maxOccurs="unbounded" minOccurs="1" name="disclosureTextDetails" type="ac:DisclosureTextDetailsType"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:element name="doddFrankStateRegulatorInfoRequest" type="ac:DoddFrankStateRegulatorInfoRequest"/>
	<xs:complexType name="DoddFrankStateRegulatorInfoRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="dfJurisdiction" type="ac:StringMax3Type"/>
					<xs:element maxOccurs="1" minOccurs="1" name="languages">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="1" name="longLanguageCode" type="ac:LanguageLongCodeType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="doddFrankStateRegulatorInfoResponse" type="ac:DoddFrankStateRegulatorInfoResponse"/>
	<xs:complexType name="DoddFrankStateRegulatorInfoResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="version" type="xs:string"/>
										<xs:element maxOccurs="unbounded" minOccurs="1" name="stateRegulatorInfo" type="ac:StateRegulatorInfo"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:element name="dwInitialSetupRequest" type="ac:DwInitialSetupRequest"/>
	<xs:complexType name="DwInitialSetupRequest">
		<xs:complexContent>
			<xs:extension base="ac:InitialSetupRequest">
				<xs:sequence>
					<xs:element name="deviceID" type="xs:string"/>
					<xs:element minOccurs="0" name="serviceTagNumber" type="xs:string"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="dwInitialSetupResponse" type="ac:DwInitialSetupResponse"/>
	<xs:complexType name="DwInitialSetupResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element name="unitProfileID" type="xs:int"/>
										<xs:element name="token" type="ac:TokenType"/>
										<xs:element name="profile" type="xs:string"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:element name="dwPasswordRequest" type="ac:DwPasswordRequest"/>
	<xs:complexType name="DwPasswordRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element name="employeeNumber" type="ac:StringMax8Type"/>
					<xs:element minOccurs="0" name="currentPassword" type="ac:StringMax50Type"/>
					<xs:element name="newPassword" type="ac:StringMax50Type"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="dwPasswordResponse" type="ac:DwPasswordResponse"/>
	<xs:complexType name="DwPasswordResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element name="status" type="xs:boolean"/>
										<xs:element name="reasonCode" type="ac:DwPasswordReasonCodeType"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:element name="dwProfileRequest" type="ac:DwProfileRequest"/>
	<xs:complexType name="DwProfileRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="dwProfileResponse" type="ac:DwProfileResponse"/>
	<xs:complexType name="DwProfileResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element name="profile" type="xs:string"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:element name="feeLookupBySendCountryRequest" type="ac:FeeLookupBySendCountryRequest"/>
	<xs:complexType name="FeeLookupBySendCountryRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="mgiSessionType" type="ac:SessionType"/>
					<xs:element maxOccurs="1" minOccurs="0" name="productVariant" type="ac:ProductVariantType"/>
					<xs:choice>
						<xs:element name="amountIncludingFee" type="ac:AmountNonZeroType"/>
						<xs:element name="amountExcludingFee" type="ac:AmountNonZeroType"/>
						<xs:element name="receiveAmount" type="ac:Decimal9nonZeroType"/>
						<xs:element name="indicativeReceiveAmount" type="ac:Decimal9nonZeroType"/>
					</xs:choice>
					<xs:element minOccurs="0" name="receiveCountry" type="ac:CountryCodeType"/>
					<xs:element minOccurs="0" name="serviceOption" type="ac:ServiceOptionType"/>
					<xs:element minOccurs="0" name="freqCustCardNumber" type="ac:StringMax20Type"/>
					<xs:element minOccurs="0" name="promotionCode" type="ac:StringMax10Type"/>
					<xs:element minOccurs="0" name="receiveCode" type="ac:ReceiveCodeType"/>
					<xs:element minOccurs="0" name="indicativeReceiveCurrency" type="ac:CurrencyCodeType"/>
					<xs:element minOccurs="0" name="issueFreqCustCard" type="xs:boolean"/>
					<xs:element minOccurs="0" name="receiveAgentID" type="ac:AgentIDType"/>
					<xs:element minOccurs="0" name="receiveCurrency" type="ac:CurrencyCodeType"/>
					<xs:element minOccurs="0" name="mgCustomerReceiveNumber" type="ac:MgCustomerReceiveNumberType"/>
					<xs:element minOccurs="0" name="sendCountry" type="ac:CountryCodeType"/>
					<xs:element minOccurs="0" name="sendCurrency" type="ac:CurrencyCodeType"/>
					<xs:element minOccurs="1" name="allOptions" type="xs:boolean"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="feeLookupBySendCountryResponse" type="ac:FeeLookupBySendCountryResponse"/>
	<xs:complexType name="FeeLookupBySendCountryResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element maxOccurs="unbounded" minOccurs="0" name="countryFeeInfo" type="ac:CountryFeeInfo"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:element name="feeLookupRequest" type="ac:FeeLookupRequest"/>
	<xs:complexType name="FeeLookupRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="mgiSessionType" type="ac:SessionType"/>
					<xs:element minOccurs="0" name="productVariant" type="ac:ProductVariantType"/>
					<xs:choice>
						<xs:annotation>
							<xs:appinfo>this is some app info</xs:appinfo>
							<xs:documentation>Only one of amountIncludingFee, amountExcludingFee or
								receiveAmount should be sent. One is required</xs:documentation>
						</xs:annotation>
						<xs:element minOccurs="0" name="amountIncludingFee" type="ac:AmountNonZeroType"/>
						<xs:element minOccurs="0" name="amountExcludingFee" type="ac:AmountIncludeZeroType"/>
						<xs:element minOccurs="0" name="receiveAmount" type="ac:AmountNonZeroType"/>
					</xs:choice>
					<xs:element minOccurs="1" name="destinationCountry" type="ac:CountryCodeType"/>
					<xs:element minOccurs="0" name="destinationCountrySubdivisionCode" type="ac:CountrySubdivisionCodeType"/>
					<!--ACINTERNAL-START-->
					<xs:element minOccurs="0" name="sendCountry" type="ac:CountryCodeType"/>
					<!--ACINTERNAL-END-->
					<xs:element minOccurs="0" name="serviceOption" type="ac:ServiceOptionType"/>
					<xs:element minOccurs="0" name="mgiRewardsNumber" type="ac:StringMax20Type"/>
					<xs:element minOccurs="0" name="receiveCode" type="ac:ReceiveCodeType"/>
					<xs:element minOccurs="0" name="receiveAgentID" type="ac:AgentIDType"/>
					<xs:element minOccurs="0" name="receiveCurrency" type="ac:CurrencyCodeType"/>
					<xs:element minOccurs="0" name="sendCurrency" type="ac:CurrencyCodeType"/>
					<xs:element minOccurs="0" name="mgCustomerReceiveNumber" type="ac:MgCustomerReceiveNumberType"/>
					<xs:element minOccurs="0" name="defaultInformationalFee" type="ac:AmountIncludeZeroType"/>
					<xs:element minOccurs="0" name="serviceOfferingID" type="ac:ServiceOfferingIDType"/>
					<xs:element minOccurs="1" name="defaultMaxFee" type="xs:boolean"/>
					<xs:element minOccurs="1" name="allOptions" type="xs:boolean"/>
					<xs:element maxOccurs="1" minOccurs="0" name="promoCodes">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="promoCode" type="ac:StringMax20Type"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="feeLookupResponse" type="ac:FeeLookupResponse"/>
	<xs:complexType name="FeeLookupResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element maxOccurs="1" minOccurs="0" name="feeInfos">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="feeInfo" type="ac:FeeInfo"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getAllErrorsRequest" type="ac:GetAllErrorsRequest"/>
	<xs:complexType name="GetAllErrorsRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="cachedVersion" type="ac:VersionType">
						<xs:annotation>
							<xs:documentation> 
								If cachedVersion is null, or does not match the current version, getAllErrors will return the current version.
								Otherwise, getAllErrors returns an empty payload.
								Clients should update their cache only on successful completion with new data. 
								When data is returned, it is complete (i.e. it returns all errors - not just differences).								
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getAllErrorsResponse" type="ac:GetAllErrorsResponse"/>
	<xs:complexType name="GetAllErrorsResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="0" name="version" type="ac:VersionType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="definedErrors">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="definedError" type="ac:GenericBusinessError"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getAllFieldsRequest" type="ac:GetAllFieldsRequest"/>
	<xs:complexType name="GetAllFieldsRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="cachedVersion" type="ac:VersionType">
						<xs:annotation>
							<xs:documentation> 	
								If cachedVersion is null, or does not match the current version, getAllFields will return the current version.
								Otherwise, getAllFields returns an empty payload.
								Clients should update their cache only on successful completion with new data. 
								When data is returned, it is complete (i.e. it returns all fields for the transactionType - not just differences).
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="1" name="transactionType" type="ac:EnumType">
						<xs:annotation>
							<xs:documentation> 
								Use the getEnumerations API to find valid transationTypes. Examples include: SEND, RECEIVE, etc.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getAllFieldsResponse" type="ac:GetAllFieldsResponse"/>
	<xs:complexType name="GetAllFieldsResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="0" name="version" type="ac:VersionType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="infos" type="ac:InfosType"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getBankDetailsByLevelRequest" type="ac:GetBankDetailsByLevelRequest"/>
	<xs:complexType name="GetBankDetailsByLevelRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="countryCode" type="ac:CountryCodeType"/>
					<xs:element minOccurs="1" name="hierarchyLevelNumber" type="xs:int"/>
					<xs:element minOccurs="0" name="previousLevelElementNumber" type="xs:long"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getBankDetailsByLevelResponse" type="ac:GetBankDetailsByLevelResponse"/>
	<xs:complexType name="GetBankDetailsByLevelResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="hierarchyLevelNumber" type="xs:int"/>
										<xs:element minOccurs="0" name="hierarchyLevelLabel" type="xs:string"/>
										<xs:element maxOccurs="unbounded" minOccurs="1" name="hierarchyLevelInfos" type="ac:HierarchyLevelInfo"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getBankDetailsRequest" type="ac:GetBankDetailsRequest"/>
	<xs:complexType name="GetBankDetailsRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="countryCode" type="ac:CountryCodeType"/>
					<xs:element minOccurs="1" name="infoKey" type="xs:string"/>
					<xs:element minOccurs="1" name="value" type="xs:string"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getBankDetailsResponse" type="ac:GetBankDetailsResponse"/>
	<xs:complexType name="GetBankDetailsResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element maxOccurs="1" minOccurs="0" name="currentValues" type="ac:CurrentValuesType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="infos" type="ac:InfosType"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:element name="getBroadcastMessagesRequest" type="ac:GetBroadcastMessagesRequest"/>
	<xs:complexType name="GetBroadcastMessagesRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="msgLanguageCode" type="xs:string"/>
					<xs:element name="offsetGMT" type="xs:string"/>
					<xs:element maxOccurs="1" minOccurs="0" name="messageInfos">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="messageInfo" type="ac:MessageInfo"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="customFields">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="customField" type="ac:CustomFieldsType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getBroadcastMessagesResponse" type="ac:GetBroadcastMessagesResponse"/>
	<xs:complexType name="GetBroadcastMessagesResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element name="status" type="xs:string"/>
										<xs:element maxOccurs="1" minOccurs="0" name="messageInfos">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="messageInfo" type="ac:MessageInfo"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:element name="getConsumerProfileTransactionHistoryRequest" type="ac:GetConsumerProfileTransactionHistoryRequest"/>
	<xs:complexType name="GetConsumerProfileTransactionHistoryRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
					<xs:element minOccurs="1" name="consumerProfileID" type="ac:ConsumerProfileIDType"/>
					<xs:element minOccurs="1" name="consumerProfileIDType" type="ac:ConsumerProfileIDTypeType"/>
					<xs:element minOccurs="0" name="startDate" type="xs:date"/>
					<xs:element minOccurs="0" name="endDate" type="xs:date"/>
					<xs:element minOccurs="1" name="maxRowsToReturn" type="xs:int">
						<xs:annotation>
							<xs:documentation>Identifies the maximum number of history records returned. 
								The maximum that is allowed is 50.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="1" name="sortDateOrder" type="xs:string">
						<xs:annotation>
							<xs:documentation>Defines the order data is returned. Valid types are:
								NEWEST_FIRST
								OLDEST_FIRST
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getConsumerProfileTransactionHistoryResponse" type="ac:GetConsumerProfileTransactionHistoryResponse"/>
	<xs:complexType name="GetConsumerProfileTransactionHistoryResponse">
		<xs:annotation>
			<xs:documentation>
				This API is to be used in conjunction with the getConsumerProfile API. 
				This API returns detailed transaction history, but does not return any information about the consumer profile.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="mgiSessionID" type="ac:MGISessionIDType">
											<xs:annotation>
												<xs:documentation>Returns new sessionID if needed. Otherwise returns the session ID from the request.</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element minOccurs="1" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
										<xs:element minOccurs="1" name="numberOfRowsFound" type="xs:int"/>
										<xs:element maxOccurs="1" minOccurs="0" name="transactions">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="transaction" type="ac:ConsumerProfileTransactionHistoryType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element maxOccurs="1" minOccurs="0" name="infos" type="ac:InfosType"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getCountryInfoRequest" type="ac:GetCountryInfoRequest"/>
	<xs:complexType name="GetCountryInfoRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="cachedVersion" type="ac:VersionType">
						<xs:annotation>
							<xs:documentation> 
								If cachedVersion is null, or does not match the current version, getCountryInfo will return the current version.
								Otherwise, getCountryInfo returns an empty payload.
								Clients should update their cache only on successful completion with new data. 
								When data is returned, it is complete (i.e. it returns all countries - not just differences).
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="lookupKey" type="ac:EnumType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getCountryInfoResponse" type="ac:GetCountryInfoResponse"/>
	<xs:complexType name="GetCountryInfoResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="version" type="ac:VersionType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="countryInfos">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="1" name="countryInfo" type="ac:CountryInfo"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getCountrySubdivisionRequest" type="ac:GetCountrySubdivisionRequest"/>
	<xs:complexType name="GetCountrySubdivisionRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="cachedVersion" type="ac:VersionType">
						<xs:annotation>
							<xs:documentation> 
								If cachedVersion is null, or does not match the current version, getCountrySubdivision will return the current version.
								Otherwise, getCountrySubdivision returns an empty payload.
								Clients should update their cache only on successful completion with new data. 
								When data is returned, it is complete (i.e. it returns all country subdivisions - not just differences).
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="countryCode" type="ac:CountryCodeType">
						<xs:annotation>
							<xs:documentation> If countryCode is null, returns all subdivisions for all
								countries. If countryCode is not null, the countryCode is validated and only
								subdivisions for that country are returned. 
								If countryCode is invalid, returns an error. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getCountrySubdivisionResponse" type="ac:GetCountrySubdivisionResponse"/>
	<xs:complexType name="GetCountrySubdivisionResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="version" type="ac:VersionType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="countrySubdivisionInfos">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="1" name="countrySubdivisionInfo" type="ac:CountrySubdivisionInfo"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getCurrencyInfoRequest" type="ac:GetCurrencyInfoRequest"/>
	<xs:complexType name="GetCurrencyInfoRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="version" type="ac:VersionType">
						<xs:annotation>
							<xs:documentation>
								If cachedVersion is null, or does not match the current version, getCurrencyInfo will return the current version.
								Otherwise, getCurrencyInfo returns an empty payload.
								Clients should update their cache only on successful completion with new data. 
								When data is returned, it is complete (i.e. it returns all currencies - not just differences).
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getCurrencyInfoResponse" type="ac:GetCurrencyInfoResponse"/>
	<xs:complexType name="GetCurrencyInfoResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="version" type="ac:VersionType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="currencyInfos">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="1" name="currencyInfo" type="ac:CurrencyInfo"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:element name="getDebugDataRequest" type="ac:GetDebugDataRequest"/>
	<xs:complexType name="GetDebugDataRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="currentDate" type="xs:dateTime"/>
					<xs:element name="sequenceNumber" type="xs:int"/>
					<xs:element minOccurs="0" name="nextTransmission" type="xs:boolean"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getDebugDataResponse" type="ac:GetDebugDataResponse"/>
	<xs:complexType name="GetDebugDataResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element name="endOfLog" type="xs:boolean"/>
										<xs:element name="collectionEndTimestamp" type="xs:long"/>
										<xs:element name="length" type="xs:integer"/>
										<xs:element name="sequenceNumber" type="xs:integer"/>
										<xs:element name="debugData" type="xs:anyType"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:element name="getDepositBankListRequest" type="ac:GetDepositBankListRequest"/>
	<xs:complexType name="GetDepositBankListRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="countryCode" type="ac:CountryCodeType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getDepositBankListResponse" type="ac:GetDepositBankListResponse"/>
	<xs:complexType name="GetDepositBankListResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element maxOccurs="unbounded" minOccurs="0" name="bank" type="ac:BankInfo"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:element name="getDepositInformationRequest" type="ac:GetDepositInformationRequest"/>
	<xs:complexType name="GetDepositInformationRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="maxDepositsToReturn" type="ac:Int3Type"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getDepositInformationResponse" type="ac:GetDepositInformationResponse"/>
	<xs:complexType name="GetDepositInformationResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="startingARBalance" type="ac:AmountIncludeZeroType"/>
										<xs:element minOccurs="1" name="depositAndProofTotalAmount" type="ac:AmountIncludeZeroType"/>
										<xs:element minOccurs="1" name="outstandingTransactionTotalAmount" type="ac:AmountIncludeZeroType"/>
										<xs:element minOccurs="1" name="currentCreditLimit" type="ac:AmountIncludeZeroType"/>
										<xs:element minOccurs="1" name="outstandingBalance" type="ac:AmountIncludeZeroType"/>
										<xs:element minOccurs="1" name="availableCredit" type="ac:AmountIncludeZeroType"/>
										<xs:element maxOccurs="unbounded" minOccurs="0" name="depositAndProofInfo" type="ac:DepositAndProofInfo"/>
										<xs:element maxOccurs="1" minOccurs="0" name="partnerCredit" type="ac:PartnerCreditType"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:element name="getEnumerationsRequest" type="ac:GetEnumerationsRequest"/>
	<xs:complexType name="GetEnumerationsRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="cachedVersion" type="ac:VersionType">
						<xs:annotation>
							<xs:documentation> 	
								If cachedVersion is null, or does not match the current version, getEnumerations will return the current version.
								Otherwise, getEnumerations returns an empty payload.
								Clients should update their cache only on successful completion with new data. 
								When data is returned, it is complete (i.e. it returns all enumerations - not just differences).
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="enumerationName" type="ac:EnumerationNameType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getEnumerationsResponse" type="ac:GetEnumerationsResponse"/>
	<xs:complexType name="GetEnumerationsResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="0" name="version" type="ac:VersionType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="enumerations">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="enumeration" nillable="false" type="ac:EnumeratedTypeInfo"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:element name="getPersonalIDImageRequest" type="ac:GetPersonalIDImageRequest"/>
	<xs:complexType name="GetPersonalIDImageRequest">
		<xs:annotation>
			<xs:documentation>
				This API gets an image from MGI system.  
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="consumerProfileID" type="ac:ConsumerProfileIDType"/>
					<xs:element minOccurs="1" name="consumerProfileIDType" type="ac:ConsumerProfileIDTypeType"/>
					<xs:element minOccurs="1" name="personalIDChoice" type="ac:StringMax80Type"/>
					<xs:element minOccurs="1" name="personalIDVerificationStr" type="ac:StringMax20Type"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getPersonalIDImageResponse" type="ac:GetPersonalIDImageResponse"/>
	<xs:complexType name="GetPersonalIDImageResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="mimeType" type="ac:MimeType">
											<xs:annotation>
												<xs:documentation>Images sent from the POE will be required
													to specify the corresponding mime-type of the image from the
													currently supported list:
						
													image/gif
													image/jpeg
												</xs:documentation>
											</xs:annotation>
										</xs:element>	
										<xs:element minOccurs="0" name="imageItems">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="imageItem" type="ac:ImageItemType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->	
	<!--ACINTERNAL-START-->
	<xs:element name="getConsumerProfileDocumentRequest" type="ac:GetConsumerProfileDocumentRequest"/>
	<xs:complexType name="GetConsumerProfileDocumentRequest">
		<xs:annotation>
			<xs:documentation>
				This API gets a consumer profile document/image from MGI system.   
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="consumerProfileID" type="ac:ConsumerProfileIDType"/>
					<xs:element minOccurs="1" name="consumerProfileIDType" type="ac:ConsumerProfileIDTypeType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getConsumerProfileDocumentResponse" type="ac:GetConsumerProfileDocumentResponse"/>
	<xs:complexType name="GetConsumerProfileDocumentResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="mimeType" type="ac:MimeType">
											<xs:annotation>
												<xs:documentation>Images sent from the POE will be required
													to specify the corresponding mime-type of the image from the
													currently supported list:					
													image/gif
													image/jpeg
													image/pdf
												</xs:documentation>
											</xs:annotation>
										</xs:element>	
										<xs:element minOccurs="0" name="imageItems">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="imageItem" type="ac:ImageItemType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:element name="getProfileConsumerRequest" type="ac:GetProfileConsumerRequest"/>
	<xs:complexType name="GetProfileConsumerRequest">
		<xs:annotation>
			<xs:documentation>
				This API is to be used in to return consumer profile information. 
								
				This API is used outside the send, billpayment or receive flows. Or when the flow is unknown at this time.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
					<xs:element minOccurs="1" name="consumerProfileID" type="ac:ConsumerProfileIDType"/>
					<xs:element minOccurs="1" name="consumerProfileIDType" type="ac:ConsumerProfileIDTypeType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getProfileConsumerResponse" type="ac:GetProfileConsumerResponse"/>
	<xs:complexType name="GetProfileConsumerResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="mgiSessionID" type="ac:MGISessionIDType">
											<xs:annotation>
												<xs:documentation>Returns new sessionID when not sent on request. Otherwise, returns current sessionID.</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element minOccurs="1" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="currentValues" type="ac:CurrentValuesType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="infos" type="ac:InfosType"/>
										</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getProfileReceiverRequest" type="ac:GetProfileReceiverRequest"/>
	<xs:complexType name="GetProfileReceiverRequest">
		<xs:annotation>
			<xs:documentation>
				This API is to be used in to return consumer profile information. 
				
				This API is to be used within the receive flow.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
					<xs:element minOccurs="1" name="consumerProfileID" type="ac:ConsumerProfileIDType"/>
					<xs:element minOccurs="1" name="consumerProfileIDType" type="ac:ConsumerProfileIDTypeType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getProfileReceiverResponse" type="ac:GetProfileReceiverResponse"/>
	<xs:complexType name="GetProfileReceiverResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="mgiSessionID" type="ac:MGISessionIDType">
											<xs:annotation>
												<xs:documentation>Returns new sessionID when not sent on request. Otherwise, returns current sessionID.</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element minOccurs="1" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="currentValues" type="ac:CurrentValuesType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="infos" type="ac:InfosType"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getProfileSenderRequest" type="ac:GetProfileSenderRequest"/>
	<xs:complexType name="GetProfileSenderRequest">
		<xs:annotation>
			<xs:documentation>
				This API is to be used in to return consumer profile information. 
				It can also be used to return previous receivers/billers to facilitate repeat transactions. 
				
				This API is to be used within the send or billpayment flows.
								
				This API does not return a complete history of transactions.
				If complete history is needed, use getConsumerProfileTransactionHistory.
				
				For example, if a consumer has sent to the same receiver (with the same delivery option)
				on multiple occasions, only one instance will be returned in this API.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
					<xs:element minOccurs="1" name="consumerProfileID" type="ac:ConsumerProfileIDType"/>
					<xs:element minOccurs="1" name="consumerProfileIDType" type="ac:ConsumerProfileIDTypeType"/>
					<xs:element minOccurs="1" name="maxReceiversToReturn" type="xs:int">
						<xs:annotation>
							<xs:documentation>Identifies the maximum number of receiver records returned. 
								Records returned will be most recent first.
								The maximum that is allowed is 50.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="1" name="maxBillersToReturn" type="xs:int">
						<xs:annotation>
							<xs:documentation>Identifies the maximum number of receiver records returned. 
								Records returned will be most recent first.
								The maximum that is allowed is 50.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getProfileSenderResponse" type="ac:GetProfileSenderResponse"/>
	<xs:complexType name="GetProfileSenderResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="mgiSessionID" type="ac:MGISessionIDType">
											<xs:annotation>
												<xs:documentation>Returns new sessionID when not sent on request. Otherwise, returns current sessionID.</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element minOccurs="1" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="currentValues" type="ac:CurrentValuesType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="infos" type="ac:InfosType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="receivers">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="receiver" type="ac:CurrentValuesType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element maxOccurs="1" minOccurs="0" name="billers">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="biller" type="ac:CurrentValuesType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:element name="getReceiptForReprintRequest" type="ac:GetReceiptForReprintRequest"/>
	<xs:complexType name="GetReceiptForReprintRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="referenceNumber" type="ac:ReferenceNumberType"/>
					<xs:element minOccurs="1" name="receiptType" type="ac:ReprintReceiptType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getReceiptForReprintResponse" type="ac:GetReceiptForReprintResponse"/>
	<xs:complexType name="GetReceiptForReprintResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="0" name="receiptMimeType" type="ac:MimeType"/>
										<xs:element minOccurs="0" name="agentReceiptMimeData" type="xs:base64Binary" xmime:expectedContentTypes="*/*"/>
										<xs:element minOccurs="0" name="consumerReceipt1MimeData" type="xs:base64Binary" xmime:expectedContentTypes="*/*"/>
										<xs:element minOccurs="0" name="consumerReceipt2MimeData" type="xs:base64Binary" xmime:expectedContentTypes="*/*"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:element name="getServiceOptionsRequest" type="ac:GetServiceOptionsRequest"/>
	<xs:complexType name="GetServiceOptionsRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="agentAllowedOnly" type="xs:boolean"/>
					<xs:element minOccurs="0" name="destinationCountry" type="ac:CountryCodeType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getServiceOptionsResponse" type="ac:GetServiceOptionsResponse"/>
	<xs:complexType name="GetServiceOptionsResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element maxOccurs="1" minOccurs="0" name="destinationCountryInfos">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="destinationCountryInfo" type="ac:DestinationCountryInfo"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getUCPByConsumerAttributesRequest" type="ac:GetUCPByConsumerAttributesRequest"/>
	<xs:complexType name="GetUCPByConsumerAttributesRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element name="functionName" type="xs:string">
						<xs:annotation>
							<xs:documentation>function name that will be executed by services.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="repeatRequest" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>Flag indicating whether the maintain UCP request is a first time or repeat request.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="plusEnrollmentFlag" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>Flag indicating whether mgi plus number enrollment is required.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="responseFilter" type="ac:StringMax20Type"/>
					<xs:element name="consumerProfile" type="ac:UCPRequestProfileType"/>
					<xs:element minOccurs="0" name="id" type="ac:ConsumerProfileIDType">
						<xs:annotation>
							<xs:documentation>Attribute specifying the actual consumer profile identifier (ID) of the consumer profile to be retrieved for this GetUCP request.  </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="type" type="ac:ConsumerProfileIDTypeType">
						<xs:annotation>
							<xs:documentation>Attribute specifying the type of consumer profile identifier being passed in the request.  </xs:documentation>
						</xs:annotation>
					</xs:element>	
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="getUCPByConsumerAttributesResponse" type="ac:GetUCPByConsumerAttributesResponse"/>
	<xs:complexType name="GetUCPByConsumerAttributesResponse">		
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element name="consumerProfile" type="ac:UCPResponseProfileType"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="industryRequest" type="ac:IndustryRequest"/>
	<xs:complexType name="IndustryRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="industryResponse" type="ac:IndustryResponse"/>
	<xs:complexType name="IndustryResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element maxOccurs="unbounded" minOccurs="0" name="industryInfoList" type="ac:IndustryInfo"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:element name="initialSetupRequest" type="ac:InitialSetupRequest"/>
	<xs:complexType name="InitialSetupRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="password" type="ac:StringMax8Type"/>
					<xs:element minOccurs="0" name="timeZoneName" type="xs:string"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="initialSetupResponse" type="ac:InitialSetupResponse"/>
	<xs:complexType name="InitialSetupResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="0" name="token" type="ac:TokenType"/>
										<xs:element minOccurs="1" name="unitProfileID" type="xs:int"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:element name="injectedInstructionRequest" type="ac:InjectedInstructionRequest"/>
	<xs:complexType name="InjectedInstructionRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="previousPOETransactionID" type="xs:string"/>
					<xs:element minOccurs="1" name="additionalTransactionInfo" type="xs:string"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="injectedInstructionResponse" type="ac:InjectedInstructionResponse"/>
	<xs:complexType name="InjectedInstructionResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload"/>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:element name="moneyGramReceiveDetailReportRequest" type="ac:MoneyGramReceiveDetailReportRequest"/>
	<xs:complexType name="MoneyGramReceiveDetailReportRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="activityDate" type="xs:date"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="moneyGramReceiveDetailReportResponse" type="ac:MoneyGramReceiveDetailReportResponse"/>
	<xs:complexType name="MoneyGramReceiveDetailReportResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element maxOccurs="unbounded" minOccurs="0" name="reportInfo" type="ac:MoneyGramReceiveDetailInfo"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="moneyGramReceiveSummaryReportRequest" type="ac:MoneyGramReceiveSummaryReportRequest"/>
	<xs:complexType name="MoneyGramReceiveSummaryReportRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="activityDate" type="xs:date"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="moneyGramReceiveSummaryReportResponse" type="ac:MoneyGramReceiveSummaryReportResponse"/>
	<xs:complexType name="MoneyGramReceiveSummaryReportResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element maxOccurs="unbounded" minOccurs="0" name="reportInfo" type="ac:MoneyGramReceiveSummaryInfo"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="moneyGramSendDetailReportRequest" type="ac:MoneyGramSendDetailReportRequest"/>
	<xs:complexType name="MoneyGramSendDetailReportRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="activityDate" type="xs:date"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="moneyGramSendDetailReportResponse" type="ac:MoneyGramSendDetailReportResponse"/>
	<xs:complexType name="MoneyGramSendDetailReportResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element maxOccurs="unbounded" minOccurs="0" name="reportInfo" type="ac:MoneyGramSendDetailInfo"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="moneyGramSendDetailReportWithTaxRequest" type="ac:MoneyGramSendDetailReportWithTaxRequest"/>
	<xs:complexType name="MoneyGramSendDetailReportWithTaxRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="activityDate" type="xs:date"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="moneyGramSendDetailReportWithTaxResponse" type="ac:MoneyGramSendDetailReportWithTaxResponse"/>
	<xs:complexType name="MoneyGramSendDetailReportWithTaxResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element maxOccurs="unbounded" minOccurs="0" name="reportInfo" type="ac:MoneyGramSendWithTaxDetailInfo"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="moneyGramSendSummaryReportRequest" type="ac:MoneyGramSendSummaryReportRequest"/>
	<xs:complexType name="MoneyGramSendSummaryReportRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="activityDate" type="xs:date"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="moneyGramSendSummaryReportResponse" type="ac:MoneyGramSendSummaryReportResponse"/>
	<xs:complexType name="MoneyGramSendSummaryReportResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element maxOccurs="unbounded" minOccurs="0" name="reportInfo" type="ac:MoneyGramSendSummaryInfo"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:element name="moneyOrderTotalRequest" type="ac:MoneyOrderTotalRequest"/>
	<xs:complexType name="MoneyOrderTotalRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="batchID" type="ac:StringMax20Type"/>
					<xs:element minOccurs="0" name="batchCount" type="ac:Int11Type"/>
					<xs:element minOccurs="0" name="batchTotal" type="ac:AmountIncludeZeroType"/>
					<xs:element minOccurs="0" name="moAccountNumber" type="ac:String14Type"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="moneyOrderTotalResponse" type="ac:MoneyOrderTotalResponse"/>
	<xs:complexType name="MoneyOrderTotalResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="0" name="batchID" type="ac:StringMax20Type"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:element name="openOTPLoginRequest" type="ac:OpenOTPLoginRequest"/>
	<xs:complexType name="OpenOTPLoginRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="ldapUserId" type="xs:string"/>
					<xs:element minOccurs="1" name="password" type="xs:string"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="openOTPLoginResponse" type="ac:OpenOTPLoginResponse"/>
	<xs:complexType name="OpenOTPLoginResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="loginSuccessful" type="xs:boolean"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:element name="profileChangeRequest" type="ac:ProfileChangeRequest"/>
	<xs:complexType name="ProfileChangeRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element name="profile" type="xs:string"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="profileChangeResponse" type="ac:ProfileChangeResponse"/>
	<xs:complexType name="ProfileChangeResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload"/>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:element name="profileRequest" type="ac:ProfileRequest"/>
	<xs:complexType name="ProfileRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="profileResponse" type="ac:ProfileResponse"/>
	<xs:complexType name="ProfileResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element maxOccurs="unbounded" minOccurs="1" name="profileItem" type="ac:ProfileItemType"/>
										<xs:element maxOccurs="unbounded" minOccurs="1" name="productProfileItem" type="ac:ProductProfileItemType"/>
										<xs:element maxOccurs="unbounded" minOccurs="0" name="employeeProfileItem" type="ac:EmployeeProfileItemType"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:element name="promotionLookupByCodeRequest" type="ac:PromotionLookupByCodeRequest"/>
	<xs:complexType name="PromotionLookupByCodeRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="promotionCode" type="ac:StringMax20Type"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="promotionLookupByCodeResponse" type="ac:PromotionLookupByCodeResponse"/>
	<xs:complexType name="PromotionLookupByCodeResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element maxOccurs="1" minOccurs="0" name="promotionLookupInfo" type="ac:PromotionLookupInfo"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:element name="receiptsFormatDetailsRequest" type="ac:ReceiptsFormatDetailsRequest"/>
	<xs:complexType name="ReceiptsFormatDetailsRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="paperFormat" type="ac:PaperFormatType"/>
					<xs:element minOccurs="0" name="mimeType" type="ac:MimeType"/>
					<xs:element minOccurs="0" name="downloadAsAttachment" type="xs:boolean"/>
					<xs:element maxOccurs="1" minOccurs="1" name="languages">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="1" name="longLanguageCode" type="ac:LanguageLongCodeType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="dcaTokenValues">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="dcaToken" type="ac:DCATokenType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="receiptTypeValues">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="1" name="receiptType" type="ac:ReceiptType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:element name="receiptsFormatDetailsResponse" type="ac:ReceiptsFormatDetailsResponse"/>
	<xs:complexType name="ReceiptsFormatDetailsResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element maxOccurs="unbounded" minOccurs="1" name="receiptFormatDetails" type="ac:ReceiptFormatDetailsType"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:element name="receiveReversalValidationRequest" type="ac:ReceiveReversalValidationRequest"/>
	<xs:complexType name="ReceiveReversalValidationRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
					<xs:element minOccurs="1" name="receiveAmount" type="ac:AmountNonZeroType"/>
					<xs:element minOccurs="1" name="receiveCurrency" type="ac:CurrencyCodeType"/>
					<xs:element maxOccurs="1" minOccurs="0" name="fieldValues">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="fieldValue" type="ac:KeyValuePairType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="verifiedFields">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="infoKey" type="ac:InfoKeyType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element minOccurs="0" name="primaryReceiptLanguage" type="ac:LocaleType"/>
					<xs:element minOccurs="0" name="secondaryReceiptLanguage" type="ac:LocaleType"/>
					<xs:element maxOccurs="1" minOccurs="0" name="receiptImages">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="receiptImage" type="ac:ReceiptImageContentType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="receiveReversalValidationResponse" type="ac:ReceiveReversalValidationResponse"/>
	<xs:complexType name="ReceiveReversalValidationResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="mgiSessionID" type="ac:MGISessionIDType"/>
										<xs:element minOccurs="1" name="readyForCommit" type="xs:boolean"/>
										<xs:element minOccurs="1" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="fieldsToCollect">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="fieldToCollect" type="ac:InfoBase"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element minOccurs="0" name="receipts" type="ac:PreCompletionReceiptType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="receiptInfo">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="1" minOccurs="0" name="disclosureTexts">
														<xs:complexType>
															<xs:sequence>
																<xs:element maxOccurs="unbounded" minOccurs="0" name="disclosureText" type="ac:TextTranslationType"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="receiveValidationRequest" type="ac:ReceiveValidationRequest"/>
	<xs:complexType name="ReceiveValidationRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
					<xs:element minOccurs="1" name="transactionStaging" type="xs:boolean"/>
					<xs:element minOccurs="1" name="receiveCurrency" type="ac:CurrencyCodeType"/>
					<xs:element minOccurs="1" name="receiveAmount" type="ac:AmountNonZeroType"/>
					<xs:element maxOccurs="1" minOccurs="0" name="fieldValues">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="fieldValue" type="ac:KeyValuePairType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="verifiedFields">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="infoKey" type="ac:InfoKeyType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element minOccurs="0" name="primaryReceiptLanguage" type="ac:LocaleType"/>
					<xs:element minOccurs="0" name="secondaryReceiptLanguage" type="ac:LocaleType"/>
					<xs:element maxOccurs="1" minOccurs="0" name="receiptImages">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="receiptImage" type="ac:ReceiptImageContentType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="receiveValidationResponse" type="ac:ReceiveValidationResponse"/>
	<xs:complexType name="ReceiveValidationResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="mgiSessionID" type="ac:MGISessionIDType"/>
										<!--ACINTERNAL-START-->
										<xs:element minOccurs="0" name="token" type="ac:TokenType"/>
										<!--ACINTERNAL-END-->
										<xs:element minOccurs="1" name="readyForCommit" type="xs:boolean"/>
										<xs:element minOccurs="1" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="fieldsToCollect">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="fieldToCollect" type="ac:InfoBase"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element minOccurs="0" name="receipts" type="ac:PreCompletionReceiptType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="receiptInfo">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="1" minOccurs="0" name="disclosureTexts">
														<xs:complexType>
															<xs:sequence>
																<xs:element maxOccurs="unbounded" minOccurs="0" name="disclosureText" type="ac:TextTranslationType"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:element name="registerHardTokenRequest" type="ac:RegisterHardTokenRequest"/>
	<xs:complexType name="RegisterHardTokenRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="ldapUserId" type="xs:string"/>
					<xs:element minOccurs="1" name="hardToken" type="xs:string"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="registerHardTokenResponse" type="ac:RegisterHardTokenResponse"/>
	<xs:complexType name="RegisterHardTokenResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="registrationSuccessful" type="xs:boolean"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:element name="saveConsumerProfileImageRequest" type="ac:SaveConsumerProfileImageRequest"/>
	<xs:complexType name="SaveConsumerProfileImageRequest">
		<xs:annotation>
			<xs:documentation>
				This API saves an image to a consumer profile.  
				This API is used when the createOrUpdateConsumerProfileRequest requires a personalIDx_ImageReferenceID.
				The returned imageReferenceID needs to be returned on the createOrUpdateConsumerProfileRequest where it's referenced.
				The personalIDx information needs to be sent in the fieldValues to ensure the image is saved with the correct personal ID information.
				
				This API uses GAF with a transactionType of "saveConsumerProfileImage"
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
					<xs:element minOccurs="1" name="consumerProfileID" type="ac:ConsumerProfileIDType"/>
					<xs:element minOccurs="1" name="consumerProfileIDType" type="ac:ConsumerProfileIDTypeType"/>
					<xs:element maxOccurs="1" minOccurs="1" name="ConsumerProfileImage" type="ac:ConsumerProfileImageContentType">
						<xs:annotation>
							<xs:documentation>The corresponding ID information must be sent within the fieldValues
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="fieldValues">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="fieldValue" type="ac:KeyValuePairType">
									<xs:annotation>
										<xs:documentation>No profile ID fields are allowed in the key/value pairs. 
											Except Plus Number or IDs the user sees/enters.
										</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="saveConsumerProfileImageResponse" type="ac:SaveConsumerProfileImageResponse"/>
	<xs:complexType name="SaveConsumerProfileImageResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="mgiSessionID" type="ac:MGISessionIDType"/>
										<xs:element minOccurs="1" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
										<xs:element minOccurs="0" name="ImageReferenceID" type="ac:StringMax255Type"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:element name="savePersonalIDImageRequest" type="ac:SavePersonalIDImageRequest"/>
	<xs:complexType name="SavePersonalIDImageRequest">
		<xs:annotation>
			<xs:documentation>
				This API saves captured Personal ID document to MGI system.  
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="consumerProfileID" type="ac:ConsumerProfileIDType"/>
					<xs:element minOccurs="1" name="consumerProfileIDType" type="ac:ConsumerProfileIDTypeType"/>
					<xs:element maxOccurs="1" minOccurs="1" name="personalIDImage" type="ac:PersonalIDImageContentType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="savePersonalIDImageResponse" type="ac:SavePersonalIDImageResponse"/>
	<xs:complexType name="SavePersonalIDImageResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="0" name="imageReferenceId" type="ac:StringMax255Type"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->	
	<!--ACINTERNAL-START-->
	<xs:element name="saveConsumerProfileDocumentRequest" type="ac:SaveConsumerProfileDocumentRequest"/>
	<xs:complexType name="SaveConsumerProfileDocumentRequest">
		<xs:annotation>
			<xs:documentation>
				This API is used to upload a consumer profile related document to MGI system such as a captured
				proof of address document. Howeverfor captured personal ID document, savePersonalIDImage should be used instead.   
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="1" name="consumerProfileID" type="ac:ConsumerProfileIDType"/>
					<xs:element minOccurs="1" name="consumerProfileIDType" type="ac:ConsumerProfileIDTypeType"/>
					<xs:element maxOccurs="1" minOccurs="1" name="consumerProfileDocument" type="ac:ConsumerProfileDocumentContentType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="saveConsumerProfileDocumentResponse" type="ac:SaveConsumerProfileDocumentResponse"/>
	<xs:complexType name="SaveConsumerProfileDocumentResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="0" name="imageReferenceId" type="ac:StringMax255Type"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->	
	<!--ACINTERNAL-START-->
	<xs:element name="saveDebugDataRequest" type="ac:SaveDebugDataRequest"/>
	<xs:complexType name="SaveDebugDataRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element name="endOfLog" type="xs:boolean"/>
					<xs:element name="collectionEndTimestamp" type="xs:long"/>
					<xs:element name="length" type="xs:integer"/>
					<xs:element name="sequenceNumber" type="xs:integer"/>
					<xs:element name="debugData" type="xs:string"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="saveDebugDataResponse" type="ac:SaveDebugDataResponse"/>
	<xs:complexType name="SaveDebugDataResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload"/>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:element name="saveProfileRequest" type="ac:SaveProfileRequest"/>
	<xs:complexType name="SaveProfileRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="profileItems">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="profileItem" type="ac:ProfileItemType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="productProfileItems">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="productProfileItem" type="ac:ProductProfileItemType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="employeeProfileItems">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="employeeProfileItem" type="ac:EmployeeProfileItemType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="saveProfileResponse" type="ac:SaveProfileResponse"/>
	<xs:complexType name="SaveProfileResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload"/>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:element name="saveSubagentsRequest" type="ac:SaveSubagentsRequest"/>
	<xs:complexType name="SaveSubagentsRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="subagentProfileUpdates">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="subagentProfileUpdate" type="ac:SubagentProfileUpdateType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="saveSubagentsResponse" type="ac:SaveSubagentsResponse"/>
	<xs:complexType name="SaveSubagentsResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload"/>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:element name="saveTransactionDocumentRequest" type="ac:SaveTransactionDocumentRequest"/>
	<xs:complexType name="SaveTransactionDocumentRequest">
		<xs:annotation>
			<xs:documentation>
				This API uploads a document that is not of a Personal ID to be saved in MGI system, such as receipt, purpose of fund, etc.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:annotation>
						<xs:documentation>
							For CONSUMER_SIGNED_RECEIPT, both sessionType and referenceNumber are required. 
						</xs:documentation>
					</xs:annotation>
					<xs:element minOccurs="1" name="sessionType" type="ac:SessionType"/>
					<xs:element minOccurs="1" name="referenceNumber" type="ac:ReferenceNumberType"/>
					<xs:element minOccurs="0" name="senderFirstName" type="ac:NameFirstType"/>
					<xs:element minOccurs="0" name="senderMiddleName" type="ac:NameMiddleType"/>			
					<xs:element minOccurs="0" name="senderLastName" type="ac:NameLastType"/>
					<xs:element minOccurs="0" name="senderLastName2" type="ac:NameLastType"/>
					<xs:element minOccurs="0" name="receiverFirstName" type="ac:NameFirstType"/>
					<xs:element minOccurs="0" name="receiverMiddleName" type="ac:NameMiddleType"/>			
					<xs:element minOccurs="0" name="receiverLastName" type="ac:NameLastType"/>
					<xs:element minOccurs="0" name="receiverLastName2" type="ac:NameLastType"/>
					<xs:element minOccurs="1" name="identifier" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								Currently supported image identifier:
								CONSUMER_SIGNED_RECEIPT
								SOURCE_OF_FUND
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="1" name="mimeType" type="ac:MimeType">
						<xs:annotation>
							<xs:documentation>Images sent from the POE will be required
								to specify the corresponding mime-type of the image from the
								currently supported list:
								
								image/gif
								image/jpeg
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="1" name="documentItems">
						<xs:annotation>
							<xs:documentation> The max number of images in a document allowed currently is 2, enforced in the backend. 
							</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="1" name="documentItem" type="ac:DocumentItemType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="saveTransactionDocumentResponse" type="ac:SaveTransactionDocumentResponse"/>
	<xs:complexType name="SaveTransactionDocumentResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="0" name="documentId" type="ac:StringMax255Type"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:element name="searchConsumerProfilesRequest" type="ac:SearchConsumerProfilesRequest"/>
	<xs:complexType name="SearchConsumerProfilesRequest">
		<xs:annotation>
			<xs:documentation>
				This API is intended to be used as a precursor to getProfileXXX.
				
				The search parameters will be sent using key/value pairs. 
				Find the keys using GAF with a transactionType of "searchConsumerProfile".
				Find available search options using getConsumerSearchCriteria
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
					<xs:element maxOccurs="1" minOccurs="0" name="fieldValues">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="fieldValue" type="ac:KeyValuePairType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="searchConsumerProfilesResponse" type="ac:SearchConsumerProfilesResponse"/>
	<xs:complexType name="SearchConsumerProfilesResponse">
		<xs:annotation>
			<xs:documentation>		
				The response contains a collection of consumers, each with key/value pairs for the consumer information. 
				Find the keys using GAF with a transactionType of "SearchConsumerProfile".
				
				If a referenceNumber is used for the search, searchConsumerProfiles will validate the transaction is available to be received.
				If it is not, an error will be returned.
				
				No session ID will be created on this API. 
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="0" name="requestGAFVersionNumber" type="ac:GAFVersionNumberType"/>
										<xs:element minOccurs="0" name="responseGAFVersionNumber" type="ac:GAFVersionNumberType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="consumerProfileSearchInfos">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="consumerProfileSearch" type="ac:ConsumerProfileSearchInfo"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element maxOccurs="1" minOccurs="0" name="infos" type="ac:InfosType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="fieldsToCollect">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="fieldToCollect" type="ac:InfoBase"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="searchStagedTransactionsRequest" type="ac:SearchStagedTransactionsRequest"/>
	<xs:complexType name="SearchStagedTransactionsRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="mgiRewardsNumber" type="ac:StringMax20Type"/>
					<xs:element minOccurs="0" name="senderPhoneNumber" type="ac:PhoneShortType"/>
					<xs:element minOccurs="0" name="senderFirstName" type="ac:NameFirstType"/>
					<xs:element minOccurs="0" name="senderLastName" type="ac:NameLastType"/>
					<xs:element minOccurs="0" name="billerAccountNumber" type="ac:BillerAccountNumberType"/>
					<xs:element minOccurs="0" name="mgiSessionType" type="ac:SessionType">
						<xs:annotation>
							<xs:documentation> If sessionType is not provided, API assumes both Sends and BP </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="1" name="thisLocationOnly" type="xs:boolean"/>
					<xs:element minOccurs="0" name="maxRowsToReturn" type="ac:Int3Type"/>
					<xs:element minOccurs="1" name="returnFormFreeOnly" type="xs:boolean"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="searchStagedTransactionsResponse" type="ac:SearchStagedTransactionsResponse"/>
	<xs:complexType name="SearchStagedTransactionsResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element maxOccurs="1" minOccurs="0" name="stagedTransactionInfos">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="stagedTransactionInfo" type="ac:StagedTransactionInfo"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="sendReversalValidationRequest" type="ac:SendReversalValidationRequest"/>
	<xs:complexType name="SendReversalValidationRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
					<xs:element minOccurs="1" name="sendAmount" type="ac:AmountIncludeZeroType"/>
					<xs:element minOccurs="1" name="sendCurrency" type="ac:CurrencyCodeType"/>
					<xs:element minOccurs="1" name="feeRefund" type="xs:boolean"/>
					<xs:element maxOccurs="1" minOccurs="0" name="fieldValues">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="fieldValue" type="ac:KeyValuePairType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="verifiedFields">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="infoKey" type="ac:InfoKeyType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element minOccurs="0" name="primaryReceiptLanguage" type="ac:LocaleType"/>
					<xs:element minOccurs="0" name="secondaryReceiptLanguage" type="ac:LocaleType"/>
					<xs:element maxOccurs="1" minOccurs="0" name="receiptImages">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="receiptImage" type="ac:ReceiptImageContentType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="sendReversalValidationResponse" type="ac:SendReversalValidationResponse"/>
	<xs:complexType name="SendReversalValidationResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="mgiSessionID" type="ac:MGISessionIDType"/>
										<xs:element minOccurs="1" name="readyForCommit" type="xs:boolean"/>
										<xs:element minOccurs="1" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
										<xs:element minOccurs="0" name="sendAmount" type="ac:AmountNonZeroType"/>
										<xs:element minOccurs="0" name="sendCurrency" type="ac:CurrencyCodeType"/>
										<xs:element minOccurs="0" name="totalSendFees" type="ac:AmountIncludeZeroType"/>
										<xs:element minOccurs="0" name="totalSendTaxes" type="ac:AmountIncludeZeroType"/>
										<xs:element minOccurs="0" name="totalReversalAmount" type="ac:AmountNonZeroType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="detailSendAmounts">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="detailSendAmount" type="ac:AmountInfo"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element minOccurs="0" name="reversalType" type="ac:SendReversalType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="fieldsToCollect">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="fieldToCollect" type="ac:InfoBase"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element minOccurs="0" name="receipts" type="ac:PreCompletionReceiptType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="receiptInfo">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="1" minOccurs="0" name="disclosureTexts">
														<xs:complexType>
															<xs:sequence>
																<xs:element maxOccurs="unbounded" minOccurs="0" name="disclosureText" type="ac:TextTranslationType"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="sendValidationRequest" type="ac:SendValidationRequest"/>
	<xs:complexType name="SendValidationRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
					<xs:element minOccurs="1" name="transactionStaging" type="xs:boolean"/>
					<xs:element minOccurs="1" name="sendAmount" type="ac:AmountNonZeroType"/>
					<xs:element minOccurs="1" name="sendCurrency" type="ac:CurrencyCodeType"/>
					<!--ACINTERNAL-START-->
					<xs:element minOccurs="0" name="feeAmount" type="ac:AmountIncludeZeroType"/>
					<!--ACINTERNAL-END-->
					<xs:element maxOccurs="1" minOccurs="0" name="promoCodes">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="promoCode" type="ac:PromoCodeType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element minOccurs="1" name="destinationCountry" type="ac:CountryCodeType"/>
					<xs:element minOccurs="1" name="serviceOption" type="ac:ServiceOptionType"/>
					<xs:element minOccurs="1" name="receiveCurrency" type="ac:CurrencyCodeType"/>
					<xs:element minOccurs="0" name="receiveAgentID" type="ac:AgentIDType"/>
					<xs:element maxOccurs="1" minOccurs="0" name="fieldValues">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="fieldValue" type="ac:KeyValuePairType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="verifiedFields">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="infoKey" type="ac:InfoKeyType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element minOccurs="0" name="primaryReceiptLanguage" type="ac:LocaleType"/>
					<xs:element minOccurs="0" name="secondaryReceiptLanguage" type="ac:LocaleType"/>
					<xs:element maxOccurs="1" minOccurs="0" name="receiptImages">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="receiptImage" type="ac:ReceiptImageContentType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="sendValidationResponse" type="ac:SendValidationResponse"/>
	<xs:complexType name="SendValidationResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="mgiSessionID" type="ac:MGISessionIDType"/>
										<xs:element minOccurs="1" name="readyForCommit" type="xs:boolean"/>
										<xs:element minOccurs="1" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
										<!--ACINTERNAL-START-->
										<xs:element minOccurs="0" name="token" type="ac:TokenType"/>
										<!--ACINTERNAL-END-->
										<xs:element minOccurs="0" name="customerReceiveNumber" type="ac:CustomerReceiveNumberType"/>
										<xs:element minOccurs="0" name="displayAccountID" type="ac:CustomerReceiveNumberType"/>
										<xs:element minOccurs="0" name="customerServiceMessage" type="ac:StringMax255Type"/>
										<xs:element minOccurs="0" name="receiveAgentName" type="ac:StringMax40Type"/>
										<xs:element maxOccurs="1" minOccurs="0" name="receiveAgentAddress" type="ac:AgentAddressType"/>
										<xs:element minOccurs="0" name="receiveAgentAbbreviation" type="ac:ReceiveAgentAbbreviationType"/>
										<xs:element minOccurs="0" name="exchangeRateApplied" type="ac:FXRateType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="sendAmounts" type="ac:SendAmountInfo"/>
										<xs:element maxOccurs="1" minOccurs="0" name="receiveAmounts" type="ac:ReceiveAmountInfo"/>
										<xs:element maxOccurs="1" minOccurs="0" name="promotionInfos">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="promotionInfo" type="ac:PromotionInfo"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element maxOccurs="1" minOccurs="0" name="fieldsToCollect">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="fieldToCollect" type="ac:InfoBase"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element minOccurs="0" name="receipts" type="ac:PreCompletionReceiptType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="receiptInfo">
											<xs:complexType>
												<xs:sequence>
													<xs:element minOccurs="0" name="receiveFeeDisclosureText" type="xs:boolean"/>
													<xs:element minOccurs="0" name="receiveTaxDisclosureText" type="xs:boolean"/>
													<xs:element maxOccurs="1" minOccurs="0" name="promotionalMessages">
														<xs:complexType>
															<xs:sequence>
																<xs:element maxOccurs="unbounded" minOccurs="0" name="promotionalMessage" type="ac:TextTranslationType"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
													<xs:element maxOccurs="1" minOccurs="0" name="disclosureTexts">
														<xs:complexType>
															<xs:sequence>
																<xs:element maxOccurs="unbounded" minOccurs="0" name="disclosureText" type="ac:TextTranslationType"/>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:element name="subagentsRequest" type="ac:SubagentsRequest"/>
	<xs:complexType name="SubagentsRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="subagentsResponse" type="ac:SubagentsResponse"/>
	<xs:complexType name="SubagentsResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element maxOccurs="1" minOccurs="0" name="subagents">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="subagent" type="ac:SubagentInfo"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:element name="transactionLookupRequest" type="ac:TransactionLookupRequest"/>
	<xs:complexType name="TransactionLookupRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
					<xs:element minOccurs="1" name="purposeOfLookup" type="ac:EnumType">
						<xs:annotation>
							<xs:documentation> Purposes may include: Status, ReceiveValidation,
								ReceiveCompletion (FormFree or Resume), Refund, Cancel, Amend,
								SendCompletion (FormFree or Resume), BPCompletion (FormFree or
								Resume), Note: Status should be used as "default" if not yet known
								true purpose </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="referenceNumber" type="ac:ReferenceNumberType"/>
					<xs:element minOccurs="0" name="confirmationNumber" type="ac:ConfirmationNumberType"/>
					<xs:element minOccurs="0" name="transactionPin" type="ac:TransactionPinType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="transactionLookupResponse" type="ac:TransactionLookupResponse"/>
	<xs:complexType name="TransactionLookupResponse">
		<xs:annotation>
			<xs:documentation> Returns new sessionID if purpose
				needs one </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="0" name="GAFVersionNumber" type="ac:GAFVersionNumberType"/>
										<xs:element minOccurs="0" name="mgiSessionID" type="ac:MGISessionIDType">
											<xs:annotation>
												<xs:documentation> Returns new sessionID if purpose
													needs one </xs:documentation>
											</xs:annotation>
										</xs:element>										
										<xs:element maxOccurs="1" minOccurs="1" name="transactionStatus" type="ac:TransactionStatusType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="redirectInfo" type="ac:RedirectInfo"/>
										<xs:element maxOccurs="1" minOccurs="0" name="sendAmounts" type="ac:SendAmountInfo"/>
										<xs:element maxOccurs="1" minOccurs="0" name="receiveAmounts" type="ac:ReceiveAmountInfo"/>
										<xs:element maxOccurs="1" minOccurs="0" name="promotionInfos">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="promotionInfo" type="ac:PromotionInfo"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element maxOccurs="1" minOccurs="0" name="disclosureTexts">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="disclosureText" type="ac:TextTranslationType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element maxOccurs="1" minOccurs="0" name="receiveFeeDisclosureTexts">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="receiveFeeDisclosureText" type="ac:TextTranslationType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element maxOccurs="1" minOccurs="0" name="receiveTaxDisclosureTexts">
											<xs:complexType>
												<xs:sequence>
													<xs:element maxOccurs="unbounded" minOccurs="0" name="receiveTaxDisclosureText" type="ac:TextTranslationType"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element maxOccurs="1" minOccurs="0" name="currentValues" type="ac:CurrentValuesType"/>
										<xs:element maxOccurs="1" minOccurs="0" name="infos" type="ac:InfosType"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="translationsRequest" type="ac:TranslationsRequest"/>
	<xs:complexType name="TranslationsRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element minOccurs="0" name="languageCodes" type="xs:string"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="translationsResponse" type="ac:TranslationsResponse"/>
	<xs:complexType name="TranslationsResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="translationsVersion" type="xs:string"/>
										<xs:element maxOccurs="unbounded" minOccurs="0" name="countryTranslations" type="ac:CountryTranslationType"/>
										<xs:element maxOccurs="unbounded" minOccurs="0" name="deliveryOptionTranslations" type="ac:DeliveryOptionTranslationType"/>
										<xs:element maxOccurs="unbounded" minOccurs="0" name="currencyTranslations" type="ac:CurrencyTranslationType"/>
										<xs:element maxOccurs="unbounded" minOccurs="0" name="fqdoTextTranslations" type="ac:FQDOTextTranslationType"/>
										<xs:element maxOccurs="unbounded" minOccurs="0" name="industryTranslations" type="ac:IndustryTranslationType"/>
										<!--ACINTERNAL-START-->
										<xs:element maxOccurs="unbounded" minOccurs="0" name="loyaltyTranslations" type="ac:LoyaltyTranslationType"/>
										<xs:element maxOccurs="unbounded" minOccurs="0" name="loyaltyCardTypeTranslations" type="ac:LoyaltyCardTypeTranslationType"/>
										<xs:element maxOccurs="unbounded" minOccurs="0" name="loyaltyProgramTypeTranslations" type="ac:LoyaltyProgramTypeTranslationType"/>
										<xs:element maxOccurs="unbounded" minOccurs="0" name="languageTranslations" type="ac:LanguageTranslationType"/>
										<!--ACINTERNAL-END-->
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="variableReceiptInfoRequest" type="ac:VariableReceiptInfoRequest"/>
	<xs:complexType name="VariableReceiptInfoRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="languages">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="1" name="longLanguageCode" type="ac:LanguageLongCodeType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="variableReceiptInfoResponse" type="ac:VariableReceiptInfoResponse"/>
	<xs:complexType name="VariableReceiptInfoResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element minOccurs="1" name="version" type="xs:string"/>
										<xs:element maxOccurs="unbounded" minOccurs="0" name="receiptText" type="ac:VariableReceiptTextInfo"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:element name="versionManifestRequest" type="ac:VersionManifestRequest"/>
	<xs:complexType name="VersionManifestRequest">
		<xs:complexContent>
			<xs:extension base="ac:Request"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="versionManifestResponse" type="ac:VersionManifestResponse"/>
	<xs:complexType name="VersionManifestResponse">
		<xs:complexContent>
			<xs:extension base="ac:Response">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="payload" nillable="true">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="ac:Payload">
									<xs:sequence>
										<xs:element name="manifestSize" type="xs:long"/>
										<xs:element name="manifestURL" type="xs:string"/>
										<xs:element name="versionID" type="xs:string"/>
										<xs:element name="unitProfileID" type="xs:int"/>
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:complexType name="AgentAddressType">
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="0" name="agentAddress">
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" minOccurs="0" name="agentAddressLine" type="ac:AddressType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AgentInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="agentName" type="ac:AgentNameType"/>
			<xs:element minOccurs="0" name="address" type="ac:Address30Type"/>
			<xs:element minOccurs="0" name="city" type="ac:CityType"/>
			<xs:element minOccurs="0" name="countrySubdivisionCode" type="ac:CountrySubdivisionCodeType"/>
			<xs:element minOccurs="0" name="receiveCapability" type="xs:boolean"/>
			<xs:element minOccurs="0" name="sendCapability" type="xs:boolean"/>
			<xs:element minOccurs="0" name="agentPhone" type="ac:PhoneType"/>
			<xs:element maxOccurs="7" minOccurs="1" name="storeHours" type="ac:StoreHourInfo"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AmountInfo">
		<xs:sequence>
			<xs:element minOccurs="0" name="amountType" type="xs:string"/>
			<xs:element minOccurs="0" name="amount" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="0" name="amountCurrency" type="ac:CurrencyCodeType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AttributeType">
		<xs:sequence>
			<xs:element minOccurs="0" name="attributeLabel" type="xs:string"/>
			<xs:element minOccurs="0" name="attributeTag" type="xs:string"/>
			<xs:element minOccurs="0" name="attributeValue" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>	
	<!--ACINTERNAL-START-->	
	<xs:complexType name="BankInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="bankId" type="ac:StringMax100Type"/>
			<xs:element minOccurs="1" name="bankShortCode" type="ac:BankShortCodeType"/>
			<xs:element minOccurs="1" name="bankName" type="ac:StringMax100Type"/>
			<xs:element minOccurs="1" name="bankDisplayName" type="ac:StringMax100Type"/>
			<xs:element maxOccurs="unbounded" minOccurs="1" name="paymentType" type="ac:PaymentTypeInfo"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:complexType name="BaseRawAddressType">		
		<xs:sequence>
			<xs:element minOccurs="0" name="addressLine1" type="ac:AddressType"/>					
				<xs:element minOccurs="0" name="addressLine2" type="ac:AddressType"/>
				<xs:element minOccurs="0" name="addressLine3" type="ac:AddressType"/>					
				<xs:element minOccurs="0" name="addressLine4" type="ac:AddressType"/>					
				<xs:element minOccurs="0" name="city" type="ac:CityType"/>					
				<xs:element minOccurs="0" name="countryCode" type="ac:CountryCodeType"/>					
				<xs:element minOccurs="0" name="countrySubDivisionCode" type="ac:StringMax7Type"/>
				<xs:element minOccurs="0" name="county" type="ac:CountyType"/>
				<xs:element minOccurs="0" name="postalCode" type="ac:PostalType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BillerInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="receiveAgentID" type="ac:AgentIDType"/>
			<xs:element minOccurs="1" name="receiveCode" type="ac:ReceiveCodeType"/>
			<xs:element minOccurs="0" name="internationalBankAccountNumber" type="ac:InternationalBankAccountNumberType"/>
			<xs:element minOccurs="0" name="billerGroupID" type="ac:StringMax12Type"/>
			<xs:element minOccurs="0" name="billerGroupName" type="ac:StringMax64Type"/>
			<xs:element minOccurs="1" name="billerName" type="ac:StringMax64Type"/>
			<xs:element minOccurs="0" name="address1" type="ac:AddressType"/>
			<xs:element minOccurs="0" name="address2" type="ac:AddressType"/>
			<xs:element minOccurs="0" name="address3" type="ac:AddressType"/>
			<xs:element minOccurs="0" name="billerCity" type="ac:CityType"/>
			<xs:element minOccurs="0" name="billerState" type="ac:StateLongType"/>
			<xs:element minOccurs="0" name="serviceOfferingID" type="ac:ServiceOfferingIDType"/>
			<xs:element minOccurs="0" name="serviceOffering" type="ac:StringMax80Type"/>
			<xs:element minOccurs="0" name="serviceOfferingSecondary" type="ac:StringMax80Type"/>
			<xs:element minOccurs="0" name="serviceOfferingShort" type="ac:StringMax40Type"/>
			<xs:element minOccurs="0" name="serviceOfferingShortSecondary" type="ac:StringMax40Type"/>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="industryID" type="ac:IndustryIdType"/>
			<xs:element minOccurs="0" name="expectedPostingTimeFrame" type="ac:ExpectedPostingTimeFrameType"/>
			<xs:element minOccurs="0" name="expectedPostingTimeFrameSecondary" type="ac:ExpectedPostingTimeFrameType"/>
			<xs:element minOccurs="0" name="billerNotes" type="ac:StringMax80Type"/>
			<xs:element minOccurs="0" name="billerNotesSecondary" type="ac:StringMax80Type"/>
			<xs:element minOccurs="0" name="secondaryLang" type="ac:StringMax2Type"/>
			<xs:element minOccurs="1" name="productVariant" type="ac:ProductVariantType"/>
			<xs:element minOccurs="0" name="billerCutoffTime" type="ac:StringMax12Type"/>
			<xs:element minOccurs="0" name="billerWebsite" type="ac:StringMax128Type"/>
			<xs:element minOccurs="0" name="billerPhoneNumber" type="ac:PhoneType"/>
			<xs:element minOccurs="0" name="maskAccountNumber" type="xs:boolean"/>
			<xs:element minOccurs="0" name="nationalBillerFlag" type="xs:boolean"/>
			<xs:element minOccurs="0" name="useStandardUBPFields" type="xs:boolean"/>
			<xs:element minOccurs="0" name="acctNumberNumericOnly" type="xs:boolean"/>
			<xs:element minOccurs="0" name="sendFixedAmountFlag" type="xs:boolean"/>
			<xs:element minOccurs="0" name="cancelWarnFlag" type="xs:boolean"/>
			<xs:element minOccurs="0" name="refundWarnFlag" type="xs:boolean"/>
			<xs:element minOccurs="0" name="doubleAcctNumberEntryFlag" type="xs:boolean"/>
			<xs:element minOccurs="0" name="minimumFeeAmt" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="0" name="feeType" type="ac:FeeType"/>
			<xs:element minOccurs="0" name="consolidatorLocationId" type="xs:string"/>
			<xs:element minOccurs="0" name="consolidatorName" type="xs:string"/>
			<xs:element minOccurs="0" name="classOfTradeCode" type="xs:string"/>
			<xs:element minOccurs="0" name="expeditedEligibleFlag" type="xs:boolean"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BillerLookupInfo">
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="0" name="currentValues" type="ac:CurrentValuesType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BillPaymentDetailInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="referenceNumber" type="ac:ReferenceNumberType"/>
			<xs:element minOccurs="1" name="productVariant" type="ac:ProductVariantType"/>
			<xs:element minOccurs="1" name="faceAmount" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="1" name="feeAmount" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="1" name="totalAmount" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="0" name="infoFeeIndicator" type="xs:boolean"/>
			<xs:element minOccurs="0" name="processingFee" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="1" name="agentNumber" type="ac:AgentIDType"/>
			<xs:element minOccurs="1" name="paymentType" type="ac:PaymentType"/>
			<xs:element minOccurs="1" name="agentName" type="ac:AgentNameType"/>
			<xs:element minOccurs="1" name="date" type="xs:dateTime"/>
			<xs:element minOccurs="1" name="status" type="ac:TransactionStatusType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BillPaymentSummaryInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="productVariant" type="ac:ProductVariantType"/>
			<xs:element minOccurs="1" name="faceAmount" type="ac:AmountNonZeroType"/>
			<xs:element minOccurs="1" name="feeAmount" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="1" name="totalAmount" type="ac:AmountNonZeroType"/>
			<xs:element minOccurs="1" name="agentNumber" type="ac:AgentIDType"/>
			<xs:element minOccurs="1" name="agentName" type="ac:AgentNameType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="BusinessError" type="ac:BusinessError"/>
	<xs:complexType name="BusinessError">
		<xs:sequence>
			<xs:element minOccurs="1" name="errorCode" type="ac:ErrorCodeType"/>
			<xs:element minOccurs="1" name="message" type="ac:ErrorStringLongType"/>
			<xs:element minOccurs="0" name="subErrorCode" type="ac:ErrorCodeType"/>
			<xs:element minOccurs="0" name="detailString" type="ac:ErrorStringShortType"/>
			<xs:element minOccurs="0" name="offendingField" type="ac:InfoKeyType"/>
			<xs:element minOccurs="1" name="errorCategory" type="ac:ErrorCategoryType">
				<xs:annotation>
					<xs:documentation> "CHECK_VERIFY" = Indicates a field just needs "check
						and verify" applied to it. POE should prompt the user to verify that
						the field information is correct. If it is, POE would use the
						"verifiedFields" to indicate the field has been verified so the
						error istn't returned again. "VALIDATION" Indicates field didn't
						pass server validation logic and needs to be fixed.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="messageShort" type="ac:ErrorStringShortType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="CategoryInfo" type="ac:CategoryInfo"/>
	<xs:complexType name="CategoryInfo">
		<xs:complexContent>
			<xs:extension base="ac:InfoBase">
				<xs:sequence>
					<xs:element minOccurs="0" name="infos" nillable="true">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="info" type="ac:InfoBase"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ChildField">
		<xs:sequence>
			<xs:element minOccurs="1" name="fieldValue" type="ac:FieldValueType"/>
			<xs:element maxOccurs="1" minOccurs="0" name="infos" type="ac:InfosType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CompletionReceiptType">
		<xs:annotation>
			<xs:documentation>The receipts returned as part of any complete
				session flow for any POE capability are uniquely different than
				those returned within a validate response. This complex type
				provides the complete session receipts response definition.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element minOccurs="0" name="receiptMimeType" type="ac:MimeType">
				<xs:annotation>
					<xs:documentation>The mime-type specifying the format of the
						receipt binary being returned. The value specified must conform to
						the RFC 2046 standard (see: http://www.ietf.org/rfc/rfc2046.txt).
						Currently, the following format options are supported:
						
						image/gif
						image/jpeg
						application/pdf
						application/vnd.thermal
						application/vnd.text
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="charsetEncoding" type="ac:CharsetType">
				<xs:annotation>
					<xs:documentation>The charset associated with the base64 encoded
						receipt binaries being returned in the response. This should only
						be present if the media type identified by the value of the
						receiptMimeType element is a TEXT based media type for the receipt
						(e.g. application/vnd.thermal OR application/vnd.text). In this
						case the charsetEncoding will contain the charset encoding of the
						text based receipt (e.g. UTF-8, CP437, etc.). It is left solely up
						to a POE implementation as to whether it has any need for the
						charset encoding provided. The common use case would be a POE
						performing a simple pass through of a server-side generated
						receipt on to a printer.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="agentReceiptMimeData" type="ac:ReceiptResponseType">
				<xs:annotation>
					<xs:documentation>Binary mime data element containing the agent
						specific receipt. Note that for PDF receipts, that this element
						will not contain an agent receipt when a POE is configured to have
						both agent and consumer receipts merge. In that case both agent
						and consumer receipts will be returned as a single PDF which will
						appear in the consumerReceipt1MimeData element.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="consumerReceipt1MimeData" type="ac:ReceiptResponseType">
				<xs:annotation>
					<xs:documentation>Binary mime data element containing the consumer
						specific receipt. Note that for PDF receipts, that this element
						will contain a single PDF containing both agent and consumer
						receipt when an agent is configured to have PDF receipts merged
						together. When hybrid receipts (i.e. multi-languages on a single
						receipt) are configured the hybrid receipt will be returned in
						this element.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="consumerReceipt2MimeData" type="ac:ReceiptResponseType">
				<xs:annotation>
					<xs:documentation>Binary mime data element containing a consumer
						specific receipt when both a primary and secondary language are
						specified AND configuration is set such that a separate receipt is
						to be returned for the secondary language.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DocumentItemType">
		<xs:sequence>
			<xs:element minOccurs="1" name="label" type="ac:StringMax255Type">
				<xs:annotation>
					<xs:documentation> Image label, e.g. image1, image2, front, back
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="1" name="image" type="xs:string">
				<xs:annotation>
					<xs:documentation>The binary representation of an image.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ConsumerProfileIdentifierType">
		<xs:sequence>			
			<xs:element minOccurs="0" name="profileID" type="ac:ConsumerProfileIDType"/>
			<xs:element minOccurs="0" name="startDate" type="xs:dateTime"/>
			<xs:element minOccurs="0" name="type" type="ac:ConsumerProfileIDTypeType"/>			
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ConsumerProfileImageContentType">
		<xs:annotation>
			<xs:documentation>A complex type to define an image with an
				associated identifier.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element minOccurs="1" name="identifier" type="xs:string">
				<xs:annotation>
					<xs:documentation>Each unique image sent from the POE must
						be accompanied by a unique identifier. The unique identifier is a
						key that conforms to one selected from a supported list of
						pre-defined values that are displayable on a receipt. Currently
						supported image identifiers are:
						
						PERSONALID1_IMAGE
						PERSONALID2_IMAGE
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="1" name="mimeType" type="ac:MimeType">
				<xs:annotation>
					<xs:documentation>Images sent from the POE will be required
						to specify the corresponding mime-type of the image from the
						currently supported list:
						
						image/gif
						image/jpeg
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="1" name="image" type="xs:base64Binary" xmime:expectedContentTypes="image/jpeg,image/gif">
				<xs:annotation>
					<xs:documentation>The binary representation of an image.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ConsumerProfileIDInfo">
		<xs:annotation>
			<xs:documentation> A Complex type to define ConsumerProfileID Collection with date
</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element minOccurs="0" name="consumerProfileID" type="ac:ConsumerProfileIDType"/>
			<xs:element minOccurs="0" name="consumerProfileIDType" type="ac:ConsumerProfileIDTypeType"/>
			<xs:element minOccurs="0" name="consumerProfileIDCreateDate" type="xs:dateTime"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ConsumerProfileTransactionHistoryType">
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="0" name="currentValues" type="ac:CurrentValuesType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ConsumerProfileSearchInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="consumerProfileID" type="ac:ConsumerProfileIDType"/>
			<xs:element minOccurs="1" name="consumerProfileIDType" type="ac:ConsumerProfileIDTypeType"/>
			<xs:element maxOccurs="1" minOccurs="0" name="currentValues" type="ac:CurrentValuesType"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:complexType name="CountryFeeInfo">
		<xs:sequence>
			<xs:element minOccurs="0" name="feeAmount" type="ac:AmountNonZeroType"/>
			<xs:element minOccurs="0" name="sendAmount" type="ac:AmountNonZeroType"/>
			<xs:element minOccurs="0" name="sendCurrency" type="ac:CurrencyCodeType"/>
			<xs:element minOccurs="0" name="validReceiveAmount" type="ac:AmountNonZeroType"/>
			<xs:element minOccurs="0" name="validReceiveCurrency" type="ac:CurrencyCodeType"/>
			<xs:element minOccurs="0" name="validExchangeRate" type="ac:FXRateType"/>
			<xs:element minOccurs="0" name="validIndicator" type="xs:boolean"/>
			<xs:element minOccurs="0" name="estimatedReceiveAmount" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="0" name="estimatedReceiveCurrency" type="ac:CurrencyCodeType"/>
			<xs:element minOccurs="0" name="estimatedExchangeRate" type="ac:FXRateType"/>
			<xs:element minOccurs="0" name="totalAmount" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="0" name="receiveCountry" type="ac:CountryCodeType"/>
			<xs:element minOccurs="0" name="serviceOption" type="ac:ServiceOptionType"/>
			<xs:element minOccurs="0" name="receiveAmountAltered" type="xs:boolean"/>
			<xs:element minOccurs="1" name="amountExceededIndicator" type="xs:boolean"/>
			<xs:element minOccurs="0" name="maxAmountAllowed" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="0" name="receiveAgentID" type="xs:string"/>
			<xs:element minOccurs="0" name="receiveAgentName" type="xs:string"/>
			<xs:element minOccurs="0" name="receiveAgentAbbreviation" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:complexType name="CountryInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="countryCode" type="ac:CountryCodeType"/>
			<xs:element minOccurs="1" name="countryName" type="ac:CountryNameType"/>
			<xs:element minOccurs="0" name="baseCurrency" type="ac:CurrencyCodeType"/>
			<xs:element maxOccurs="1" minOccurs="0" name="lookupKeys">
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" minOccurs="1" name="lookupKey" type="ac:EnumType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="receiveCurrencies">
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" minOccurs="1" name="receiveCurrency" type="ac:CurrencyCodeType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="sendCurrencies">
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" minOccurs="1" name="sendCurrency" type="ac:CurrencyCodeType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="countryDialCodes">
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" minOccurs="1" name="countryDialCode" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CountrySubdivisionInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="countryCode" type="ac:CountryCodeType"/>
			<xs:element maxOccurs="1" minOccurs="0" name="subdivisions">
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" minOccurs="1" name="subdivision" type="ac:SubdivisionInfo"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CountryTranslationType">
		<xs:sequence>
			<xs:element minOccurs="1" name="countryCode" type="ac:CountryCodeType"/>
			<xs:element minOccurs="1" name="languageCode" type="xs:string"/>
			<xs:element minOccurs="1" name="longLanguageCode" type="xs:string"/>
			<xs:element minOccurs="1" name="displayName" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:complexType name="CreditLimitInfo">
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="0" name="creditLimitType" type="xs:integer"/>
			<xs:element maxOccurs="1" minOccurs="0" name="creditLimitAmount" type="ac:AmountIncludeZeroType"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:complexType name="CurrencyInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="currencyCode" type="ac:CurrencyCodeType"/>
			<xs:element minOccurs="1" name="currencyName" type="ac:StringMax40Type"/>
			<xs:element minOccurs="1" name="currencyPrecision" type="ac:CurrencyPrecisionType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CurrencyTranslationType">
		<xs:sequence>
			<xs:element minOccurs="1" name="currencyCode" type="ac:CurrencyCodeType"/>
			<xs:element minOccurs="1" name="languageCode" type="xs:string"/>
			<xs:element minOccurs="1" name="longLanguageCode" type="xs:string"/>
			<xs:element minOccurs="1" name="displayName" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CurrentValuesType">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="currentValue" type="ac:KeyValuePairType"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:complexType name="CustomerComplianceInfo">
		<xs:sequence>
			<xs:element name="typeCode" type="ac:CustomerComplianceTypeCodeType"/>
			<xs:element minOccurs="0" name="operatorName" type="ac:StringMax10Type"/>
			<xs:element minOccurs="0" name="localDateTime" type="xs:dateTime"/>
			<xs:element minOccurs="0" name="employeeNumber" type="ac:StringMax20Type"/>
			<xs:element minOccurs="0" name="comments" type="ac:StringMax4000Type"/>
			<xs:element minOccurs="0" name="category" type="xs:int">
				<xs:annotation>
					<xs:documentation> encodes bitset, sum of: 1=money laundering 2=structuring
						4=terrorist financing 8=other </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="otherCategory" type="xs:string"/>
			<xs:element minOccurs="0" name="character" type="xs:int">
				<xs:annotation>
					<xs:documentation> encodes bitset, sum of: 1=unusual use of money orders
						2=unusual use of money transfers 4=alters transaction to avoid RK 8=alters
						transaction to avoid CTR 16=comes in frequently and purchases less than 3000
						32=changes spelling or arrangement of name 64=individual(s) using multiple
						or false ID 128=individuals using similar/same ID 256=individuals working
						together 512=multiple locations over short time period 1024=offers a bribe
						in the form of a tip/gratuity </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="lastName" type="ac:StringMax40Type"/>
			<xs:element minOccurs="0" name="firstName" type="ac:StringMax40Type"/>
			<xs:element minOccurs="0" name="middleInitial" type="ac:NameMiddleInitialType"/>
			<xs:element minOccurs="0" name="address" type="ac:Address30Type"/>
			<xs:element minOccurs="0" name="address2" type="ac:Address30Type"/>
			<xs:element minOccurs="0" name="city" type="ac:City20Type"/>
			<xs:element minOccurs="0" name="state" type="ac:StateType"/>
			<xs:element minOccurs="0" name="zipCode" type="ac:PostalType"/>
			<xs:element minOccurs="0" name="country" type="ac:CountryCodeType"/>
			<xs:element minOccurs="0" name="photoIdType" type="ac:PhotoIdType"/>
			<xs:element minOccurs="0" name="photoIdNumber" type="ac:StringMax20Type"/>
			<xs:element minOccurs="0" name="photoIdState" type="ac:StateType"/>
			<xs:element minOccurs="0" name="photoIdCountry" type="ac:CountryCodeType"/>
			<xs:element minOccurs="0" name="dateOfBirth" type="xs:date"/>
			<xs:element minOccurs="0" name="phoneNumber" type="ac:PhoneType"/>
			<xs:element minOccurs="0" name="occupation" type="xs:string"/>
			<xs:element minOccurs="0" name="legalIdType" type="ac:LegalIdType"/>
			<xs:element minOccurs="0" name="legalIdNumber" type="ac:StringMax14Type"/>
			<xs:element minOccurs="0" name="thirdPartyDBA" type="xs:string"/>
			<xs:element minOccurs="0" name="thirdPartyLastName" type="ac:StringMax40Type"/>
			<xs:element minOccurs="0" name="thirdPartyFirstName" type="ac:StringMax40Type"/>
			<xs:element minOccurs="0" name="thirdPartyMiddleInitial" type="ac:NameMiddleInitialType"/>
			<xs:element minOccurs="0" name="thirdPartyAddress" type="ac:Address30Type"/>
			<xs:element minOccurs="0" name="thirdPartyAddress2" type="ac:Address30Type"/>
			<xs:element minOccurs="0" name="thirdPartyCity" type="ac:City20Type"/>
			<xs:element minOccurs="0" name="thirdPartyState" type="ac:StateType"/>
			<xs:element minOccurs="0" name="thirdPartyZipCode" type="ac:PostalType"/>
			<xs:element minOccurs="0" name="thirdPartyCountry" type="ac:CountryCodeType"/>
			<xs:element minOccurs="0" name="thirdPartyDOB" type="xs:date"/>
			<xs:element minOccurs="0" name="thirdPartyPhoneNumber" type="ac:PhoneType"/>
			<xs:element minOccurs="0" name="thirdPartyOccupation" type="xs:string"/>
			<xs:element minOccurs="0" name="thirdPartyLegalIdType" type="ac:LegalIdType"/>
			<xs:element minOccurs="0" name="thirdPartyLegalIdNumber" type="ac:StringMax14Type"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	
	<!--ACINTERNAL-START-->
	<xs:complexType name="CustomFieldsType">
		<xs:sequence>
			<xs:element name="NameValue" type="ac:PropertyType"/>
		</xs:sequence>
		<!-- Broadcast Message -->
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:complexType name="DCATokenType">
		<xs:sequence>
			<xs:element minOccurs="0" name="key" type="xs:string"/>
			<xs:element minOccurs="0" name="value" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:complexType name="DeliveryOptionTranslationType">
		<xs:sequence>
			<xs:element minOccurs="1" name="serviceOption" type="ac:ServiceOptionType"/>
			<xs:element minOccurs="1" name="languageCode" type="xs:string"/>
			<xs:element minOccurs="1" name="longLanguageCode" type="xs:string"/>
			<xs:element minOccurs="1" name="displayName" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:complexType name="DepositAndProofInfo">
		<xs:sequence>
			<xs:element minOccurs="0" name="mgiEmployeeAutoAccept" type="xs:boolean"/>
			<xs:element minOccurs="0" name="depositReferenceNumber" type="ac:DepositReferenceNumberType"/>
			<xs:element minOccurs="0" name="depositDate" type="xs:string"/>
			<xs:element minOccurs="0" name="announcementDate" type="xs:string"/>
			<xs:element minOccurs="0" name="announcementAmount" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="0" name="announcementCurrencyCode" type="ac:CurrencyCodeType"/>
			<xs:element minOccurs="0" name="paymentTypeCode" type="ac:StringMax2Type"/>
			<xs:element minOccurs="0" name="bankShortCode" type="ac:BankShortCodeType"/>
			<xs:element minOccurs="0" name="bankName" type="ac:StringMax100Type"/>
			<xs:element minOccurs="0" name="announcementRemarks" type="ac:AnnouncementRemarksType"/>
			<xs:element minOccurs="0" name="announcementStatus" type="ac:StringMax40Type"/>
			<xs:element minOccurs="0" name="customerAccountSiteID" type="ac:StringMax15Type"/>
			<xs:element minOccurs="0" name="agentEmployeeID" type="ac:StringMax8Type"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:complexType name="DestinationCountryInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="destinationCountry" type="ac:CountryCodeType"/>
			<xs:element maxOccurs="1" minOccurs="0" name="serviceOptionInfos">
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" minOccurs="0" name="serviceOptionInfo" type="ac:ServiceOptionInfo"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:complexType name="DisclosureTextDetailsType">
		<xs:complexContent>
			<xs:extension base="ac:DynamicContentAssemblyDetailsType">
				<xs:sequence>
					<xs:element minOccurs="1" name="version" type="xs:string"/>
					<xs:element minOccurs="1" name="longLanguageCode" type="xs:string"/>
					<xs:element minOccurs="1" name="disclosureTextTag" type="xs:string"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:complexType name="DynamicContentAssemblyDetailsType">
		<xs:sequence>
			<xs:element minOccurs="0" name="responseText" type="xs:string"/>
			<xs:element minOccurs="0" name="errorCode" type="xs:string"/>
			<xs:element minOccurs="0" name="mimeType" type="xs:string"/>
			<xs:element minOccurs="0" name="mimeData" type="xs:base64Binary" xmime:expectedContentTypes="*/*"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:complexType name="EmployeeProfileItemType">
		<xs:sequence>
			<xs:element name="employeeID" type="xs:int"/>
			<xs:element name="key" type="ac:StringMax40Type"/>
			<xs:element minOccurs="0" name="index" type="xs:int"/>
			<xs:element minOccurs="0" name="value" type="ac:StringMax400Type"/>
			<xs:element name="productID" type="xs:int"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="EnumeratedIdentifierInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="identifier" type="ac:FieldValueType"/>
			<xs:element minOccurs="1" name="labelShort" type="ac:LabelShortType"/>
			<xs:element minOccurs="1" name="label" type="ac:LabelType"/>
			<xs:element minOccurs="0" name="helpTextShort" type="ac:HelpTextShortType"/>
			<xs:element minOccurs="0" name="helpTextLong" type="ac:HelpTextLongType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="EnumeratedTypeInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="name" type="ac:EnumerationNameType"/>
			<xs:element maxOccurs="1" minOccurs="0" name="enumeratedItems">
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" minOccurs="0" name="enumeratedItem" type="ac:EnumeratedIdentifierInfo"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ErrorInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="errorCode" type="ac:ErrorCodeType"/>
			<xs:element maxOccurs="1" minOccurs="0" name="errorMessages">
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" minOccurs="1" name="errorMessage" type="ac:TextTranslationType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element minOccurs="1" name="recoverableFlag" type="xs:boolean"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="EstimatedReceiveAmountInfo">
		<xs:sequence>
			<xs:element minOccurs="0" name="receiveAmount" type="ac:AmountNonZeroType"/>
			<xs:element minOccurs="0" name="receiveCurrency" type="ac:CurrencyCodeType"/>
			<xs:element minOccurs="1" name="validCurrencyIndicator" type="xs:boolean"/>
			<xs:element minOccurs="1" name="displayPayoutCurrency" type="ac:CurrencyCodeType"/>
			<xs:element minOccurs="0" name="totalReceiveFees" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="0" name="totalReceiveTaxes" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="0" name="totalReceiveAmount" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="1" name="receiveFeesAreEstimated" type="xs:boolean"/>
			<xs:element minOccurs="1" name="receiveTaxesAreEstimated" type="xs:boolean"/>
			<xs:element maxOccurs="1" minOccurs="0" name="detailEstimatedReceiveAmounts">
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" minOccurs="0" name="detailEstimatedReceiveAmount" type="ac:AmountInfo"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FeeInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="validReceiveAmount" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="1" name="validReceiveCurrency" type="ac:CurrencyCodeType"/>
			<xs:element minOccurs="1" name="validExchangeRate" type="ac:FXRateType"/>
			<xs:element minOccurs="0" name="estimatedReceiveAmount" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="0" name="estimatedReceiveCurrency" type="ac:CurrencyCodeType"/>
			<xs:element minOccurs="0" name="estimatedExchangeRate" type="ac:FXRateType"/>
			<xs:element minOccurs="0" name="displayExchangeRate" type="ac:FXRateType"/>
			<xs:element minOccurs="1" name="totalAmount" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="1" name="destinationCountry" type="ac:CountryCodeType"/>
			<xs:element minOccurs="0" name="serviceOption" type="ac:ServiceOptionType"/>
			<xs:element minOccurs="1" name="receiveAmountAltered" type="xs:boolean"/>
			<!--ACINTERNAL-START-->
			<xs:element minOccurs="0" name="saLimitAvailable" type="ac:AmountIncludeZeroType"/>
			<!--ACINTERNAL-END-->
			<!-- was non-zero -->
			<xs:element minOccurs="1" name="revisedInformationalFee" type="xs:boolean"/>
			<xs:element minOccurs="0" name="serviceOptionCategoryDisplayName" type="xs:string"/>
			<xs:element minOccurs="0" name="serviceOptionCategoryId" type="xs:string"/>
			<xs:element minOccurs="0" name="serviceOptionDisplayName" type="ac:StringMax50Type"/>
			<xs:element minOccurs="0" name="serviceOptionDisplayDescription" type="ac:ServiceOptionDisplayDescriptionType"/>
			<xs:element minOccurs="0" name="displayOrder" type="xs:int"/>
			<xs:element minOccurs="0" name="regAuthText" type="xs:string"/>
			<xs:element minOccurs="0" name="receiveAgentID" type="xs:string"/>
			<xs:element minOccurs="0" name="receiveAgentName" type="xs:string"/>
			<xs:element minOccurs="0" name="receiveAgentAbbreviation" type="xs:string"/>
			<xs:element minOccurs="0" name="mgManaged" type="ac:StringMax20Type"/>
			<xs:element minOccurs="0" name="disclosureText" type="ac:StringMax2000Type"/>
			<xs:element minOccurs="1" name="mgiSessionID" type="ac:MGISessionIDType"/>
			<xs:element minOccurs="1" name="sendAmountAltered" type="xs:boolean"/>
			<xs:element minOccurs="0" name="additionalInfoText" type="ac:StringMax400Type"/>
			<xs:element maxOccurs="1" minOccurs="0" name="promotionInfos">
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" minOccurs="0" name="promotionInfo" type="ac:PromotionInfo"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="sendAmounts" type="ac:SendAmountInfo"/>
			<xs:element maxOccurs="1" minOccurs="0" name="receiveAmounts" type="ac:EstimatedReceiveAmountInfo"/>
			<xs:element maxOccurs="1" minOccurs="0" name="errorInfo" type="ac:ErrorInfo"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="fieldInfo" type="ac:FieldInfo"/>
	<xs:complexType name="FieldInfo">
		<xs:complexContent>
			<xs:extension base="ac:InfoBase">
				<xs:sequence>
					<xs:annotation>
						<xs:documentation> Fields need to be minOccurs=0 so that not all fields need
							to be sent back if there are "override" needs. For example, if the only
							field that changed from the GetAllFields call is that it is required,
							should not need to return the dataType, min, max, readOnly, etc. fields.
						</xs:documentation>
					</xs:annotation>
					<xs:element minOccurs="0" name="display" type="xs:boolean"/>
					<xs:element minOccurs="0" name="dataType" type="ac:DataType"/>
					<xs:element minOccurs="0" name="enumeration" type="ac:EnumeratedTypeInfo"/>
					<xs:element minOccurs="0" name="displayValue" type="ac:FieldValueType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="fieldToCollectInfo" type="ac:FieldToCollectInfo"/>
	<xs:complexType name="FieldToCollectInfo">
		<xs:complexContent>
			<xs:extension base="ac:FieldInfo">
				<xs:sequence>
					<xs:annotation>
						<xs:documentation> Fields need to be minOccurs=0 so that not all fields need
							to be sent back if there are "override" needs. For example, if the only
							field that changed from the GetAllFields call is that it is required,
							should not need to return the dataType, min, max, readOnly, etc. fields.
						</xs:documentation>
					</xs:annotation>
					<xs:element minOccurs="0" name="readOnly" type="xs:boolean"/>
					<xs:element minOccurs="0" name="required" type="xs:boolean"/>
					<xs:element minOccurs="0" name="childFieldsKnown" type="xs:boolean">
						<xs:annotation>
							<xs:documentation> Indicates whether a round-trip for additional fields
								will be required once the field value is known. Will be used for
								DirectedSends. Will also be used for field collection for different
								ID types </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="fieldMin" type="xs:long"/>
					<xs:element minOccurs="0" name="fieldMax" type="xs:long"/>
					<xs:element minOccurs="0" name="defaultValue" type="ac:FieldValueType"/>
					<xs:element minOccurs="0" name="validationRegEx" type="ac:ValidationRegExType"/>
					<xs:element minOccurs="0" name="exampleFormat" type="ac:ExampleFormatType"/>
					<xs:element maxOccurs="1" minOccurs="0" name="childFields">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="0" name="childField" type="ac:ChildField"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element minOccurs="0" name="lookupDataSource" type="ac:LookupDataSourceType"/>
					<xs:element minOccurs="0" name="lookupKey" type="ac:LookupKeyType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="FQDOTextTranslationType">
		<xs:sequence>
			<xs:element minOccurs="0" name="receiveCountry" type="ac:CountryCodeType"/>
			<xs:element minOccurs="0" name="serviceOption" type="ac:ServiceOptionType"/>
			<xs:element minOccurs="0" name="receiveAgentID" type="ac:AgentIDType"/>
			<xs:element minOccurs="0" name="receiveCurrency" type="ac:CurrencyCodeType"/>
			<xs:element minOccurs="0" name="languageCode" type="xs:string"/>
			<xs:element minOccurs="0" name="longLanguageCode" type="xs:string"/>
			<xs:element minOccurs="0" name="serviceOptionDisplayName" type="ac:StringMax50Type"/>
			<xs:element minOccurs="0" name="serviceOptionDisplayDescription" type="ac:ServiceOptionDisplayDescriptionType"/>
		</xs:sequence>
	</xs:complexType>
	<!-- new type added for getAllErrors where errorCategory is not required-->
	<xs:element name="GenericBusinessError" type="ac:GenericBusinessError"/>
    <xs:complexType name="GenericBusinessError">
            <xs:sequence>
                 <xs:element minOccurs="1" name="errorCode" type="ac:ErrorCodeType"/>
                 <xs:element minOccurs="1" name="message" type="ac:ErrorStringLongType"/>
                 <xs:element minOccurs="0" name="messageShort" type="ac:ErrorStringShortType"/>
            </xs:sequence>
    </xs:complexType>
	<xs:complexType name="HierarchyLevelInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="hierarchyLevelElementNumber" type="xs:long"/>
			<xs:element minOccurs="1" name="hierarchyLevelValue" type="xs:string"/>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="ac:AttributeType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="IdentificationDocumentType">		
		<xs:sequence>
			<xs:element minOccurs="0" name="endDate" type="xs:dateTime"/>				
			<xs:element minOccurs="0" name="expirationDay" type="ac:dayType"/>				
			<xs:element minOccurs="0" name="expirationMonth" type="ac:monthType"/>				
			<xs:element minOccurs="0" name="expirationYear" type="ac:yearType"/>				
			<xs:element minOccurs="0" name="idIssuerAuthorityCode" type="xs:string"/>				
			<xs:element minOccurs="0" name="idNumber" type="ac:StringMax20Type"/>								
			<xs:element minOccurs="0" name="issueCity" type="ac:CityType"/>				
			<xs:element minOccurs="0" name="issueCountryCode" type="ac:CountryCodeType"/>				
			<xs:element minOccurs="0" name="issueCountrySubDivisionCode" type="ac:StringMax7Type"/>				
			<xs:element minOccurs="0" name="issueDay" type="ac:dayType"/>				
			<xs:element minOccurs="0" name="issueMonth" type="ac:monthType"/>				
			<xs:element minOccurs="0" name="issueYear" type="ac:yearType"/>				
			<xs:element minOccurs="0" name="startDate" type="xs:dateTime"/>				
			<xs:element minOccurs="0" name="stronglyAuthenticated" type="xs:boolean"/>				
			<xs:element minOccurs="0" name="type" type="xs:string"/>			
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:complexType name="ImageItemType">
		<xs:sequence>
			<xs:element minOccurs="1" name="label" type="ac:StringMax255Type">
				<xs:annotation>
					<xs:documentation> Image label, e.g. image1, image2, front, back
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="1" name="image" type="xs:base64Binary" xmime:expectedContentTypes="image/jpeg,image/gif">
				<xs:annotation>
					<xs:documentation>The binary representation of an image.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:complexType name="IndustryInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="industryID" type="ac:IndustryIdType"/>
			<xs:element minOccurs="1" name="industryName" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="IndustryTranslationType">
		<xs:sequence>
			<xs:element minOccurs="1" name="industryId" type="ac:IndustryIdType"/>
			<xs:element minOccurs="1" name="displayName" type="xs:string"/>
			<xs:element minOccurs="1" name="languageCode" type="xs:string"/>
			<xs:element minOccurs="1" name="longLanguageCode" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="InfoBase" type="ac:InfoBase"/>
	<xs:complexType name="InfoBase">
		<xs:sequence>
			<xs:element minOccurs="1" name="infoKey" type="ac:InfoKeyType"/>
			<xs:element minOccurs="0" name="label" type="ac:LabelType"/>
			<xs:element minOccurs="0" name="labelStandAlone" type="ac:LabelType"/>
			<xs:element minOccurs="0" name="displayOrder" type="xs:int"/>
			<xs:element minOccurs="0" name="helpTextShort" type="ac:HelpTextShortType"/>
			<xs:element minOccurs="0" name="helpTextLong" type="ac:HelpTextLongType"/>
			<xs:element minOccurs="0" name="documentation" type="ac:DocumentationType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="InfosType">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="info" type="ac:InfoBase"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="KeyValuePairType">
		<xs:sequence>
			<xs:element minOccurs="1" name="infoKey" type="ac:InfoKeyType"/>
			<xs:element minOccurs="0" name="value" nillable="true" type="ac:FieldValueType"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:complexType name="LanguageTranslationType">
		<xs:sequence>
			<xs:element minOccurs="1" name="languageCode" type="xs:string"/>
			<xs:element minOccurs="1" name="longLanguageCode" type="xs:string"/>
			<xs:element minOccurs="1" name="displayName" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:complexType name="LevelInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="levelNumber" type="xs:int"/>
			<xs:element minOccurs="1" name="levelValue" type="xs:string"/>
			<xs:element minOccurs="0" name="levelAttributeLabel" type="xs:string"/>
			<xs:element minOccurs="1" name="levelAttributeTag" type="xs:string"/>
			<xs:element minOccurs="1" name="levelAttributeVal" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:complexType name="LoyaltyCardTypeTranslationType">
		<xs:sequence>
			<xs:element name="cardType" type="xs:string"/>
			<xs:element name="messageText" type="xs:string"/>
			<xs:element name="languageCode" type="xs:string"/>
			<xs:element name="longLanguageCode" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:complexType name="LoyaltyProgramTypeTranslationType">
		<xs:sequence>
			<xs:element name="programType" type="xs:string"/>
			<xs:element name="programNameText" type="xs:string"/>
			<xs:element name="programDescText" type="xs:string"/>
			<xs:element name="languageCode" type="xs:string"/>
			<xs:element name="longLanguageCode" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:complexType name="LoyaltyTranslationType">
		<xs:sequence>
			<xs:element name="messageId" type="xs:string"/>
			<xs:element name="messageText" type="xs:string"/>
			<xs:element name="languageCode" type="xs:string"/>
			<xs:element name="longLanguageCode" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:complexType name="MessageInfo">
		<xs:sequence>
			<xs:element minOccurs="0" name="messageId" type="xs:int"/>
			<xs:element minOccurs="0" name="messageVersion" type="xs:int"/>
			<xs:element minOccurs="0" name="msgLanguageCode" type="xs:string"/>
			<xs:element minOccurs="0" name="startDate" type="xs:string"/>
			<xs:element minOccurs="0" name="expiryDate" type="xs:string"/>
			<xs:element minOccurs="0" name="subjectMimeData" type="xs:string"/>
			<xs:element minOccurs="0" name="contentMimeData" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:complexType name="MoneyGramReceiveDetailInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="time" type="xs:dateTime"/>
			<xs:element minOccurs="1" name="referenceNumber" type="ac:ReferenceNumberType"/>
			<xs:element minOccurs="1" name="receiverName" type="ac:StringMax10Type"/>
			<xs:element minOccurs="0" name="checkNumber" type="ac:StringMax14Type"/>
			<xs:element minOccurs="1" name="receiveAmount" type="ac:AmountNonZeroType"/>
			<xs:element minOccurs="0" name="agentNumber" type="ac:AgentNumberType"/>
			<xs:element minOccurs="1" name="payoutType" type="ac:PayoutType"/>
			<xs:element minOccurs="0" name="agentName" type="ac:AgentNameType"/>
			<xs:element minOccurs="0" name="accountNumber" type="ac:StringMax20Type"/>
			<xs:element minOccurs="1" name="receiveCurrency" type="ac:CurrencyCodeType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MoneyGramReceiveSummaryInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="agentNumber" type="ac:AgentNumberType"/>
			<xs:element minOccurs="1" name="agentName" type="ac:AgentNameType"/>
			<xs:element minOccurs="0" name="cashOrCheckAmount" type="ac:AmountNonZeroType"/>
			<xs:element minOccurs="0" name="otherPayoutAmount" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="1" name="receiveCurrency" type="ac:CurrencyCodeType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MoneyGramSendDetailInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="referenceNumber" type="ac:ReferenceNumberType"/>
			<xs:element minOccurs="1" name="faceAmount" type="ac:AmountNonZeroType"/>
			<xs:element minOccurs="1" name="feeAmount" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="1" name="totalAmount" type="ac:AmountNonZeroType"/>
			<xs:element minOccurs="1" name="sendCurrency" type="ac:CurrencyCodeType"/>
			<xs:element minOccurs="1" name="agentNumber" type="ac:AgentNumberType"/>
			<xs:element minOccurs="1" name="paymentType" type="ac:PaymentType"/>
			<xs:element minOccurs="1" name="agentName" type="ac:AgentNameType"/>
			<xs:element minOccurs="1" name="time" type="xs:dateTime"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MoneyGramSendWithTaxDetailInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="referenceNumber" type="ac:ReferenceNumberType"/>
			<xs:element minOccurs="1" name="faceAmount" type="ac:AmountNonZeroType"/>
			<xs:element minOccurs="1" name="feeAmount" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="1" name="totalAmount" type="ac:AmountNonZeroType"/>
			<xs:element minOccurs="1" name="sendCurrency" type="ac:CurrencyCodeType"/>
			<xs:element minOccurs="1" name="paymentType" type="ac:PaymentType"/>
			<xs:element minOccurs="1" name="agentName" type="ac:AgentNameType"/>
			<xs:element minOccurs="0" name="taxAmount" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="0" name="taxPercentage" type="ac:Decimal3ThreePrecType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MoneyGramSendSummaryInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="faceAmount" type="ac:AmountNonZeroType"/>
			<xs:element minOccurs="1" name="feeAmount" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="1" name="totalAmount" type="ac:AmountNonZeroType"/>
			<xs:element minOccurs="1" name="sendCurrency" type="ac:CurrencyCodeType"/>
			<xs:element minOccurs="1" name="agentNumber" type="ac:AgentNumberType"/>
			<xs:element minOccurs="1" name="agentName" type="ac:AgentNameType"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:complexType name="MoneyOrderInfo">
		<xs:sequence>
			<xs:element name="printStatus" type="ac:MoneyOrderPrintStatusType"/>
			<xs:element minOccurs="0" name="moAccountNumber" type="ac:String14Type"/>
			<xs:element minOccurs="0" name="deviceID" type="ac:String8Type"/>
			<xs:element minOccurs="0" name="serialNumber" type="ac:Int11Type"/>
			<xs:element minOccurs="0" name="itemAmount" type="ac:Decimal8Type"/>
			<xs:element minOccurs="0" name="dateTimePrinted" type="xs:dateTime"/>
			<xs:element minOccurs="0" name="itemFee" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="0" name="periodNumber" type="ac:Int1Type"/>
			<xs:element minOccurs="0" name="documentSequenceNbr" type="ac:Int1Type"/>
			<xs:element minOccurs="0" name="documentType" type="ac:Int1Type"/>
			<xs:element minOccurs="0" name="dispenserID" type="ac:StringMax10Type"/>
			<xs:element minOccurs="0" name="voidFlag" type="xs:boolean"/>
			<xs:element minOccurs="0" name="voidReasonCode" type="ac:MoneyOrderVoidReasonCodeType"/>
			<xs:element minOccurs="0" name="taxID" type="ac:StringMax20Type"/>
			<xs:element minOccurs="0" name="employeeID" type="ac:Int5Type"/>
			<xs:element minOccurs="0" name="vendorNumber" type="ac:Int2Type"/>
			<xs:element minOccurs="0" name="remoteIssuanceFlag" type="xs:boolean"/>
			<xs:element minOccurs="0" name="saleIssuanceTag" type="ac:Int1Type"/>
			<xs:element minOccurs="0" name="discountPercentage" type="ac:Decimal3Type"/>
			<xs:element minOccurs="0" name="discountAmount" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="0" name="accountingStartDay" type="ac:Int1Type"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:complexType name="NameType">
		<xs:sequence>
			<xs:element minOccurs="0" name="firstName" type="ac:StringMax20Type"/>			
			<xs:element minOccurs="0" name="lastName" type="ac:StringMax30Type"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NotificationPreferenceType">
		<xs:annotation>
			<xs:documentation>A notification preference associated with a specific consumer. An instance of a notification preference for a consumer represents the particular preference details (opt in/out, frequency, etc.) of that consumer as it pertains to a particular notification type.  </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element minOccurs="0" name="endDate" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>Indicates the date when the notification preference becomes inactive on the consumer profile.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="frequency" type="ac:StringMax15Type">
				<xs:annotation>
					<xs:documentation>Code indicating the frequency that the consumer is to be contacting for this given notification type.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="method" type="ac:StringMax15Type">
				<xs:annotation>
					<xs:documentation>Code value to indicate the method of notification (How does the consumer want to be notified?)
When notification preferences are associated with a Phone then the following enumerated values are valid:
SMS

When notification preferences are associated with an Email then the following enumerated values are valid:
E-MAIL</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="optIn" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Flag indicating if the consumer is opting in/out (true/false) of the specific notification type represented by this notification preference.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="optOutReason" type="ac:StringMax255Type">
				<xs:annotation>
					<xs:documentation>When the optIn flag is "false" the reason for opting out of the specific notification type is declared here.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="preferredLanguage" type="ac:StringMax30Type">
				<xs:annotation>
					<xs:documentation>Code to represent an optional overriding preferred language for the notification preference.  Will be used by the notification type configured if specified.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="startDate" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>Indicates the date when the notification preference becomes active on the consumer profile.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="stronglyAuthenticated" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Flag indicating whether the specific notification preference is strongly authenticated.  A value of false indicates that the preference is weakly authenticated.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="type" type="ac:StringMax30Type">
				<xs:annotation>
					<xs:documentation>Code value to indicate the type of notification. (i.e. What type of notifications does the consumer prefer to opt in/out of?)

Examples: 
- Marketing (Promotion, New Product and Services, Newsletter)
- Transaction Notice (Receipt Notice)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Payload">
		<xs:sequence>
			<xs:element minOccurs="1" name="doCheckIn" type="xs:boolean"/>
			<xs:element minOccurs="1" name="timeStamp" type="xs:dateTime"/>
			<xs:element minOccurs="1" name="flags" type="xs:int">
				<xs:annotation>
					<xs:documentation> encodes bitset, sum of: 1=code tables, 2=profile, 4=receive
						country requirements, 8=software version, 16=language translations
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:complexType name="PartnerCreditType">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="creditLimitInfo" type="ac:CreditLimitInfo"/>
			<xs:element maxOccurs="1" minOccurs="0" name="goodFundsAgentFlag" type="xs:boolean"/>
			<xs:element maxOccurs="1" minOccurs="0" name="depositProofRequiredFlag" type="xs:boolean"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-END-->	
	<!--ACINTERNAL-START-->	
	<xs:complexType name="PaymentTypeInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="paymentTypeCode" type="ac:StringMax2Type"/>
			<xs:element minOccurs="1" name="paymentTypeName" type="ac:StringMax100Type"/>
			<xs:element minOccurs="1" name="paymentTypeDisplayName" type="ac:StringMax100Type"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PersonalIDImageContentType">
		<xs:annotation>
			<xs:documentation>A complex type to define an image with an
				associated identifier.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element minOccurs="1" name="identifier" type="xs:string">
				<xs:annotation>
					<xs:documentation>Each unique image sent from the POE must
						be accompanied by a unique identifier. The unique identifier is a
						key that conforms to one selected from a supported list of
						pre-defined values that are displayable on a receipt. Currently
						supported image identifiers are:
						PERSONALID1_IMAGE
						PERSONALID2_IMAGE
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="personalIDChoice" type="ac:StringMax80Type">
				<xs:annotation>
					<xs:documentation>
						This element is required when uploading image(s) for an existing personal ID without captured image on file
						The value should be the same as returned from the previous API.   
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="personalIDVerificationStr" type="ac:StringMax20Type">
				<xs:annotation>
					<xs:documentation>
						This element is required when uploading image(s) for an existing personal ID without captured image on file. It will be used to verify against the ID number of the chosen personal ID  
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="personalIDNumber" type="ac:StringMax20Type"/>
			<xs:element minOccurs="1" name="mimeType" type="ac:MimeType">
				<xs:annotation>
					<xs:documentation>Images sent from the POE will be required
						to specify the corresponding mime-type of the image from the
						currently supported list:
						
						image/gif
						image/jpeg
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="imageItems">
				<xs:annotation>
					<xs:documentation> The max number of images allowed currently is 2, enforced in the backend. 
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" minOccurs="1" name="imageItem" type="ac:ImageItemType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>	
	<xs:complexType name="ConsumerProfileDocumentContentType">
		<xs:annotation>
			<xs:documentation>A complex type to define an image with an
				associated identifier.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element minOccurs="1" name="identifier" type="xs:string">
				<xs:annotation>
					<xs:documentation>Each unique image sent from the POE must
						be accompanied by a unique identifier. The unique identifier is a
						key that conforms to one selected from a supported list of
						pre-defined values that are displayable on a receipt. Currently
						supported image identifiers are:
						PROOF_OF_ADDRESS
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="1" name="documentIssueDate" type="xs:date">
				<xs:annotation>
						<xs:documentation>
						      This is the date on the document that is being uploaded
						</xs:documentation>
				</xs:annotation>
			</xs:element>							
			<xs:element minOccurs="1" name="mimeType" type="ac:MimeType">
				<xs:annotation>
					<xs:documentation>Images sent from the POE will be required
						to specify the corresponding mime-type of the image from the
						currently supported list:					
						image/gif
						image/jpeg
						application/pdf
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="imageItems">
				<xs:annotation>
					<xs:documentation> The max number of images allowed currently is 2, enforced in the backend. 
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" minOccurs="1" name="imageItem" type="ac:ImageItemType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>	
	<xs:complexType name="TransactionDocumentContentType">
		<xs:annotation>
			<xs:documentation>A complex type to define an image with an
				associated identifier.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element minOccurs="1" name="identifier" type="xs:string">
				<xs:annotation>
					<xs:documentation>
						Currently supported image identifier:
						CONSUMER_SIGNED_RECEIPT
						SOURCE_OF_FUND
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="referenceNumber" type="ac:StringMax20Type"/>
			<xs:element minOccurs="1" name="mimeType" type="ac:MimeType">
				<xs:annotation>
					<xs:documentation>Images sent from the POE will be required
						to specify the corresponding mime-type of the image from the
						currently supported list:
						
						image/gif
						image/jpeg
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="1" name="imageItems">
				<xs:annotation>
					<xs:documentation> The max number of images allowed currently is 2, enforced in the backend. 
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" minOccurs="1" name="imageItem" type="ac:ImageItemType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-END-->
	<xs:complexType name="PreCompletionReceiptType">
		<xs:annotation>
			<xs:documentation>The receipts returned as part of any
				validation-side flow for any POE capability (e.g. Sends, Receives,
				Amends...) are uniquely different than those returned within a
				commit transaction or complete session response. This complex type
				provides the validation-side specific receipt response definition.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element minOccurs="0" name="receiptMimeType" type="ac:MimeType">
				<xs:annotation>
					<xs:documentation>The mime-type specifying the format of the
						receipt binary being returned. The value specified must conform to
						the RFC 2046 standard (see: http://www.ietf.org/rfc/rfc2046.txt).
						Currently, the following format options are supported:
						
						image/gif
						image/jpeg
						application/pdf
						application/vnd.thermal
						application/vnd.text
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="charsetEncoding" type="ac:CharsetType">
				<xs:annotation>
					<xs:documentation>The charset associated with the base64 encoded
						receipt binaries being returned in the response. This should only
						be present if the media type identified by the value of the
						receiptMimeType element is a TEXT based media type for the receipt
						(e.g. application/vnd.thermal OR application/vnd.text). In this
						case the charsetEncoding will contain the charset encoding of the
						text based receipt (e.g. UTF-8, CP437, etc.). It is left solely up
						to a POE implementation as to whether it has any need for the
						charset encoding provided. The common use case would be a POE
						performing a simple pass through of a server-side generated
						receipt on to a printer.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="disclosure1MimeData" type="ac:ReceiptResponseType">
				<xs:annotation>
					<xs:documentation>Binary mime data element containing the pre-pay
						disclosure.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="disclosure2MimeData" type="ac:ReceiptResponseType">
				<xs:annotation>
					<xs:documentation>Binary mime data element for pre-pay disclosures
						where both a primary and secondary language are specified AND
						configuration is set such that a separate receipt is to be
						returned for the secondary language.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProductProfileItemType">
		<xs:sequence>
			<xs:element minOccurs="1" name="index" type="xs:int"/>
			<xs:element minOccurs="1" name="key" type="ac:StringMax40Type"/>
			<xs:element minOccurs="0" name="value" type="ac:StringMax400Type"/>
			<xs:element minOccurs="1" name="productID" type="xs:int"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProfileItemType">
		<xs:sequence>
			<xs:element minOccurs="1" name="index" type="xs:int"/>
			<xs:element minOccurs="1" name="key" type="ac:StringMax40Type"/>
			<xs:element minOccurs="0" name="value" type="ac:StringMax400Type"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PromotionInfo">
		<xs:sequence>
			<xs:element minOccurs="0" name="promotionCode" type="ac:PromoCodeType"/>
			<xs:element minOccurs="0" name="promotionDiscountId" type="ac:StringMax2Type"/>
			<xs:element minOccurs="0" name="promotionCategoryId" type="ac:StringMax2Type"/>
			<xs:element minOccurs="0" name="promotionDiscount" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="0" name="promotionDiscountAmount" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="0" name="promotionErrorCode" type="ac:StringMax4Type"/>
			<xs:element maxOccurs="1" minOccurs="0" name="promotionErrorMessages">
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" minOccurs="0" name="promotionErrorMessage" type="ac:TextTranslationType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:complexType name="PromotionLookupInfo">
		<xs:sequence>
			<xs:element minOccurs="0" name="promotionDiscountName" type="ac:StringMax40Type"/>
			<xs:element minOccurs="0" name="currencyCode" type="ac:CurrencyCodeType"/>
			<xs:element minOccurs="0" name="promotionDiscount" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="0" name="promotionMaxDiscountAmount" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="0" name="promotionCategoryName" type="ac:StringMax40Type"/>
			<xs:element minOccurs="0" name="promotionName" type="ac:StringMax40Type"/>
			<xs:element minOccurs="0" name="promotionId" type="xs:int"/>
			<xs:element minOccurs="0" name="promotionBeginDate" type="ac:StringMax25Type"/>
			<xs:element minOccurs="0" name="promotionEndDate" type="ac:StringMax25Type"/>
			<xs:element minOccurs="0" name="promotionCategoryBeginDate" type="ac:StringMax25Type"/>
			<xs:element minOccurs="0" name="promotionCategoryEndDate" type="ac:StringMax25Type"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<!-- Broadcast Message -->
	<xs:complexType name="PropertyType">
		<xs:sequence>
			<xs:element name="Name" type="xs:string"/>
			<xs:element name="Value" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:complexType name="RawAddressType">
		<xs:complexContent>
			<xs:extension base="ac:BaseRawAddressType">		
				<xs:sequence>
					<xs:element minOccurs="0" name="standardizedAddress" type="ac:StandardizedAddressType"/>				
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>		
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:complexType name="ReceiptFormatDetailsType">
		<xs:complexContent>
			<xs:extension base="ac:DynamicContentAssemblyDetailsType">
				<xs:sequence>
					<xs:element minOccurs="1" name="receiptText" type="xs:string"/>
					<xs:element minOccurs="1" name="md5CheckSum" type="xs:string"/>
					<xs:element minOccurs="1" name="version" type="xs:string"/>
					<xs:element minOccurs="1" name="longLanguageCode" type="xs:string"/>
					<xs:element maxOccurs="1" minOccurs="0" name="additionalLanguages">
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" minOccurs="1" name="longLanguageCode" type="ac:LanguageLongCodeType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:complexType name="ReceiptImageContentType">
		<xs:annotation>
			<xs:documentation>A complex type to define a receipt image with an
				associated identifier.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element minOccurs="1" name="identifier" type="xs:string">
				<xs:annotation>
					<xs:documentation>Each unique receipt image sent from the POE must
						be accompanied by a unique identifier. The unique identifier is a
						key that conforms to one selected from a supported list of
						pre-defined values that are displayable on a receipt. Currently
						supported images identifiers are:
						
						BARCODE
						CUSTOMER_SIGNATURE
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="1" name="mimeType" type="ac:MimeType">
				<xs:annotation>
					<xs:documentation>Receipt images sent from the POE will be required
						to specify the corresponding mime-type of the image from the
						currently supported list:
						
						image/gif
						image/jpeg
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="1" name="image" type="xs:base64Binary" xmime:expectedContentTypes="image/jpeg,image/gif">
				<xs:annotation>
					<xs:documentation>The binary representation of an image to be
						displayed on the receipt.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ReceiptResponseType">
		<xs:annotation>
			<xs:documentation>A complex type definition representing a single
				receipt. A single receipt may be comprised of either one or
				potentially more than one receipt mime data "segment" that
				collectively represents the single receipt. This latter case is
				applicable for PDF receipts that must be represented and returned to
				the POE as multiple images - one for each page in the PDF.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="1" name="receiptMimeDataSegment" type="ac:ReceiptSegmentType">
				<xs:annotation>
					<xs:documentation>A single binary data segment of a receipt. For
						PDF, Thermal and Text receipts will be a binary representation of
						the entire receipt. For image binaries will represent a single
						page of the converted PDF and thus multiple image binary
						"segments" may collectively represent a single PDF receipt.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ReceiptSegmentType">
		<xs:annotation>
			<xs:documentation>Under typical circumstances binary receipts within
				response payloads are simply returned as a single binary receipt.
				The exception to this rule is in the context of PDF receipts. For
				browser-based POEs, newer browsers (e.g. IE11) now do not handle PDF
				receipts as they conventionally have because of security risks. As a
				result POEs may specify in a request (or be configured) to convert
				the generated PDF into equivalent images - one for each page in the
				PDF receipt - and to return those images instead. When that is the
				case images must be printed one per page. Consequently, this complex
				type provides a definition for a receipt "segment" that can be used
				within a response to hold either an entire PDF binary or a segment
				of that PDF represented as an image. In the case of the latter the
				sequence element must be specified to indicate which page of the
				converted PDF receipt that the image corresponds to.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element minOccurs="0" name="sequence" type="xs:int">
				<xs:annotation>
					<xs:documentation>For the current receipt segment represented, if
						the binary being returned is an image then the sequence element
						will additionally be provided with the value (e.g. 1, 2, 3...)
						indicating the page of the original PDF that the image corresponds
						to. In this way a POE can process and print the receipt images in
						an ordered manner if so desired.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="mimeData" type="xs:base64Binary" xmime:expectedContentTypes="*/*">
				<xs:annotation>
					<xs:documentation>The current receipt segment binary data. For all
						non-image receipt binaries (PDF, Thermal or Text) only a single
						receipt segment will be returned and no corresponding sequence
						element will be specified in the response payload.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:complexType name="ReceiptType">
		<xs:sequence>
			<xs:element minOccurs="1" name="receiptText" type="xs:string"/>
			<xs:element minOccurs="1" name="md5CheckSum" type="xs:string"/>
			<xs:element minOccurs="1" name="version" type="xs:string"/>
			<xs:element minOccurs="1" name="longLanguageCode" type="xs:string"/>
			<xs:element minOccurs="0" name="province" type="ac:StringMax3Type"/>
			<xs:element maxOccurs="1" minOccurs="0" name="additionalLanguages">
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" minOccurs="1" name="longLanguageCode" type="ac:LanguageLongCodeType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	
	<xs:complexType name="ReceiveAmountInfo">
		<xs:sequence>
			<xs:element minOccurs="0" name="receiveAmount" type="ac:AmountNonZeroType"/>
			<xs:element minOccurs="0" name="receiveCurrency" type="ac:CurrencyCodeType"/>
			<xs:element minOccurs="1" name="validCurrencyIndicator" type="xs:boolean"/>
			<xs:element minOccurs="0" name="payoutCurrency" type="ac:CurrencyCodeType"/>
			<xs:element minOccurs="0" name="totalReceiveFees" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="0" name="totalReceiveTaxes" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="0" name="totalReceiveAmount" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="1" name="receiveFeesAreEstimated" type="xs:boolean"/>
			<xs:element minOccurs="1" name="receiveTaxesAreEstimated" type="xs:boolean"/>
			<xs:element maxOccurs="1" minOccurs="0" name="detailReceiveAmounts">
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" minOccurs="0" name="detailReceiveAmount" type="ac:AmountInfo"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ReceiverLookupInfo">
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="0" name="currentValues" type="ac:CurrentValuesType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RedirectInfo">
		<xs:sequence>
			<xs:element minOccurs="0" name="originalSendAmount" type="ac:AmountNonZeroType"/>
			<xs:element minOccurs="0" name="originalSendCurrency" type="ac:CurrencyCodeType"/>
			<xs:element minOccurs="0" name="originalSendFee" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="0" name="originalExchangeRate" type="ac:FXRateType"/>
			<xs:element minOccurs="0" name="originalReceiveAmount" type="ac:AmountNonZeroType"/>
			<xs:element minOccurs="0" name="originalReceiveCurrency" type="ac:CurrencyCodeType"/>
			<xs:element minOccurs="0" name="originalReceiveCountry" type="ac:CountryCodeType"/>
			<xs:element minOccurs="0" name="newSendFee" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="0" name="newExchangeRate" type="ac:FXRateType"/>
			<xs:element minOccurs="0" name="newReceiveAmount" type="ac:AmountNonZeroType"/>
			<xs:element minOccurs="0" name="newReceiveCurrency" type="ac:CurrencyCodeType"/>
			<xs:element minOccurs="0" name="feeDifference" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="0" name="redirectType" type="ac:RedirectInfoRedirectType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SendAmountInfo">
		<xs:sequence>
			<xs:element minOccurs="0" name="sendAmount" type="ac:AmountNonZeroType"/>
			<xs:element minOccurs="0" name="sendCurrency" type="ac:CurrencyCodeType"/>
			<xs:element minOccurs="0" name="totalSendFees" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="0" name="totalDiscountAmount" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="0" name="totalSendTaxes" type="ac:AmountIncludeZeroType"/>
			<xs:element minOccurs="0" name="totalAmountToCollect" type="ac:AmountNonZeroType"/>
			<xs:element maxOccurs="1" minOccurs="0" name="detailSendAmounts">
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" minOccurs="0" name="detailSendAmount" type="ac:AmountInfo"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SenderLookupInfo">
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="0" name="currentValues" type="ac:CurrentValuesType"/>
			<xs:element maxOccurs="1" minOccurs="0" name="receiverInfos">
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" minOccurs="0" name="receiverInfo" type="ac:ReceiverLookupInfo"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="billerInfos">
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" minOccurs="0" name="billerInfo" type="ac:BillerLookupInfo"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ServiceOptionInfo">
		<xs:sequence>
			<xs:element minOccurs="0" name="serviceOption" type="ac:ServiceOptionType"/>
			<xs:element minOccurs="0" name="receiveCurrency" type="ac:CurrencyCodeType"/>
			<xs:element minOccurs="0" name="receiveAgentID" type="ac:AgentIDType"/>
			<xs:element minOccurs="0" name="serviceOptionDisplayName" type="ac:StringMax50Type"/>
			<xs:element minOccurs="0" name="serviceOptionDisplayDescription" type="ac:StringMax500Type"/>
			<xs:element minOccurs="0" name="serviceOptionCategoryId" type="xs:string"/>
			<xs:element minOccurs="0" name="serviceOptionCategoryDisplayName" type="xs:string"/>
			<xs:element minOccurs="0" name="localCurrency" type="xs:string"/>
			<xs:element minOccurs="1" name="indicativeRateAvailable" type="xs:boolean"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="StagedTransactionInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="mgiSessionType" type="ac:SessionType"/>
			<xs:element minOccurs="0" name="senderFirstName" type="ac:NameFirstType"/>
			<xs:element minOccurs="0" name="senderMiddleName" type="ac:NameMiddleType"/>
			<xs:element minOccurs="0" name="senderLastName" type="ac:NameLastType"/>
			<xs:element minOccurs="0" name="senderLastName2" type="ac:NameLastType"/>
			<xs:element minOccurs="0" name="senderAddress" type="ac:AddressType"/>
			<xs:element minOccurs="0" name="senderCity" type="ac:CityType"/>
			<xs:element minOccurs="0" name="senderCountrySubdivision" type="ac:CountrySubdivisionCodeType"/>
			<xs:element minOccurs="0" name="senderCountry" type="ac:CountryCodeType"/>
			<xs:element minOccurs="0" name="senderPostalCode" type="ac:PostalType"/>
			<xs:element minOccurs="0" name="senderPhone" type="ac:PhoneShortType"/>
			<xs:element minOccurs="0" name="mgiRewardsNumber" type="ac:StringMax20Type"/>
			<xs:element minOccurs="0" name="receiverFirstName" type="ac:NameFirstType"/>
			<xs:element minOccurs="0" name="receiverMiddleName" type="ac:NameMiddleType"/>
			<xs:element minOccurs="0" name="receiverLastName" type="ac:NameLastType"/>
			<xs:element minOccurs="0" name="receiverLastName2" type="ac:NameLastType"/>
			<xs:element minOccurs="0" name="destinationCountrySubdivision" type="ac:CountrySubdivisionCodeType"/>
			<xs:element minOccurs="0" name="destinationCountry" type="ac:CountryCodeType"/>
			<xs:element minOccurs="0" name="billerName" type="ac:StringMax64Type"/>
			<xs:element minOccurs="0" name="billerAccountNumber" type="ac:BillerAccountNumberType"/>
			<xs:element minOccurs="1" name="confirmationNumber" type="ac:ConfirmationNumberType"/>
			<xs:element minOccurs="1" name="sendAmount" type="ac:AmountNonZeroType"/>
			<xs:element minOccurs="1" name="sendCurrency" type="ac:CurrencyCodeType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="StandardizedAddressType">
		<xs:complexContent>
			<xs:extension base="ac:BaseRawAddressType">
				<xs:sequence>
					<xs:element minOccurs="0" name="addressCleansingScore" type="ac:AddressCleansingScoreType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="StateRegulatorInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="dfJurisdiction" type="xs:string"/>
			<xs:element minOccurs="1" name="stateRegulatorURL" type="ac:StringMax2000Type"/>
			<xs:element minOccurs="1" name="stateRegulatorPhone" type="ac:StringMax100Type"/>
			<xs:element maxOccurs="unbounded" minOccurs="1" name="stateRegulatorName" type="ac:TextTranslationType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="StoreHourInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="dayOfWeek" type="ac:DayOfWeekType"/>
			<xs:element minOccurs="0" name="openTime" type="xs:time"/>
			<xs:element minOccurs="0" name="closeTime" type="xs:time"/>
			<xs:element minOccurs="1" name="closed" type="xs:boolean"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:complexType name="SubagentInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="agentID" type="xs:int"/>
			<xs:element minOccurs="0" name="sequenceNumber" type="xs:int"/>
			<xs:element minOccurs="0" name="legacyAgentID" type="xs:string"/>
			<xs:element minOccurs="0" name="city" type="ac:CityLongType"/>
			<xs:element minOccurs="1" name="branchName" type="xs:string"/>
			<xs:element minOccurs="1" name="agentStatus" type="xs:int"/>
			<xs:element minOccurs="0" name="storeNumber" type="xs:string"/>
			<xs:element minOccurs="0" name="agentStoreName" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:complexType name="SubagentProfileUpdateType">
		<xs:sequence>
			<xs:element name="agentID" type="xs:string"/>
			<xs:element name="sequenceNumber" type="xs:int"/>
			<xs:element name="profileItemName" type="xs:string"/>
			<xs:element name="profileItemValue" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:complexType name="SubdivisionInfo">
		<xs:sequence>
			<xs:element minOccurs="1" name="countrySubdivisionCode" type="ac:CountrySubdivisionCodeType"/>
			<xs:element minOccurs="1" name="countrySubdivisionName" type="ac:CountrySubdivisionNameType"/>
		</xs:sequence>
	</xs:complexType>
		
	<xs:element name="SystemError" type="ac:SystemError"/>
	<xs:complexType name="SystemError">
		<xs:sequence>
			<xs:element minOccurs="1" name="timeStamp" type="xs:dateTime"/>
			<xs:element minOccurs="1" name="errorCode" type="ac:ErrorCodeType"/>
			<xs:element minOccurs="0" name="errorString" type="ac:ErrorStringShortType"/>
			<xs:element minOccurs="0" name="subErrorCode" type="ac:ErrorCodeType"/>
			<xs:element minOccurs="0" name="detailString" type="ac:ErrorStringLongType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TextTranslationType">
		<xs:sequence>
			<xs:element name="longLanguageCode" type="xs:string"/>
			<xs:element name="textTranslation" type="ac:TranslationTextType"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:complexType name="TimeZoneCorrectionType">
		<xs:sequence>
			<xs:element minOccurs="0" name="timeZoneId" type="xs:string"/>
			<xs:element minOccurs="0" name="offset" type="xs:int"/>
			<xs:element minOccurs="0" name="dstSavings" type="xs:int"/>
			<xs:element minOccurs="0" name="startMode" type="xs:int"/>
			<xs:element minOccurs="0" name="startDay" type="xs:int"/>
			<xs:element minOccurs="0" name="startMonth" type="xs:int"/>
			<xs:element minOccurs="0" name="startDayOfWeek" type="xs:int"/>
			<xs:element minOccurs="0" name="startTime" type="xs:int"/>
			<xs:element minOccurs="0" name="startTimeMode" type="xs:int"/>
			<xs:element minOccurs="0" name="endMode" type="xs:int"/>
			<xs:element minOccurs="0" name="endDay" type="xs:int"/>
			<xs:element minOccurs="0" name="endMonth" type="xs:int"/>
			<xs:element minOccurs="0" name="endDayOfWeek" type="xs:int"/>
			<xs:element minOccurs="0" name="endTime" type="xs:int"/>
			<xs:element minOccurs="0" name="endTimeMode" type="xs:int"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<xs:complexType name="UCPResponseEmailType">
		<xs:sequence>
			<xs:element minOccurs="0" name="bounceDate" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>Indicates the dates when the email address has been flagged as potentially "bad/invalid".</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="emailAddress" type="ac:EmailAddressType"/>
			<xs:element minOccurs="0" name="endDate" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>Indicates the date when the email address becomes inactive on the consumer profile.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="startDate" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>Indicates the date when the email address begins to be effective on the consumer profile.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="status" type="ac:String8Type">
				<xs:annotation>
					<xs:documentation>Code indicating the status of an email address.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="stronglyAuthenticated" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Flag indicating whether the specific email instance is strongly authenticated.  A value of false indicates that the email is weakly authenticated.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="type" type="ac:StringMax15Type">
				<xs:annotation>
					<xs:documentation>Code indicating the type of email address.

Current valid enumerated values are:
EMAIL</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="notificationPreference" type="ac:NotificationPreferenceType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UCPResponsePhoneType">
		<xs:sequence>
			<xs:element minOccurs="0" name="countryDialInNumber" type="ac:StringMax4Type">
				<xs:annotation>
					<xs:documentation>Code to represent telephone country code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="endDate" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>Indicates the date till when the phone number becomes inactive on the consumer profile.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="mobileFlag" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Indicates if the phone number is a cellular number or not. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="phoneNumber" type="ac:PhoneType"/>
			<xs:element minOccurs="0" name="startDate" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>Indicates the date when the phone number begins to be effective on the consumer profile.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="stronglyAuthenticated" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Flag indicating whether the specific phone number is strongly authenticated.  A value of false indicates that the phone number is weakly authenticated.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="type" type="ac:StringMax4Type"/>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="notificationPreference" type="ac:NotificationPreferenceType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UCPResponseProfileType">		
		<xs:sequence>
			<xs:element minOccurs="0" name="dateOfBirth" type="xs:date"/>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="emailAddress" type="ac:UCPResponseEmailType"/>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="identificationDocument" type="ac:IdentificationDocumentType"/>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="name" type="ac:NameType"/>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="phoneNumber" type="ac:UCPResponsePhoneType"/>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="consumerProfileIdentifier" type="ac:ConsumerProfileIdentifierType"/>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="rawAddress" type="ac:RawAddressType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UCPRequestEmailType">
		<xs:sequence>
			<xs:element minOccurs="0" name="emailAddress" type="ac:EmailAddressType"/>			
			<xs:element minOccurs="0" name="type" type="ac:StringMax15Type"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UCPRequestPhoneType">
		<xs:sequence>
			<xs:element minOccurs="0" name="phoneNumber" type="ac:PhoneType"/>			
			<xs:element minOccurs="0" name="type" type="ac:StringMax15Type"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UCPRequestProfileType">	
		<xs:sequence>			
			<xs:element minOccurs="0" name="dateOfBirth" type="xs:date"/>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="emailAddress" type="ac:UCPRequestEmailType"/>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="name" type="ac:NameType"/>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="phoneNumber" type="ac:UCPRequestPhoneType"/>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="rawAddress" type="ac:RawAddressType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VariableReceiptTextInfo">
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="1" name="receiptTextType" type="xs:string"/>
			<xs:element maxOccurs="unbounded" minOccurs="1" name="textTranslation" type="ac:TextTranslationType"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-START-->
	<xs:complexType name="VersionInfo">
		<xs:sequence>
			<xs:element minOccurs="0" name="versionType" type="xs:string"/>
			<xs:element minOccurs="0" name="versionLevel" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<!--ACINTERNAL-END-->
	<!--===========================-->
	<!-- xs:simpleType definitions -->
	<!--===========================-->
	<xs:simpleType name="AddressType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="80"/>
			<xs:pattern value=".*\S.*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Address30Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="30"/>
			<xs:pattern value=".*\S.*"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-START-->
	<xs:simpleType name="AgentCheckAuthNumber">
		<xs:restriction base="xs:string">
			<xs:maxLength value="5"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<xs:simpleType name="AgentFrequentCustomerNumberType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="25"/>
			<xs:pattern value="([a-zA-Z0-9])*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="AgentIDType">
		<xs:restriction base="xs:string">
			<xs:length value="8"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="AgentNameType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="40"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="AgentNumberType">
		<xs:restriction base="xs:string">
			<xs:length value="6"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="AgentSequenceType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="2"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="AmountIncludeZeroType">
		<xs:restriction base="xs:decimal">
			<xs:minInclusive value="0"/>
			<xs:maxExclusive value="100000000000000"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="AmountNonZeroType">
		<xs:restriction base="xs:decimal">
			<xs:minExclusive value="0"/>
			<xs:maxExclusive value="100000000000000"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-START-->
	<xs:simpleType name="AnnouncementRemarksType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="200"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<xs:simpleType name="AreaCodePrefixType">
		<xs:restriction base="xs:string">
			<xs:length value="6"/>
			<xs:pattern value="[0-9]{6}"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-START-->
	<xs:simpleType name="BankShortCodeType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="30"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<xs:simpleType name="BillerAccountNumberType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="30"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="BillerSearchType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="IND">
				<xs:annotation>
					<xs:documentation>search by industry (and agent's DMA)</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CODE">
				<xs:annotation>
					<xs:documentation>search by receive code / keyword</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NAME">
				<xs:annotation>
					<xs:documentation>search by biller name and industry
						(optional)</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ID">
				<xs:annotation>
					<xs:documentation>Search by billerID and productVariant
						(optional)</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BIN">
				<xs:annotation>
					<xs:documentation>Search by Bin Number</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="BinNumberType">
		<xs:restriction base="xs:string">
			<xs:length value="6"/>
			<xs:pattern value="[0-9]{6}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="CharsetType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="10"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="CityType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="60"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-START-->
	<xs:simpleType name="City20Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="20"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<xs:simpleType name="CityLongType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="40"/>
			<xs:pattern value=".*\S.*"/>
		</xs:restriction>
	</xs:simpleType>	
	<xs:simpleType name="ClientSWVersionType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="6"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-START-->
	<xs:simpleType name="ComplianceTransactionRequestType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="STANDALONE"/>
			<xs:enumeration value="PROPOSED"/>
			<xs:enumeration value="COMPLETED_WITH_CHANGES"/>
			<xs:enumeration value="COMPLETED_WITHOUT_CHANGES"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<xs:simpleType name="ConfirmationNumberType">
		<xs:restriction base="xs:string">
			<xs:length value="7"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ConsumerProfileIDType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="20"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ConsumerProfileIDTypeType">
		<xs:annotation>
			<xs:documentation>The consumerProfileID needs to be identified by a type. Current types are:
				TODO: Some of these we may not want to document!
				
				TRANSIENT (UCP)
				MGO
				KIOSK
				MGI_PLUS
				Partner-Specific IDs
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="CountryCodeType">
		<xs:restriction base="xs:string">
			<xs:length value="3"/>
			<xs:pattern value=".*\S.*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="CountryNameType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="60"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="CountrySubdivisionCodeType">
		<xs:annotation>
			<xs:documentation>Follows ISO 3166-2 standard</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="4"/>
			<xs:maxLength value="6"/>
			<xs:pattern value="[A-Z]{2}-[A-Z0-9]+"/>
		</xs:restriction>
		<!-- TODO: Check Regex -->
	</xs:simpleType>
	<xs:simpleType name="CountrySubdivisionNameType">
		<xs:annotation>
			<xs:documentation>Follows ISO 3166-2 standard</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="60"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="CurrencyCodeType">
		<xs:restriction base="xs:string">
			<xs:length value="3"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="CurrencyPrecisionType">
		<xs:restriction base="xs:integer">
			<xs:maxInclusive value="3"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-START-->
	<xs:simpleType name="CustomerComplianceTypeCodeType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="EMPTY_OR_NONE"/>
			<xs:enumeration value="OFAC_OR_AGGREGATION"/>
			<xs:enumeration value="MSL"/>
			<xs:enumeration value="RKL"/>
			<xs:enumeration value="CTR"/>
			<xs:enumeration value="SAR"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<xs:simpleType name="CustomerReceiveNumberType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="255"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="DataType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="boolean"/>
			<xs:enumeration value="string"/>
			<xs:enumeration value="int"/>
			<xs:enumeration value="long"/>
			<xs:enumeration value="decimal"/>
			<xs:enumeration value="date"/>
			<xs:enumeration value="datetime"/>
			<xs:enumeration value="time"/>
			<xs:enumeration value="enum"/>
			<xs:enumeration value="gMonth"/>
			<xs:enumeration value="gYear"/>
			<xs:enumeration value="gDay"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="DayOfWeekType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="MON"/>
			<xs:enumeration value="TUE"/>
			<xs:enumeration value="WED"/>
			<xs:enumeration value="THU"/>
			<xs:enumeration value="FRI"/>
			<xs:enumeration value="M-F">
				<xs:annotation>
					<xs:documentation>Monday through Friday</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="S-S">
				<xs:annotation>
					<xs:documentation>Saturday and Sunday</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SAT"/>
			<xs:enumeration value="SUN"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-START-->
	<!-- MoneyOrders -->
	<xs:simpleType name="Decimal3Type">
		<xs:restriction base="xs:decimal">
			<xs:maxExclusive value="1000"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<xs:simpleType name="Decimal3ThreePrecType">
		<xs:restriction base="xs:decimal">
			<xs:maxExclusive value="1000"/>
			<xs:fractionDigits value="3"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-START-->
	<xs:simpleType name="Decimal8Type">
		<xs:restriction base="xs:decimal">
			<xs:maxExclusive value="100000000"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:simpleType name="Decimal9nonZeroType">
		<xs:restriction base="xs:decimal">
			<xs:minExclusive value="0"/>
			<xs:maxExclusive value="1000000000"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:simpleType name="DepositAnnouncementIDType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="15"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:simpleType name="DepositReferenceNumberType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="35"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<xs:simpleType name="DocumentationType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="80"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-START-->
	<xs:simpleType name="DwPasswordReasonCodeType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="PASSED"/>
			<xs:enumeration value="EMP_NOT_EXIST"/>
			<xs:enumeration value="IN_HIST"/>
			<xs:enumeration value="FORMAT_ERROR"/>
			<!-- Good Password -->
			<!-- Employe Does Not Exist -->
			<!-- Password Used In History -->
			<!-- Password Format Error -->
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<xs:simpleType name="EnumerationNameType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="40"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="EnumType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="128"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ErrorCategoryType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="40"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ErrorCodeType">
		<xs:restriction base="xs:integer"/>
	</xs:simpleType>
	<xs:simpleType name="ErrorStringShortType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="150"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ErrorStringLongType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="300"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ExampleFormatType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="50"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ExpectedPostingTimeFrameType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="150"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="FeeType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="VARIABLE"/>
			<xs:enumeration value="EXACT"/>
			<xs:enumeration value="MINIMUM"/>
			<xs:enumeration value="NOT_FOUND"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="FieldValueType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="255"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="FreePhoneCallPINType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="14"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="FXRateType">
		<xs:restriction base="xs:decimal">
			<xs:minExclusive value="0"/>
			<xs:maxExclusive value="100000000000000"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="GAFVersionNumberType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="20"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="HelpTextLongType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="200"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="HelpTextShortType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="50"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="IndustryIdType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="6"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="InfoKeyType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="80"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-START-->
	<xs:simpleType name="Int1Type">
		<xs:restriction base="xs:integer">
			<xs:maxExclusive value="10"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:simpleType name="Int2Type">
		<xs:restriction base="xs:integer">
			<xs:maxExclusive value="100"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<xs:simpleType name="Int3Type">
		<xs:restriction base="xs:integer">
			<xs:maxExclusive value="1000"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Int4Type">
		<xs:restriction base="xs:integer">
			<xs:maxExclusive value="10000"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-START-->
	<xs:simpleType name="Int5Type">
		<xs:restriction base="xs:integer">
			<xs:maxExclusive value="100000"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:simpleType name="Int11Type">
		<xs:restriction base="xs:integer">
			<xs:maxExclusive value="100000000000"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<xs:simpleType name="InternationalBankAccountNumberType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="34"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="IntMaxToReturnType">
		<xs:restriction base="xs:integer">
			<xs:minExclusive value="0"/>
			<xs:maxExclusive value="11"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="LabelShortType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="30"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="LabelType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="50"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Language5Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="5"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="LanguageLongCodeType">
		<xs:restriction base="xs:string">
			<xs:length value="3"/>
			<xs:pattern value="[a-zA-Z]{3}"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-START-->
	<xs:simpleType name="LegalIdType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="SSN"/>
			<xs:enumeration value="INT"/>
			<xs:enumeration value="TAX"/>
			<xs:enumeration value="ALN"/>
			<!-- USA social security number -->
			<!-- international id -->
			<!-- tax id -->
			<!-- alien id  -->
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<xs:simpleType name="LocaleType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="35"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="LookupDataSourceType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="80"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="LookupKeyType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="80"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="MgCustomerReceiveNumberType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="20"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="MGISessionIDType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="38"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="MimeType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="50"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-START-->
	<xs:simpleType name="MoneyOrderPrintStatusType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="PROPOSED"/>
			<xs:enumeration value="NOT_ATTEMPTED"/>
			<xs:enumeration value="ATTEMPTED"/>
			<xs:enumeration value="CONFIRMED_PRINTED"/>
			<xs:enumeration value="CONFIRMED_NOT_PRINTED"/>
			<!-- proposed (assume will be printed) -->
			<!-- not attempted (canceled) -->
			<!-- limbo (attempted, assumed printed) -->
			<!-- confirmed printed -->
			<!-- confirmed not printed (attempted and failed) -->
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<!--ACINTERNAL-START-->
	<xs:simpleType name="MoneyOrderVoidReasonCodeType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="DISPENSER_ERROR"/>
			<xs:enumeration value="DEMO_MODE"/>
			<xs:enumeration value="TRAINING_MODE"/>
			<xs:enumeration value="TEST_VOID"/>
			<xs:enumeration value="VOID_REMAINING"/>
			<xs:enumeration value="LAST_ITEM"/>
			<!-- dispenser error handler -->
			<!-- demo mode -->
			<!-- training mode -->
			<!-- test void -->
			<!-- void remaining forms during load -->
			<!-- last (unprintable) item in pack -->
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<xs:simpleType name="NameFirstType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="40"/>
			<xs:pattern value=".*\S.*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="NameLastType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="40"/>
			<xs:pattern value=".*\S.*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="NameMiddleType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="40"/>
			<xs:pattern value=".*\S.*"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-START-->
	<xs:simpleType name="NameMiddleInitialType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="1"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<xs:simpleType name="OperatorNameType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="20"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="OverwriteConsumerKeysType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="15"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-START-->
	<xs:simpleType name="PaperFormatType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="10"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<xs:simpleType name="PartnerConfirmationNumberType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="11"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PartnerNameType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="20"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PaymentType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="CASH"/>
			<xs:enumeration value="CARD"/>
			<xs:enumeration value="CANCL"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PayoutType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="10"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PhoneType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="16"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Phone14Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="14"/>
			<xs:pattern value="[0-9]+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PhoneShortType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="14"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-START-->
	<xs:simpleType name="PhotoIdType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="DRV"/>
			<xs:enumeration value="PAS"/>
			<xs:enumeration value="STA"/>
			<xs:enumeration value="GOV"/>
			<xs:enumeration value="ALN"/>
			<!-- drivers license -->
			<!-- passport -->
			<!-- state ID -->
			<!-- government id -->
			<!-- alien id -->
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<xs:simpleType name="PostalType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="10"/>
			<xs:pattern value=".*\S.*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ProductVariantType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="EP">
				<xs:annotation>
					<xs:documentation>Express Payment</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PREPAY">
				<xs:annotation>
					<xs:documentation>Prepaid Payment</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UBP">
				<xs:annotation>
					<xs:documentation>Utility Bill Payment</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PromoCodeType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="20"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ReceiveAgentAbbreviationType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="10"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ReceiveCodeType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="40"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="RedirectInfoRedirectType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="CURRENCY_REDIRECT"/>
			<xs:enumeration value="COUNTRY_REDIRECT"/>
			<xs:enumeration value="COUNTRY_CURRENCY_REDIRECT"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ReferenceNumberType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="12"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ReferenceNumberTextType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="240"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-START-->
	<xs:simpleType name="ReprintReceiptType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="10"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<xs:simpleType name="SendReversalType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="C">
				<xs:annotation>
					<xs:documentation>Cancel</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="R">
				<xs:annotation>
					<xs:documentation>Refund</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ServiceOptionDisplayDescriptionType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="500"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ServiceOfferingIDType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="21"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ServiceOptionType">
		<xs:annotation>
			<xs:documentation>
				Use getServiceOptions API to determine all current services offered.				
				Common Values are:
				WILL_CALL		Receiver needs to go to agent to collect funds
				BANK_DEPOSIT	Funds will be deposited into receiver's account
				HOME_DELIVERY	Funds will be delivered to receiver's home
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="15"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StateRegulatorVersionType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="20"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StateType">
		<xs:restriction base="xs:string">
			<xs:length value="2"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StateLongType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="25"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StringMax2Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="2"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StringMax3Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="3"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StringMax4Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="4"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StringMax7Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="7"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-START-->
	<xs:simpleType name="StringMax8Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="8"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<xs:simpleType name="String8Type">
		<xs:restriction base="xs:string">
			<xs:length value="8"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StringMax10Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="10"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StringMax12Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="12"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StringMax14Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="14"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-START-->
	<xs:simpleType name="String14Type">
		<xs:restriction base="xs:string">
			<xs:length value="14"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<xs:simpleType name="StringMax15Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="15"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StringMax18Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="18"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StringMax20Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="20"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StringMax24Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="24"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StringMax30Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="30"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-START-->
	<xs:simpleType name="StringMax25Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="25"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<xs:simpleType name="StringMax40Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="40"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StringMax50Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="50"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StringMax64Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="64"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StringMax80Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="80"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StringMax100Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="100"/>
		</xs:restriction>
	</xs:simpleType>	
	<xs:simpleType name="StringMax128Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="128"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StringMax255Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="255"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StringMax400Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="400"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StringMax500Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="500"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StringMax2000Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="2000"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-START-->
	<xs:simpleType name="StringMax4000Type">
		<xs:restriction base="xs:string">
			<xs:maxLength value="4000"/>
		</xs:restriction>
	</xs:simpleType>
	<!--ACINTERNAL-END-->
	<xs:simpleType name="TokenType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="20"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="TransactionPinType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="8"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="TransactionStatusType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="AVAIL">
				<xs:annotation>
					<xs:documentation>
						Funds are available to be received
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CANCL">
				<xs:annotation>
					<xs:documentation>
						Transaction has been cancelled
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RECVD">
				<xs:annotation>
					<xs:documentation>
						Funds have been picked up by the receiver 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="REFND">
				<xs:annotation>
					<xs:documentation>
						Transaction has been refunded to the sender
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AFR">
				<xs:annotation>
					<xs:documentation>
						Transaction is available for refund to the sender. It can no longer be received.
						For example, this may happen in an account deposit scenario when the account is closed.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UNCOMMITED">
				<xs:annotation>
					<xs:documentation>
						Transaction has not been committed (via the completeSession). MGI considers these transactions to be unfunded.
						FormFree staged transactions also fall into this category until they are completed at the POE.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PRCSS">
				<xs:annotation>
					<xs:documentation>
						Transaction is being processed and may not yet be available for receive.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="TranslationTextType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="2000"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="SessionType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="BP">
				<xs:annotation>
					<xs:documentation>Bill Payment</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SEND">
				<xs:annotation>
					<xs:documentation>MoneyGram Send</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RCV">
				<xs:annotation>
					<xs:documentation>MoneyGram Receive</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SREV">
				<xs:annotation>
					<xs:documentation>Send Reversal</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RREV">
				<xs:annotation>
					<xs:documentation>Receive Reversal</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AMD">
				<xs:annotation>
					<xs:documentation>Amend</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="UnitProfileIDType">
		<xs:restriction base="xs:int"/>
	</xs:simpleType>
	<xs:simpleType name="ValidationRegExType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="255"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="VersionType">
		<xs:restriction base="xs:string">
			<xs:maxLength value="20"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="CountyType">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
	<xs:simpleType name="AddressCleansingScoreType">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>	
	<xs:simpleType name="monthType">
    	<xs:restriction base="xs:string">
    		<xs:maxLength value="2"/>
    	</xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="dayType">
    	<xs:restriction base="xs:string">
    		<xs:maxLength value="2"/>
    	</xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="yearType">
    	<xs:restriction base="xs:string">
    		<xs:maxLength value="4"/>
    	</xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="EmailAddressType">
    	<xs:restriction base="xs:token">
    		<xs:maxLength value="60"/>
    		<!-- "([\.a-zA-Z0-9_-])+@([a-zA-Z0-9_-)+([a-zA-Z0-9_-)*\.([a-zA-Z0-9_-]+)+"  --> 
    		<xs:pattern value="([\.a-zA-Z0-9_\-])+@([a-zA-Z0-9_\-])+([a-zA-Z0-9_\-])*\.([a-zA-Z0-9_\-]+)+"/> 
    	</xs:restriction>
    </xs:simpleType>
</xs:schema>
	</types>
	<message name="amendValidationRequest">
		<part element="tns:amendValidationRequest" name="amendValidationRequest"/>
	</message>
	<message name="amendValidationResponse">
		<part element="tns:amendValidationResponse" name="amendValidationResponse"/>
	</message>
	<message name="billerSearchRequest">
		<part element="tns:billerSearchRequest" name="billerSearchRequest"/>
	</message>
	<message name="billerSearchResponse">
		<part element="tns:billerSearchResponse" name="billerSearchResponse"/>
	</message>
	<message name="billPaymentDetailReportRequest">
		<part element="tns:billPaymentDetailReportRequest" name="billPaymentDetailReportRequest"/>
	</message>
	<message name="billPaymentDetailReportResponse">
		<part element="tns:billPaymentDetailReportResponse" name="billPaymentDetailReportResponse"/>
	</message>
	<message name="billPaymentSummaryReportRequest">
		<part element="tns:billPaymentSummaryReportRequest" name="billPaymentSummaryReportRequest"/>
	</message>
	<message name="billPaymentSummaryReportResponse">
		<part element="tns:billPaymentSummaryReportResponse" name="billPaymentSummaryReportResponse"/>
	</message>
	<message name="bpValidationRequest">
		<part element="tns:bpValidationRequest" name="bpValidationRequest"/>
	</message>
	<message name="bpValidationResponse">
		<part element="tns:bpValidationResponse" name="bpValidationResponse"/>
	</message>
	<message name="checkInRequest">
		<part element="tns:checkInRequest" name="checkInRequest"/>
	</message>
	<message name="checkInResponse">
		<part element="tns:checkInResponse" name="checkInResponse"/>
	</message>
	<message name="cityListRequest">
		<part element="tns:cityListRequest" name="cityListRequest"/>
	</message>
	<message name="cityListResponse">
		<part element="tns:cityListResponse" name="cityListResponse"/>
	</message>
	<message name="completeSessionRequest">
		<part element="tns:completeSessionRequest" name="completeSessionRequest"/>
	</message>
	<message name="completeSessionResponse">
		<part element="tns:completeSessionResponse" name="completeSessionResponse"/>
	</message>
	<message name="complianceTransactionRequest">
		<part element="tns:complianceTransactionRequest" name="complianceTransactionRequest"/>
	</message>
	<message name="complianceTransactionResponse">
		<part element="tns:complianceTransactionResponse" name="complianceTransactionResponse"/>
	</message>
	<message name="confirmTokenRequest">
		<part element="tns:confirmTokenRequest" name="confirmTokenRequest"/>
	</message>
	<message name="confirmTokenResponse">
		<part element="tns:confirmTokenResponse" name="confirmTokenResponse"/>
	</message>
	<message name="consumerHistoryLookupRequest">
		<part element="tns:consumerHistoryLookupRequest" name="consumerHistoryLookupRequest"/>
	</message>
	<message name="consumerHistoryLookupResponse">
		<part element="tns:consumerHistoryLookupResponse" name="consumerHistoryLookupResponse"/>
	</message>
	<message name="createOrUpdateProfileConsumerRequest">
		<part element="tns:createOrUpdateProfileConsumerRequest" name="createOrUpdateProfileConsumerRequest"/>
	</message>
	<message name="createOrUpdateProfileConsumerResponse">
		<part element="tns:createOrUpdateProfileConsumerResponse" name="createOrUpdateProfileConsumerResponse"/>
	</message>
	<message name="createOrUpdateProfileReceiverRequest">
		<part element="tns:createOrUpdateProfileReceiverRequest" name="createOrUpdateProfileReceiverRequest"/>
	</message>
	<message name="createOrUpdateProfileReceiverResponse">
		<part element="tns:createOrUpdateProfileReceiverResponse" name="createOrUpdateProfileReceiverResponse"/>
	</message>
	<message name="createOrUpdateProfileSenderRequest">
		<part element="tns:createOrUpdateProfileSenderRequest" name="createOrUpdateProfileSenderRequest"/>
	</message>
	<message name="createOrUpdateProfileSenderResponse">
		<part element="tns:createOrUpdateProfileSenderResponse" name="createOrUpdateProfileSenderResponse"/>
	</message>
	<message name="depositAnnouncementRequest">
		<part element="tns:depositAnnouncementRequest" name="depositAnnouncementRequest"/>
	</message>
	<message name="depositAnnouncementResponse">
		<part element="tns:depositAnnouncementResponse" name="depositAnnouncementResponse"/>
	</message>
	<message name="directoryOfAgentsByAreaCodePrefixRequest">
		<part element="tns:directoryOfAgentsByAreaCodePrefixRequest" name="directoryOfAgentsByAreaCodePrefixRequest"/>
	</message>
	<message name="directoryOfAgentsByAreaCodePrefixResponse">
		<part element="tns:directoryOfAgentsByAreaCodePrefixResponse" name="directoryOfAgentsByAreaCodePrefixResponse"/>
	</message>
	<message name="directoryOfAgentsByCityRequest">
		<part element="tns:directoryOfAgentsByCityRequest" name="directoryOfAgentsByCityRequest"/>
	</message>
	<message name="directoryOfAgentsByCityResponse">
		<part element="tns:directoryOfAgentsByCityResponse" name="directoryOfAgentsByCityResponse"/>
	</message>
	<message name="directoryOfAgentsByZipRequest">
		<part element="tns:directoryOfAgentsByZipRequest" name="directoryOfAgentsByZipRequest"/>
	</message>
	<message name="directoryOfAgentsByZipResponse">
		<part element="tns:directoryOfAgentsByZipResponse" name="directoryOfAgentsByZipResponse"/>
	</message>
	<message name="disclosureTextDetailsRequest">
		<part element="tns:disclosureTextDetailsRequest" name="disclosureTextDetailsRequest"/>
	</message>
	<message name="disclosureTextDetailsResponse">
		<part element="tns:disclosureTextDetailsResponse" name="disclosureTextDetailsResponse"/>
	</message>
	<message name="doddFrankStateRegulatorInfoRequest">
		<part element="tns:doddFrankStateRegulatorInfoRequest" name="doddFrankStateRegulatorInfoRequest"/>
	</message>
	<message name="doddFrankStateRegulatorInfoResponse">
		<part element="tns:doddFrankStateRegulatorInfoResponse" name="doddFrankStateRegulatorInfoResponse"/>
	</message>
	<message name="dwPasswordRequest">
		<part element="tns:dwPasswordRequest" name="dwPasswordRequest"/>
	</message>
	<message name="dwPasswordResponse">
		<part element="tns:dwPasswordResponse" name="dwPasswordResponse"/>
	</message>
	<message name="dwProfileRequest">
		<part element="tns:dwProfileRequest" name="dwProfileRequest"/>
	</message>
	<message name="dwProfileResponse">
		<part element="tns:dwProfileResponse" name="dwProfileResponse"/>
	</message>
	<message name="dwInitialSetupRequest">
		<part element="tns:dwInitialSetupRequest" name="dwInitialSetupRequest"/>
	</message>
	<message name="dwInitialSetupResponse">
		<part element="tns:dwInitialSetupResponse" name="dwInitialSetupResponse"/>
	</message>
	<message name="feeLookupRequest">
		<part element="tns:feeLookupRequest" name="feeLookupRequest"/>
	</message>
	<message name="feeLookupResponse">
		<part element="tns:feeLookupResponse" name="feeLookupResponse"/>
	</message>
	<message name="feeLookupBySendCountryRequest">
		<part element="tns:feeLookupBySendCountryRequest" name="feeLookupBySendCountryRequest"/>
	</message>
	<message name="feeLookupBySendCountryResponse">
		<part element="tns:feeLookupBySendCountryResponse" name="feeLookupBySendCountryResponse"/>
	</message>
	<message name="getAllErrorsRequest">
		<part element="tns:getAllErrorsRequest" name="getAllErrorsRequest"/>
	</message>
	<message name="getAllErrorsResponse">
		<part element="tns:getAllErrorsResponse" name="getAllErrorsResponse"/>
	</message>
	<message name="getAllFieldsRequest">
		<part element="tns:getAllFieldsRequest" name="getAllFieldsRequest"/>
	</message>
	<message name="getAllFieldsResponse">
		<part element="tns:getAllFieldsResponse" name="getAllFieldsResponse"/>
	</message>
	<message name="getBankDetailsByLevelRequest">
		<part element="tns:getBankDetailsByLevelRequest" name="getBankDetailsByLevelRequest"/>
	</message>
	<message name="getBankDetailsByLevelResponse">
		<part element="tns:getBankDetailsByLevelResponse" name="getBankDetailsByLevelResponse"/>
	</message>
	<message name="getBankDetailsRequest">
		<part element="tns:getBankDetailsRequest" name="getBankDetailsRequest"/>
	</message>
	<message name="getBankDetailsResponse">
		<part element="tns:getBankDetailsResponse" name="getBankDetailsResponse"/>
	</message>
	<message name="getBroadcastMessagesRequest">
		<part element="tns:getBroadcastMessagesRequest" name="getBroadcastMessagesRequest"/>
	</message>
	<message name="getBroadcastMessagesResponse">
		<part element="tns:getBroadcastMessagesResponse" name="getBroadcastMessagesResponse"/>
	</message>
	<message name="getProfileConsumerRequest">
		<part element="tns:getProfileConsumerRequest" name="getProfileConsumerRequest"/>
	</message>
	<message name="getProfileConsumerResponse">
		<part element="tns:getProfileConsumerResponse" name="getProfileConsumerResponse"/>
	</message>
	<message name="getProfileReceiverRequest">
		<part element="tns:getProfileReceiverRequest" name="getProfileReceiverRequest"/>
	</message>
	<message name="getProfileReceiverResponse">
		<part element="tns:getProfileReceiverResponse" name="getProfileReceiverResponse"/>
	</message>
	<message name="getProfileSenderRequest">
		<part element="tns:getProfileSenderRequest" name="getProfileSenderRequest"/>
	</message>
	<message name="getProfileSenderResponse">
		<part element="tns:getProfileSenderResponse" name="getProfileSenderResponse"/>
	</message>
	<message name="getConsumerProfileTransactionHistoryRequest">
		<part element="tns:getConsumerProfileTransactionHistoryRequest" name="getConsumerProfileTransactionHistoryRequest"/>
	</message>
	<message name="getConsumerProfileTransactionHistoryResponse">
		<part element="tns:getConsumerProfileTransactionHistoryResponse" name="getConsumerProfileTransactionHistoryResponse"/>
	</message>
	<message name="getCountryInfoRequest">
		<part element="tns:getCountryInfoRequest" name="getCountryInfoRequest"/>
	</message>
	<message name="getCountryInfoResponse">
		<part element="tns:getCountryInfoResponse" name="getCountryInfoResponse"/>
	</message>
	<message name="getCountrySubdivisionRequest">
		<part element="tns:getCountrySubdivisionRequest" name="getCountrySubdivisionRequest"/>
	</message>
	<message name="getCountrySubdivisionResponse">
		<part element="tns:getCountrySubdivisionResponse" name="getCountrySubdivisionResponse"/>
	</message>
	<message name="getCurrencyInfoRequest">
		<part element="tns:getCurrencyInfoRequest" name="getCurrencyInfoRequest"/>
	</message>
	<message name="getCurrencyInfoResponse">
		<part element="tns:getCurrencyInfoResponse" name="getCurrencyInfoResponse"/>
	</message>
	<message name="getDebugDataRequest">
		<part element="tns:getDebugDataRequest" name="getDebugDataRequest"/>
	</message>
	<message name="getDebugDataResponse">
		<part element="tns:getDebugDataResponse" name="getDebugDataResponse"/>
	</message>
	<message name="getDepositBankListRequest">
		<part element="tns:getDepositBankListRequest" name="getDepositBankListRequest"/>
	</message>
	<message name="getDepositBankListResponse">
		<part element="tns:getDepositBankListResponse" name="getDepositBankListResponse"/>
	</message>
	<message name="getDepositInformationRequest">
		<part element="tns:getDepositInformationRequest" name="getDepositInformationRequest"/>
	</message>
	<message name="getDepositInformationResponse">
		<part element="tns:getDepositInformationResponse" name="getDepositInformationResponse"/>
	</message>
	<message name="getEnumerationsRequest">
		<part element="tns:getEnumerationsRequest" name="getEnumerationsRequest"/>
	</message>
	<message name="getEnumerationsResponse">
		<part element="tns:getEnumerationsResponse" name="getEnumerationsResponse"/>
	</message>
	<message name="getReceiptForReprintRequest">
		<part element="tns:getReceiptForReprintRequest" name="getReceiptForReprintRequest"/>
	</message>
	<message name="getReceiptForReprintResponse">
		<part element="tns:getReceiptForReprintResponse" name="getReceiptForReprintResponse"/>
	</message>
	<message name="getServiceOptionsRequest">
		<part element="tns:getServiceOptionsRequest" name="getServiceOptionsRequest"/>
	</message>
	<message name="getServiceOptionsResponse">
		<part element="tns:getServiceOptionsResponse" name="getServiceOptionsResponse"/>
	</message>
	<message name="getUCPByConsumerAttributesRequest">
		<part element="tns:getUCPByConsumerAttributesRequest" name="getUCPByConsumerAttributesRequest"/>
	</message>
	<message name="getUCPByConsumerAttributesResponse">
		<part element="tns:getUCPByConsumerAttributesResponse" name="getUCPByConsumerAttributesResponse"/>
	</message>
	<message name="industryRequest">
		<part element="tns:industryRequest" name="industryRequest"/>
	</message>
	<message name="industryResponse">
		<part element="tns:industryResponse" name="industryResponse"/>
	</message>
	<message name="initialSetupRequest">
		<part element="tns:initialSetupRequest" name="initialSetupRequest"/>
	</message>
	<message name="initialSetupResponse">
		<part element="tns:initialSetupResponse" name="initialSetupResponse"/>
	</message>
	<message name="injectedInstructionRequest">
		<part element="tns:injectedInstructionRequest" name="injectedInstructionRequest"/>
	</message>
	<message name="injectedInstructionResponse">
		<part element="tns:injectedInstructionResponse" name="injectedInstructionResponse"/>
	</message>
	<message name="moneyGramReceiveDetailReportRequest">
		<part element="tns:moneyGramReceiveDetailReportRequest" name="moneyGramReceiveDetailReportRequest"/>
	</message>
	<message name="moneyGramReceiveDetailReportResponse">
		<part element="tns:moneyGramReceiveDetailReportResponse" name="moneyGramReceiveDetailReportResponse"/>
	</message>
	<message name="moneyGramReceiveSummaryReportRequest">
		<part element="tns:moneyGramReceiveSummaryReportRequest" name="moneyGramReceiveSummaryReportRequest"/>
	</message>
	<message name="moneyGramReceiveSummaryReportResponse">
		<part element="tns:moneyGramReceiveSummaryReportResponse" name="moneyGramReceiveSummaryReportResponse"/>
	</message>
	<message name="moneyGramSendDetailReportRequest">
		<part element="tns:moneyGramSendDetailReportRequest" name="moneyGramSendDetailReportRequest"/>
	</message>
	<message name="moneyGramSendDetailReportResponse">
		<part element="tns:moneyGramSendDetailReportResponse" name="moneyGramSendDetailReportResponse"/>
	</message>
	<message name="moneyGramSendDetailReportWithTaxRequest">
		<part element="tns:moneyGramSendDetailReportWithTaxRequest" name="moneyGramSendDetailReportWithTaxRequest"/>
	</message>
	<message name="moneyGramSendDetailReportWithTaxResponse">
		<part element="tns:moneyGramSendDetailReportWithTaxResponse" name="moneyGramSendDetailReportWithTaxResponse"/>
	</message>
	<message name="moneyGramSendSummaryReportRequest">
		<part element="tns:moneyGramSendSummaryReportRequest" name="moneyGramSendSummaryReportRequest"/>
	</message>
	<message name="moneyGramSendSummaryReportResponse">
		<part element="tns:moneyGramSendSummaryReportResponse" name="moneyGramSendSummaryReportResponse"/>
	</message>
	<message name="moneyOrderTotalResponse">
		<part element="tns:moneyOrderTotalResponse" name="moneyOrderTotalResponse"/>
	</message>
	<message name="moneyOrderTotalRequest">
		<part element="tns:moneyOrderTotalRequest" name="moneyOrderTotalRequest"/>
	</message>
	<message name="openOTPLoginRequest">
		<part element="tns:openOTPLoginRequest" name="openOTPLoginRequest"/>
	</message>
	<message name="openOTPLoginResponse">
		<part element="tns:openOTPLoginResponse" name="openOTPLoginResponse"/>
	</message>
	<message name="profileRequest">
		<part element="tns:profileRequest" name="profileRequest"/>
	</message>
	<message name="profileResponse">
		<part element="tns:profileResponse" name="profileResponse"/>
	</message>
	<message name="profileChangeRequest">
		<part element="tns:profileChangeRequest" name="profileChangeRequest"/>
	</message>
	<message name="profileChangeResponse">
		<part element="tns:profileChangeResponse" name="profileChangeResponse"/>
	</message>
	<message name="promotionLookupByCodeRequest">
		<part element="tns:promotionLookupByCodeRequest" name="promotionLookupByCodeRequest"/>
	</message>
	<message name="promotionLookupByCodeResponse">
		<part element="tns:promotionLookupByCodeResponse" name="promotionLookupByCodeResponse"/>
	</message>
	<message name="receiptsFormatDetailsRequest">
		<part element="tns:receiptsFormatDetailsRequest" name="receiptsFormatDetailsRequest"/>
	</message>
	<message name="receiptsFormatDetailsResponse">
		<part element="tns:receiptsFormatDetailsResponse" name="receiptsFormatDetailsResponse"/>
	</message>
	<message name="receiveReversalValidationRequest">
		<part element="tns:receiveReversalValidationRequest" name="receiveReversalValidationRequest"/>
	</message>
	<message name="receiveReversalValidationResponse">
		<part element="tns:receiveReversalValidationResponse" name="receiveReversalValidationResponse"/>
	</message>
	<message name="receiveValidationRequest">
		<part element="tns:receiveValidationRequest" name="receiveValidationRequest"/>
	</message>
	<message name="receiveValidationResponse">
		<part element="tns:receiveValidationResponse" name="receiveValidationResponse"/>
	</message>
	<message name="registerHardTokenRequest">
		<part element="tns:registerHardTokenRequest" name="registerHardTokenRequest"/>
	</message>
	<message name="registerHardTokenResponse">
		<part element="tns:registerHardTokenResponse" name="registerHardTokenResponse"/>
	</message>
	<message name="saveConsumerProfileImageRequest">
		<part element="tns:saveConsumerProfileImageRequest" name="saveConsumerProfileImageRequest"/>
	</message>
	<message name="saveConsumerProfileImageResponse">
		<part element="tns:saveConsumerProfileImageResponse" name="saveConsumerProfileImageResponse"/>
	</message>
	<message name="saveDebugDataRequest">
		<part element="tns:saveDebugDataRequest" name="saveDebugDataRequest"/>
	</message>
	<message name="saveDebugDataResponse">
		<part element="tns:saveDebugDataResponse" name="saveDebugDataResponse"/>
	</message>
	<message name="getPersonalIDImageRequest">
		<part element="tns:getPersonalIDImageRequest" name="getPersonalIDImageRequest"/>
	</message>
	<message name="getPersonalIDImageResponse">
		<part element="tns:getPersonalIDImageResponse" name="getPersonalIDImageResponse"/>
	</message>
	<message name="savePersonalIDImageRequest">
		<part element="tns:savePersonalIDImageRequest" name="savePersonalIDImageRequest"/>
	</message>
	<message name="savePersonalIDImageResponse">
		<part element="tns:savePersonalIDImageResponse" name="savePersonalIDImageResponse"/>
	</message>	
	<message name="saveConsumerProfileDocumentRequest">
		<part element="tns:saveConsumerProfileDocumentRequest" name="saveConsumerProfileDocumentRequest"/>
	</message>	
	<message name="saveConsumerProfileDocumentResponse">
		<part element="tns:saveConsumerProfileDocumentResponse" name="saveConsumerProfileDocumentResponse"/>
	</message>	
	<message name="getConsumerProfileDocumentRequest">
		<part element="tns:getConsumerProfileDocumentRequest" name="getConsumerProfileDocumentRequest"/>
	</message>
	<message name="getConsumerProfileDocumentResponse">
		<part element="tns:getConsumerProfileDocumentResponse" name="getConsumerProfileDocumentResponse"/>
	</message>	
	<message name="saveProfileRequest">
		<part element="tns:saveProfileRequest" name="saveProfileRequest"/>
	</message>
	<message name="saveProfileResponse">
		<part element="tns:saveProfileResponse" name="saveProfileResponse"/>
	</message>
	<message name="saveSubagentsRequest">
		<part element="tns:saveSubagentsRequest" name="saveSubagentsRequest"/>
	</message>
	<message name="saveSubagentsResponse">
		<part element="tns:saveSubagentsResponse" name="saveSubagentsResponse"/>
	</message>
	<message name="saveTransactionDocumentRequest">
		<part element="tns:saveTransactionDocumentRequest" name="saveTransactionDocumentRequest"/>
	</message>
	<message name="saveTransactionDocumentResponse">
		<part element="tns:saveTransactionDocumentResponse" name="saveTransactionDocumentResponse"/>
	</message>
	<message name="searchConsumerProfilesRequest">
		<part element="tns:searchConsumerProfilesRequest" name="searchConsumerProfilesRequest"/>
	</message>
	<message name="searchConsumerProfilesResponse">
		<part element="tns:searchConsumerProfilesResponse" name="searchConsumerProfilesResponse"/>
	</message>
	<message name="searchStagedTransactionsRequest">
		<part element="tns:searchStagedTransactionsRequest" name="searchStagedTransactionsRequest"/>
	</message>
	<message name="searchStagedTransactionsResponse">
		<part element="tns:searchStagedTransactionsResponse" name="searchStagedTransactionsResponse"/>
	</message>
	<message name="sendReversalValidationRequest">
		<part element="tns:sendReversalValidationRequest" name="sendReversalValidationRequest"/>
	</message>
	<message name="sendReversalValidationResponse">
		<part element="tns:sendReversalValidationResponse" name="sendReversalValidationResponse"/>
	</message>
	<message name="sendValidationRequest">
		<part element="tns:sendValidationRequest" name="sendValidationRequest"/>
	</message>
	<message name="sendValidationResponse">
		<part element="tns:sendValidationResponse" name="sendValidationResponse"/>
	</message>
	<message name="subagentsRequest">
		<part element="tns:subagentsRequest" name="subagentsRequest"/>
	</message>
	<message name="subagentsResponse">
		<part element="tns:subagentsResponse" name="subagentsResponse"/>
	</message>
	<message name="transactionLookupRequest">
		<part element="tns:transactionLookupRequest" name="transactionLookupRequest"/>
	</message>
	<message name="transactionLookupResponse">
		<part element="tns:transactionLookupResponse" name="transactionLookupResponse"/>
	</message>
	<message name="translationsRequest">
		<part element="tns:translationsRequest" name="translationsRequest"/>
	</message>
	<message name="translationsResponse">
		<part element="tns:translationsResponse" name="translationsResponse"/>
	</message>
	<message name="variableReceiptInfoRequest">
		<part element="tns:variableReceiptInfoRequest" name="variableReceiptInfoRequest"/>
	</message>
	<message name="variableReceiptInfoResponse">
		<part element="tns:variableReceiptInfoResponse" name="variableReceiptInfoResponse"/>
	</message>
	<message name="versionManifestRequest">
		<part element="tns:versionManifestRequest" name="versionManifestRequest"/>
	</message>
	<message name="versionManifestResponse">
		<part element="tns:versionManifestResponse" name="versionManifestResponse"/>
	</message>
	<message name="SystemError">
		<part element="tns:SystemError" name="SystemError"/>
	</message>
	<portType name="AgentConnect">
		<operation name="amendValidation">
			<input message="tns:amendValidationRequest" name="amendValidationRequest"/>
			<output message="tns:amendValidationResponse" name="amendValidationResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="billerSearch">
			<input message="tns:billerSearchRequest" name="billerSearchRequest"/>
			<output message="tns:billerSearchResponse" name="billerSearchResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="billPaymentDetailReport">
			<input message="tns:billPaymentDetailReportRequest" name="billPaymentDetailReportRequest"/>
			<output message="tns:billPaymentDetailReportResponse" name="billPaymentDetailReportResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="billPaymentSummaryReport">
			<input message="tns:billPaymentSummaryReportRequest" name="billPaymentSummaryReportRequest"/>
			<output message="tns:billPaymentSummaryReportResponse" name="billPaymentSummaryReportResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="bpValidation">
			<input message="tns:bpValidationRequest" name="bpValidationRequest"/>
			<output message="tns:bpValidationResponse" name="bpValidationResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="checkIn">
			<input message="tns:checkInRequest" name="checkInRequest"/>
			<output message="tns:checkInResponse" name="checkInResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="cityList">
			<input message="tns:cityListRequest" name="cityListRequest"/>
			<output message="tns:cityListResponse" name="cityListResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="completeSession">
			<input message="tns:completeSessionRequest" name="completeSessionRequest"/>
			<output message="tns:completeSessionResponse" name="completeSessionResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="complianceTransaction">
			<input message="tns:complianceTransactionRequest" name="complianceTransactionRequest"/>
			<output message="tns:complianceTransactionResponse" name="complianceTransactionResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="confirmToken">
			<input message="tns:confirmTokenRequest" name="confirmTokenRequest"/>
			<output message="tns:confirmTokenResponse" name="confirmTokenResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="consumerHistoryLookup">
			<input message="tns:consumerHistoryLookupRequest" name="consumerHistoryLookupRequest"/>
			<output message="tns:consumerHistoryLookupResponse" name="consumerHistoryLookupResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="createOrUpdateProfileConsumer">
			<input message="tns:createOrUpdateProfileConsumerRequest" name="createOrUpdateProfileConsumerRequest"/>
			<output message="tns:createOrUpdateProfileConsumerResponse" name="createOrUpdateProfileConsumerResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="createOrUpdateProfileReceiver">
			<input message="tns:createOrUpdateProfileReceiverRequest" name="createOrUpdateProfileReceiverRequest"/>
			<output message="tns:createOrUpdateProfileReceiverResponse" name="createOrUpdateProfileReceiverResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="createOrUpdateProfileSender">
			<input message="tns:createOrUpdateProfileSenderRequest" name="createOrUpdateProfileSenderRequest"/>
			<output message="tns:createOrUpdateProfileSenderResponse" name="createOrUpdateProfileSenderResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="depositAnnouncement">
			<input message="tns:depositAnnouncementRequest" name="depositAnnouncementRequest"/>
			<output message="tns:depositAnnouncementResponse" name="depositAnnouncementResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="directoryOfAgentsByAreaCodePrefix">
			<input message="tns:directoryOfAgentsByAreaCodePrefixRequest" name="directoryOfAgentsByAreaCodePrefixRequest"/>
			<output message="tns:directoryOfAgentsByAreaCodePrefixResponse" name="directoryOfAgentsByAreaCodePrefixResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="directoryOfAgentsByCity">
			<input message="tns:directoryOfAgentsByCityRequest" name="directoryOfAgentsByCityRequest"/>
			<output message="tns:directoryOfAgentsByCityResponse" name="directoryOfAgentsByCityResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="directoryOfAgentsByZip">
			<input message="tns:directoryOfAgentsByZipRequest" name="directoryOfAgentsByZipRequest"/>
			<output message="tns:directoryOfAgentsByZipResponse" name="directoryOfAgentsByZipResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="disclosureTextDetails">
			<input message="tns:disclosureTextDetailsRequest" name="disclosureTextDetailsRequest"/>
			<output message="tns:disclosureTextDetailsResponse" name="disclosureTextDetailsResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="doddFrankStateRegulatorInfo">
			<input message="tns:doddFrankStateRegulatorInfoRequest" name="doddFrankStateRegulatorInfoRequest"/>
			<output message="tns:doddFrankStateRegulatorInfoResponse" name="doddFrankStateRegulatorInfoResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="dwInitialSetup">
			<input message="tns:dwInitialSetupRequest" name="dwInitialSetupRequest"/>
			<output message="tns:dwInitialSetupResponse" name="dwInitialSetupResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="dwPassword">
			<input message="tns:dwPasswordRequest" name="dwPasswordRequest"/>
			<output message="tns:dwPasswordResponse" name="dwPasswordResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="dwProfile">
			<input message="tns:dwProfileRequest" name="dwProfileRequest"/>
			<output message="tns:dwProfileResponse" name="dwProfileResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="feeLookup">
			<input message="tns:feeLookupRequest" name="feeLookupRequest"/>
			<output message="tns:feeLookupResponse" name="feeLookupResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="feeLookupBySendCountry">
			<input message="tns:feeLookupBySendCountryRequest" name="feeLookupBySendCountryRequest"/>
			<output message="tns:feeLookupBySendCountryResponse" name="feeLookupBySendCountryResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="getAllErrors">
			<input message="tns:getAllErrorsRequest" name="getAllErrorsRequest"/>
			<output message="tns:getAllErrorsResponse" name="getAllErrorsResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="getAllFields">
			<input message="tns:getAllFieldsRequest" name="getAllFieldsRequest"/>
			<output message="tns:getAllFieldsResponse" name="getAllFieldsResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="getBankDetailsByLevel">
			<input message="tns:getBankDetailsByLevelRequest" name="getBankDetailsByLevelRequest"/>
			<output message="tns:getBankDetailsByLevelResponse" name="getBankDetailsByLevelResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="getBankDetails">
			<input message="tns:getBankDetailsRequest" name="getBankDetailsRequest"/>
			<output message="tns:getBankDetailsResponse" name="getBankDetailsResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="getBroadcastMessages">
			<input message="tns:getBroadcastMessagesRequest" name="getBroadcastMessagesRequest"/>
			<output message="tns:getBroadcastMessagesResponse" name="getBroadcastMessagesResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="getProfileConsumer">
			<input message="tns:getProfileConsumerRequest" name="getProfileConsumerRequest"/>
			<output message="tns:getProfileConsumerResponse" name="getProfileConsumerResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="getProfileReceiver">
			<input message="tns:getProfileReceiverRequest" name="getProfileReceiverRequest"/>
			<output message="tns:getProfileReceiverResponse" name="getProfileReceiverResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="getProfileSender">
			<input message="tns:getProfileSenderRequest" name="getProfileSenderRequest"/>
			<output message="tns:getProfileSenderResponse" name="getProfileSenderResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="getConsumerProfileTransactionHistory">
			<input message="tns:getConsumerProfileTransactionHistoryRequest" name="getConsumerProfileTransactionHistoryRequest"/>
			<output message="tns:getConsumerProfileTransactionHistoryResponse" name="getConsumerProfileTransactionHistoryResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="getCountryInfo">
			<input message="tns:getCountryInfoRequest" name="getCountryInfoRequest"/>
			<output message="tns:getCountryInfoResponse" name="getCountryInfoResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="getCountrySubdivision">
			<input message="tns:getCountrySubdivisionRequest" name="getCountrySubdivisionRequest"/>
			<output message="tns:getCountrySubdivisionResponse" name="getCountrySubdivisionResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="getCurrencyInfo">
			<input message="tns:getCurrencyInfoRequest" name="getCurrencyInfoRequest"/>
			<output message="tns:getCurrencyInfoResponse" name="getCurrencyInfoResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="getDebugData">
			<input message="tns:getDebugDataRequest" name="getDebugDataRequest"/>
			<output message="tns:getDebugDataResponse" name="getDebugDataResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="getDepositBankList">
			<input message="tns:getDepositBankListRequest" name="getDepositBankListRequest"/>
			<output message="tns:getDepositBankListResponse" name="getDepositBankListResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="getDepositInformation">
			<input message="tns:getDepositInformationRequest" name="getDepositInformationRequest"/>
			<output message="tns:getDepositInformationResponse" name="getDepositInformationResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="getEnumerations">
			<input message="tns:getEnumerationsRequest" name="getEnumerationsRequest"/>
			<output message="tns:getEnumerationsResponse" name="getEnumerationsResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="getReceiptForReprint">
			<input message="tns:getReceiptForReprintRequest" name="getReceiptForReprintRequest"/>
			<output message="tns:getReceiptForReprintResponse" name="getReceiptForReprintResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="getServiceOptions">
			<input message="tns:getServiceOptionsRequest" name="getServiceOptionsRequest"/>
			<output message="tns:getServiceOptionsResponse" name="getServiceOptionsResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="getUCPByConsumerAttributes">
			<input message="tns:getUCPByConsumerAttributesRequest" name="getUCPByConsumerAttributesRequest"/>
			<output message="tns:getUCPByConsumerAttributesResponse" name="getUCPByConsumerAttributesResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="industry">
			<input message="tns:industryRequest" name="industryRequest"/>
			<output message="tns:industryResponse" name="industryResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="initialSetup">
			<input message="tns:initialSetupRequest" name="initialSetupRequest"/>
			<output message="tns:initialSetupResponse" name="initialSetupResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="injectedInstruction">
			<input message="tns:injectedInstructionRequest" name="injectedInstructionRequest"/>
			<output message="tns:injectedInstructionResponse" name="injectedInstructionResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="moneyGramReceiveDetailReport">
			<input message="tns:moneyGramReceiveDetailReportRequest" name="moneyGramReceiveDetailReportRequest"/>
			<output message="tns:moneyGramReceiveDetailReportResponse" name="moneyGramReceiveDetailReportResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="moneyGramReceiveSummaryReport">
			<input message="tns:moneyGramReceiveSummaryReportRequest" name="moneyGramReceiveSummaryReportRequest"/>
			<output message="tns:moneyGramReceiveSummaryReportResponse" name="moneyGramReceiveSummaryReportResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="moneyGramSendDetailReport">
			<input message="tns:moneyGramSendDetailReportRequest" name="moneyGramSendDetailReportRequest"/>
			<output message="tns:moneyGramSendDetailReportResponse" name="moneyGramSendDetailReportResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="moneyGramSendDetailReportWithTax">
			<input message="tns:moneyGramSendDetailReportWithTaxRequest" name="moneyGramSendDetailReportWithTaxRequest"/>
			<output message="tns:moneyGramSendDetailReportWithTaxResponse" name="moneyGramSendDetailReportWithTaxResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="moneyGramSendSummaryReport">
			<input message="tns:moneyGramSendSummaryReportRequest" name="moneyGramSendSummaryReportRequest"/>
			<output message="tns:moneyGramSendSummaryReportResponse" name="moneyGramSendSummaryReportResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="moneyOrderTotal">
			<input message="tns:moneyOrderTotalRequest" name="moneyOrderTotalRequest"/>
			<output message="tns:moneyOrderTotalResponse" name="moneyOrderTotalResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="openOTPLogin">
			<input message="tns:openOTPLoginRequest" name="openOTPLoginRequest"/>
			<output message="tns:openOTPLoginResponse" name="openOTPLoginResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="profile">
			<input message="tns:profileRequest" name="profileRequest"/>
			<output message="tns:profileResponse" name="profileResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="profileChange">
			<input message="tns:profileChangeRequest" name="profileChangeRequest"/>
			<output message="tns:profileChangeResponse" name="profileChangeResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="promotionLookupByCode">
			<input message="tns:promotionLookupByCodeRequest" name="promotionLookupByCodeRequest"/>
			<output message="tns:promotionLookupByCodeResponse" name="promotionLookupByCodeResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="receiptsFormatDetails">
			<input message="tns:receiptsFormatDetailsRequest" name="receiptsFormatDetailsRequest"/>
			<output message="tns:receiptsFormatDetailsResponse" name="receiptsFormatDetailsResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="receiveReversalValidation">
			<input message="tns:receiveReversalValidationRequest" name="receiveReversalValidationRequest"/>
			<output message="tns:receiveReversalValidationResponse" name="receiveReversalValidationResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="receiveValidation">
			<input message="tns:receiveValidationRequest" name="receiveValidationRequest"/>
			<output message="tns:receiveValidationResponse" name="receiveValidationResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="registerHardToken">
			<input message="tns:registerHardTokenRequest" name="registerHardTokenRequest"/>
			<output message="tns:registerHardTokenResponse" name="registerHardTokenResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="saveConsumerProfileImage">
			<input message="tns:saveConsumerProfileImageRequest" name="saveConsumerProfileImageRequest"/>
			<output message="tns:saveConsumerProfileImageResponse" name="saveConsumerProfileImageResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="saveDebugData">
			<input message="tns:saveDebugDataRequest" name="saveDebugDataRequest"/>
			<output message="tns:saveDebugDataResponse" name="saveDebugDataResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="getPersonalIDImage">
			<input message="tns:getPersonalIDImageRequest" name="getPersonalIDImageRequest"/>
			<output message="tns:getPersonalIDImageResponse" name="getPersonalIDImageResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="savePersonalIDImage">
			<input message="tns:savePersonalIDImageRequest" name="savePersonalIDImageRequest"/>
			<output message="tns:savePersonalIDImageResponse" name="savePersonalIDImageResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->		
		<!--ACINTERNAL-START-->
		<operation name="saveConsumerProfileDocument">
			<input message="tns:saveConsumerProfileDocumentRequest" name="saveConsumerProfileDocumentRequest"/>
			<output message="tns:saveConsumerProfileDocumentResponse" name="saveConsumerProfileDocumentResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="getConsumerProfileDocument">
			<input message="tns:getConsumerProfileDocumentRequest" name="getConsumerProfileDocumentRequest"/>
			<output message="tns:getConsumerProfileDocumentResponse" name="getConsumerProfileDocumentResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->		
		<!--ACINTERNAL-START-->
		<operation name="saveProfile">
			<input message="tns:saveProfileRequest" name="saveProfileRequest"/>
			<output message="tns:saveProfileResponse" name="saveProfileResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="saveSubagents">
			<input message="tns:saveSubagentsRequest" name="saveSubagentsRequest"/>
			<output message="tns:saveSubagentsResponse" name="saveSubagentsResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="saveTransactionDocument">
			<input message="tns:saveTransactionDocumentRequest" name="saveTransactionDocumentRequest"/>
			<output message="tns:saveTransactionDocumentResponse" name="saveTransactionDocumentResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="searchConsumerProfiles">
			<input message="tns:searchConsumerProfilesRequest" name="searchConsumerProfilesRequest"/>
			<output message="tns:searchConsumerProfilesResponse" name="searchConsumerProfilesResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="searchStagedTransactions">
			<input message="tns:searchStagedTransactionsRequest" name="searchStagedTransactionsRequest"/>
			<output message="tns:searchStagedTransactionsResponse" name="searchStagedTransactionsResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="sendReversalValidation">
			<input message="tns:sendReversalValidationRequest" name="sendReversalValidationRequest"/>
			<output message="tns:sendReversalValidationResponse" name="sendReversalValidationResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="sendValidation">
			<input message="tns:sendValidationRequest" name="sendValidationRequest"/>
			<output message="tns:sendValidationResponse" name="sendValidationResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="subagents">
			<input message="tns:subagentsRequest" name="subagentsRequest"/>
			<output message="tns:subagentsResponse" name="subagentsResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="transactionLookup">
			<input message="tns:transactionLookupRequest" name="transactionLookupRequest"/>
			<output message="tns:transactionLookupResponse" name="transactionLookupResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<operation name="translations">
			<input message="tns:translationsRequest" name="translationsRequest"/>
			<output message="tns:translationsResponse" name="translationsResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="variableReceiptInfo">
			<input message="tns:variableReceiptInfoRequest" name="variableReceiptInfoRequest"/>
			<output message="tns:variableReceiptInfoResponse" name="variableReceiptInfoResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="versionManifest">
			<input message="tns:versionManifestRequest" name="versionManifestRequest"/>
			<output message="tns:versionManifestResponse" name="versionManifestResponse"/>
			<fault message="tns:SystemError" name="fault"/>
		</operation>
		<!--ACINTERNAL-END-->
	</portType>
	<binding name="AgentConnectBinding" type="tns:AgentConnect">
		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
		<operation name="amendValidation">
			<soap:operation soapAction="urn:AgentConnect1705#amendValidation"/>
			<input name="amendValidationRequest">
				<soap:body use="literal"/>
			</input>
			<output name="amendValidationResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<operation name="billerSearch">
			<soap:operation soapAction="urn:AgentConnect1705#billerSearch"/>
			<input name="billerSearchRequest">
				<soap:body use="literal"/>
			</input>
			<output name="billerSearchResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<operation name="billPaymentDetailReport">
			<soap:operation soapAction="urn:AgentConnect1705#billPaymentDetailReport"/>
			<input name="billPaymentDetailReportRequest">
				<soap:body use="literal"/>
			</input>
			<output name="billPaymentDetailReportResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<operation name="billPaymentSummaryReport">
			<soap:operation soapAction="urn:AgentConnect1705#billPaymentSummaryReport"/>
			<input name="billPaymentSummaryReportRequest">
				<soap:body use="literal"/>
			</input>
			<output name="billPaymentSummaryReportResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<operation name="bpValidation">
			<soap:operation soapAction="urn:AgentConnect1705#bpValidation"/>
			<input name="bpValidationRequest">
				<soap:body use="literal"/>
			</input>
			<output name="bpValidationResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="checkIn">
			<soap:operation soapAction="urn:AgentConnect1705#checkIn"/>
			<input name="checkInRequest">
				<soap:body use="literal"/>
			</input>
			<output name="checkInResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="cityList">
			<soap:operation soapAction="urn:AgentConnect1705#cityList"/>
			<input name="cityListRequest">
				<soap:body use="literal"/>
			</input>
			<output name="cityListResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<operation name="completeSession">
			<soap:operation soapAction="urn:AgentConnect1705#completeSession"/>
			<input name="completeSessionRequest">
				<soap:body use="literal"/>
			</input>
			<output name="completeSessionResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="complianceTransaction">
			<soap:operation soapAction="urn:AgentConnect1705#complianceTransaction"/>
			<input name="complianceTransactionRequest">
				<soap:body use="literal"/>
			</input>
			<output name="complianceTransactionResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="confirmToken">
			<soap:operation soapAction="urn:AgentConnect1705#confirmToken"/>
			<input name="confirmTokenRequest">
				<soap:body use="literal"/>
			</input>
			<output name="confirmTokenResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="consumerHistoryLookup">
			<soap:operation soapAction="urn:AgentConnect1705#consumerHistoryLookup"/>
			<input name="consumerHistoryLookupRequest">
				<soap:body use="literal"/>
			</input>
			<output name="consumerHistoryLookupResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="createOrUpdateProfileConsumer">
			<soap:operation soapAction="urn:AgentConnect1705#createOrUpdateProfileConsumer"/>
			<input name="createOrUpdateProfileConsumerRequest">
				<soap:body use="literal"/>
			</input>
			<output name="createOrUpdateProfileConsumerResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="createOrUpdateProfileReceiver">
			<soap:operation soapAction="urn:AgentConnect1705#createOrUpdateProfileReceiver"/>
			<input name="createOrUpdateProfileReceiverRequest">
				<soap:body use="literal"/>
			</input>
			<output name="createOrUpdateProfileReceiverResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<operation name="createOrUpdateProfileSender">
			<soap:operation soapAction="urn:AgentConnect1705#createOrUpdateProfileSender"/>
			<input name="createOrUpdateProfileSenderRequest">
				<soap:body use="literal"/>
			</input>
			<output name="createOrUpdateProfileSenderResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="depositAnnouncement">
			<soap:operation soapAction="urn:AgentConnect1705#depositAnnouncement"/>
			<input name="depositAnnouncementRequest">
				<soap:body use="literal"/>
			</input>
			<output name="depositAnnouncementResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="directoryOfAgentsByAreaCodePrefix">
			<soap:operation soapAction="urn:AgentConnect1705#directoryOfAgentsByAreaCodePrefix"/>
			<input name="directoryOfAgentsByAreaCodePrefixRequest">
				<soap:body use="literal"/>
			</input>
			<output name="directoryOfAgentsByAreaCodePrefixResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<operation name="directoryOfAgentsByCity">
			<soap:operation soapAction="urn:AgentConnect1705#directoryOfAgentsByCity"/>
			<input name="directoryOfAgentsByCityRequest">
				<soap:body use="literal"/>
			</input>
			<output name="directoryOfAgentsByCityResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<operation name="directoryOfAgentsByZip">
			<soap:operation soapAction="urn:AgentConnect1705#directoryOfAgentsByZip"/>
			<input name="directoryOfAgentsByZipRequest">
				<soap:body use="literal"/>
			</input>
			<output name="directoryOfAgentsByZipResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="disclosureTextDetails">
			<soap:operation soapAction="urn:AgentConnect1705#disclosureTextDetails"/>
			<input name="disclosureTextDetailsRequest">
				<soap:body use="literal"/>
			</input>
			<output name="disclosureTextDetailsResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="doddFrankStateRegulatorInfo">
			<soap:operation soapAction="urn:AgentConnect1705#doddFrankStateRegulatorInfo"/>
			<input name="doddFrankStateRegulatorInfoRequest">
				<soap:body use="literal"/>
			</input>
			<output name="doddFrankStateRegulatorInfoResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="dwInitialSetup">
			<soap:operation soapAction="urn:AgentConnect1705#dwInitialSetup"/>
			<input name="dwInitialSetupRequest">
				<soap:body use="literal"/>
			</input>
			<output name="dwInitialSetupResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="dwPassword">
			<soap:operation soapAction="urn:AgentConnect1705#dwPassword"/>
			<input name="dwPasswordRequest">
				<soap:body use="literal"/>
			</input>
			<output name="dwPasswordResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="dwProfile">
			<soap:operation soapAction="urn:AgentConnect1705#dwProfile"/>
			<input name="dwProfileRequest">
				<soap:body use="literal"/>
			</input>
			<output name="dwProfileResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="feeLookup">
			<soap:operation soapAction="urn:AgentConnect1705#feeLookup"/>
			<input name="feeLookupRequest">
				<soap:body use="literal"/>
			</input>
			<output name="feeLookupResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="feeLookupBySendCountry">
			<soap:operation soapAction="urn:AgentConnect1705#feeLookupBySendCountry"/>
			<input name="feeLookupBySendCountryRequest">
				<soap:body use="literal"/>
			</input>
			<output name="feeLookupBySendCountryResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="getAllErrors">
			<soap:operation soapAction="urn:AgentConnect1705#getAllErrors"/>
			<input name="getAllErrorsRequest">
				<soap:body use="literal"/>
			</input>
			<output name="getAllErrorsResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<operation name="getAllFields">
			<soap:operation soapAction="urn:AgentConnect1705#getAllFields"/>
			<input name="getAllFieldsRequest">
				<soap:body use="literal"/>
			</input>
			<output name="getAllFieldsResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<operation name="getBankDetailsByLevel">
			<soap:operation soapAction="urn:AgentConnect1705#getBankDetailsByLevel"/>
			<input name="getBankDetailsByLevelRequest">
				<soap:body use="literal"/>
			</input>
			<output name="getBankDetailsByLevelResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<operation name="getBankDetails">
			<soap:operation soapAction="urn:AgentConnect1705#getBankDetails"/>
			<input name="getBankDetailsRequest">
				<soap:body use="literal"/>
			</input>
			<output name="getBankDetailsResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="getBroadcastMessages">
			<soap:operation soapAction="urn:AgentConnect1705#getBroadcastMessages"/>
			<input name="getBroadcastMessagesRequest">
				<soap:body use="literal"/>
			</input>
			<output name="getBroadcastMessagesResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="getProfileConsumer">
			<soap:operation soapAction="urn:AgentConnect1705#getProfileConsumer"/>
			<input name="getProfileConsumerRequest">
				<soap:body use="literal"/>
			</input>
			<output name="getProfileConsumerResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="getProfileReceiver">
			<soap:operation soapAction="urn:AgentConnect1705#getProfileReceiver"/>
			<input name="getProfileReceiverRequest">
				<soap:body use="literal"/>
			</input>
			<output name="getProfileReceiverResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<operation name="getProfileSender">
			<soap:operation soapAction="urn:AgentConnect1705#getProfileSender"/>
			<input name="getProfileSenderRequest">
				<soap:body use="literal"/>
			</input>
			<output name="getProfileSenderResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<operation name="getConsumerProfileTransactionHistory">
			<soap:operation soapAction="urn:AgentConnect1705#getConsumerProfileTransactionHistory"/>
			<input name="getConsumerProfileTransactionHistoryRequest">
				<soap:body use="literal"/>
			</input>
			<output name="getConsumerProfileTransactionHistoryResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<operation name="getCountryInfo">
			<soap:operation soapAction="urn:AgentConnect1705#getCountryInfo"/>
			<input name="getCountryInfoRequest">
				<soap:body use="literal"/>
			</input>
			<output name="getCountryInfoResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<operation name="getCountrySubdivision">
			<soap:operation soapAction="urn:AgentConnect1705#getCountrySubdivision"/>
			<input name="getCountrySubdivisionRequest">
				<soap:body use="literal"/>
			</input>
			<output name="getCountrySubdivisionResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<operation name="getCurrencyInfo">
			<soap:operation soapAction="urn:AgentConnect1705#currencyInfo"/>
			<input name="getCurrencyInfoRequest">
				<soap:body use="literal"/>
			</input>
			<output name="getCurrencyInfoResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="getDebugData">
			<soap:operation soapAction="urn:AgentConnect1705#getDebugData"/>
			<input name="getDebugDataRequest">
				<soap:body use="literal"/>
			</input>
			<output name="getDebugDataResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="getDepositBankList">
			<soap:operation soapAction="urn:AgentConnect1705#getDepositBankList"/>
			<input name="getDepositBankListRequest">
				<soap:body use="literal"/>
			</input>
			<output name="getDepositBankListResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="getDepositInformation">
			<soap:operation soapAction="urn:AgentConnect1705#getDepositInformation"/>
			<input name="getDepositInformationRequest">
				<soap:body use="literal"/>
			</input>
			<output name="getDepositInformationResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="getEnumerations">
			<soap:operation soapAction="urn:AgentConnect1705#getEnumerations"/>
			<input name="getEnumerationsRequest">
				<soap:body use="literal"/>
			</input>
			<output name="getEnumerationsResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="getPersonalIDImage">
			<soap:operation soapAction="urn:AgentConnect1705#getPersonalIDImage"/>
			<input name="getPersonalIDImageRequest">
				<soap:body use="literal"/>
			</input>
			<output name="getPersonalIDImageResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="getConsumerProfileDocument">
			<soap:operation soapAction="urn:AgentConnect1705#getConsumerProfileDocument"/>
			<input name="getConsumerProfileDocumentRequest">
				<soap:body use="literal"/>
			</input>
			<output name="getConsumerProfileDocumentResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="getReceiptForReprint">
			<soap:operation soapAction="urn:AgentConnect1705#getReceiptForReprint"/>
			<input name="getReceiptForReprintRequest">
				<soap:body use="literal"/>
			</input>
			<output name="getReceiptForReprintResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="getServiceOptions">
			<soap:operation soapAction="urn:AgentConnect1705#getServiceOptions"/>
			<input name="getServiceOptionsRequest">
				<soap:body use="literal"/>
			</input>
			<output name="getServiceOptionsResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<operation name="getUCPByConsumerAttributes">
			<soap:operation soapAction="urn:AgentConnect1705#getUCPByConsumerAttributes"/>
			<input name="getUCPByConsumerAttributesRequest">
				<soap:body use="literal"/>
			</input>
			<output name="getUCPByConsumerAttributesResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="initialSetup">
			<soap:operation soapAction="urn:AgentConnect1705#initialSetup"/>
			<input name="initialSetupRequest">
				<soap:body use="literal"/>
			</input>
			<output name="initialSetupResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="industry">
			<soap:operation soapAction="urn:AgentConnect1705#industries"/>
			<input name="industryRequest">
				<soap:body use="literal"/>
			</input>
			<output name="industryResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="injectedInstruction">
			<soap:operation soapAction="urn:AgentConnect1705#injectedInstruction"/>
			<input name="injectedInstructionRequest">
				<soap:body use="literal"/>
			</input>
			<output name="injectedInstructionResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="moneyGramReceiveDetailReport">
			<soap:operation soapAction="urn:AgentConnect1705#moneyGramReceiveDetailReport"/>
			<input name="moneyGramReceiveDetailReportRequest">
				<soap:body use="literal"/>
			</input>
			<output name="moneyGramReceiveDetailReportResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<operation name="moneyGramReceiveSummaryReport">
			<soap:operation soapAction="urn:AgentConnect1705#moneyGramReceiveSummaryReport"/>
			<input name="moneyGramReceiveSummaryReportRequest">
				<soap:body use="literal"/>
			</input>
			<output name="moneyGramReceiveSummaryReportResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<operation name="moneyGramSendDetailReport">
			<soap:operation soapAction="urn:AgentConnect1705#moneyGramSendDetailReport"/>
			<input name="moneyGramSendDetailReportRequest">
				<soap:body use="literal"/>
			</input>
			<output name="moneyGramSendDetailReportResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<operation name="moneyGramSendDetailReportWithTax">
			<soap:operation soapAction="urn:AgentConnect1705#moneyGramSendDetailReportWithTax"/>
			<input name="moneyGramSendDetailReportWithTaxRequest">
				<soap:body use="literal"/>
			</input>
			<output name="moneyGramSendDetailReportWithTaxResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<operation name="moneyGramSendSummaryReport">
			<soap:operation soapAction="urn:AgentConnect1705#moneyGramSendSummaryReport"/>
			<input name="moneyGramSendSummaryReportRequest">
				<soap:body use="literal"/>
			</input>
			<output name="moneyGramSendSummaryReportResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="moneyOrderTotal">
			<soap:operation soapAction="urn:AgentConnect1705#moneyOrderTotal"/>
			<input name="moneyOrderTotalRequest">
				<soap:body use="literal"/>
			</input>
			<output name="moneyOrderTotalResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="openOTPLogin">
			<soap:operation soapAction="urn:AgentConnect1705#openOTPLogin"/>
			<input name="openOTPLoginRequest">
				<soap:body use="literal"/>
			</input>
			<output name="openOTPLoginResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="profile">
			<soap:operation soapAction="urn:AgentConnect1705#profile"/>
			<input name="profileRequest">
				<soap:body use="literal"/>
			</input>
			<output name="profileResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="profileChange">
			<soap:operation soapAction="urn:AgentConnect1705#profileChange"/>
			<input name="profileChangeRequest">
				<soap:body use="literal"/>
			</input>
			<output name="profileChangeResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="promotionLookupByCode">
			<soap:operation soapAction="urn:AgentConnect1705#promotionLookupByCode"/>
			<input name="promotionLookupByCodeRequest">
				<soap:body use="literal"/>
			</input>
			<output name="promotionLookupByCodeResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="receiptsFormatDetails">
			<soap:operation soapAction="urn:AgentConnect1705#receiptsFormatDetails"/>
			<input name="receiptsFormatDetailsRequest">
				<soap:body use="literal"/>
			</input>
			<output name="receiptsFormatDetailsResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="receiveReversalValidation">
			<soap:operation soapAction="urn:AgentConnect1705#receiveReversalValidation"/>
			<input name="receiveReversalValidationRequest">
				<soap:body use="literal"/>
			</input>
			<output name="receiveReversalValidationResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<operation name="receiveValidation">
			<soap:operation soapAction="urn:AgentConnect1705#receiveValidation"/>
			<input name="receiveValidationRequest">
				<soap:body use="literal"/>
			</input>
			<output name="receiveValidationResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="registerHardToken">
			<soap:operation soapAction="urn:AgentConnect1705#registerHardToken"/>
			<input name="registerHardTokenRequest">
				<soap:body use="literal"/>
			</input>
			<output name="registerHardTokenResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="saveConsumerProfileImage">
			<soap:operation soapAction="urn:AgentConnect1705#saveConsumerProfileImage"/>
			<input name="saveConsumerProfileImageRequest">
				<soap:body use="literal"/>
			</input>
			<output name="saveConsumerProfileImageResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="saveDebugData">
			<soap:operation soapAction="urn:AgentConnect1705#saveDebugData"/>
			<input name="saveDebugDataRequest">
				<soap:body use="literal"/>
			</input>
			<output name="saveDebugDataResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="savePersonalIDImage">
			<soap:operation soapAction="urn:AgentConnect1705#savePersonalIDImage"/>
			<input name="savePersonalIDImageRequest">
				<soap:body use="literal"/>
			</input>
			<output name="savePersonalIDImageResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->		
		<!--ACINTERNAL-START-->
		<operation name="saveConsumerProfileDocument">
			<soap:operation soapAction="urn:AgentConnect1705#saveConsumerProfileDocument"/>
			<input name="saveConsumerProfileDocumentRequest">
				<soap:body use="literal"/>
			</input>
			<output name="saveConsumerProfileDocumentResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->		
		<!--ACINTERNAL-START-->
		<operation name="saveProfile">
			<soap:operation soapAction="urn:AgentConnect1705#saveProfile"/>
			<input name="saveProfileRequest">
				<soap:body use="literal"/>
			</input>
			<output name="saveProfileResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="saveSubagents">
			<soap:operation soapAction="urn:AgentConnect1705#saveSubagents"/>
			<input name="saveSubagentsRequest">
				<soap:body use="literal"/>
			</input>
			<output name="saveSubagentsResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="saveTransactionDocument">
			<soap:operation soapAction="urn:AgentConnect1705#saveTransactionDocument"/>
			<input name="saveTransactionDocumentRequest">
				<soap:body use="literal"/>
			</input>
			<output name="saveTransactionDocumentResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="searchConsumerProfiles">
			<soap:operation soapAction="urn:AgentConnect1705#searchConsumerProfiles"/>
			<input name="searchConsumerProfilesRequest">
				<soap:body use="literal"/>
			</input>
			<output name="searchConsumerProfilesResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<operation name="searchStagedTransactions">
			<soap:operation soapAction="urn:AgentConnect1705#searchStagedTransactions"/>
			<input name="searchStagedTransactionsRequest">
				<soap:body use="literal"/>
			</input>
			<output name="searchStagedTransactionsResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<operation name="sendReversalValidation">
			<soap:operation soapAction="urn:AgentConnect1705#sendReversalValidation"/>
			<input name="sendReversalValidationRequest">
				<soap:body use="literal"/>
			</input>
			<output name="sendReversalValidationResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<operation name="sendValidation">
			<soap:operation soapAction="urn:AgentConnect1705#sendValidation"/>
			<input name="sendValidationRequest">
				<soap:body use="literal"/>
			</input>
			<output name="sendValidationResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="subagents">
			<soap:operation soapAction="urn:AgentConnect1705#subagents"/>
			<input name="subagentsRequest">
				<soap:body use="literal"/>
			</input>
			<output name="subagentsResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<operation name="transactionLookup">
			<soap:operation soapAction="urn:AgentConnect1705#transactionLookup"/>
			<input name="transactionLookupRequest">
				<soap:body use="literal"/>
			</input>
			<output name="transactionLookupResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<operation name="translations">
			<soap:operation soapAction="urn:AgentConnect1705#translations"/>
			<input name="translationsRequest">
				<soap:body use="literal"/>
			</input>
			<output name="translationsResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-START-->
		<operation name="variableReceiptInfo">
			<soap:operation soapAction="urn:AgentConnect1705#variableReceiptInfo"/>
			<input name="variableReceiptInfoRequest">
				<soap:body use="literal"/>
			</input>
			<output name="variableReceiptInfoResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
		<!--ACINTERNAL-START-->
		<operation name="versionManifest">
			<soap:operation soapAction="urn:AgentConnect1705#versionManifest"/>
			<input name="versionManifestRequest">
				<soap:body use="literal"/>
			</input>
			<output name="versionManifestResponse">
				<soap:body use="literal"/>
			</output>
			<fault name="fault">
				<soap:fault name="fault" use="literal"/>
			</fault>
		</operation>
		<!--ACINTERNAL-END-->
	</binding>
	<service name="AgentConnectService">
		<port binding="tns:AgentConnectBinding" name="AgentConnect">
			<soap:address location="https://d5ws.qa.moneygram.com/ac2/services/AgentConnect1705"/>
		</port>
	</service>
	<!-- This URL points to localhost. Use the appropriate WSDL file for your 
		environment. -->
</definitions>
