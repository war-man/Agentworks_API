<UserControl x:Class="TransactionRunner.Controls.ImportControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:TransactionRunner.Helpers.Controls"
             mc:Ignorable="d"
             Name="WindowRef">
    <UserControl.Resources>
        <Style TargetType="Button">
            <Setter Property="Width" Value="80" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <controls:TransactionDataGrid Grid.Row="0"
                                      Grid.Column="0"
                                      ItemsSource="{Binding Transactions}"
                                      AutoGenerateColumns="False"
                                      IsReadOnly="True"
                                      HeadersVisibility="Column"
                                      CanUserResizeRows="False"
                                      CanUserReorderColumns="False"
                                      CanUserSortColumns="False"
                                      SelectionUnit="FullRow"
                                      SelectionMode="Single"
                                      SelectedItem="{Binding SelectedTransaction}">
            <controls:TransactionDataGrid.Resources>
                <Style TargetType="{x:Type TextBlock}" x:Key="errorStyle">
                    <Setter Property="Padding" Value="4 0 4 0" />
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="ToolTip"
                                    Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style x:Key="DataGridColumnSeparatorStyle" TargetType="DataGridCell">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Fill="Gray" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </controls:TransactionDataGrid.Resources>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                            <Setter Property="Foreground" Value="DarkGray" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <controls:TransactionDataGrid.Columns>
                <DataGridTemplateColumn Width="80">
                    <DataGridTemplateColumn.Header>
                        <TextBlock FontWeight="Bold" Text="Enabled" Foreground="Blue" />
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center"
                                      IsChecked="{Binding IsEnabled, UpdateSourceTrigger=PropertyChanged}"
                                      IsEnabled="{Binding IsSelectable}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Width="100">
                    <DataGridTemplateColumn.Header>
                        <TextBlock FontWeight="Bold" Text="Result" Foreground="Blue" />
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <Image Source="../Images/busy.png"
                                       Height="16"
                                       Width="16"
                                       RenderTransformOrigin="0.5,0.5"
                                       Visibility="{Binding IsBusy, Converter={StaticResource booleanToVisibilityConverter}}">
                                    <Image.RenderTransform>
                                        <RotateTransform x:Name="AnimatedRotateTransform" Angle="0" />
                                    </Image.RenderTransform>
                                    <Image.Triggers>
                                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="AnimatedRotateTransform"
                                                                     Storyboard.TargetProperty="Angle"
                                                                     By="1"
                                                                     To="360"
                                                                     Duration="0:0:2"
                                                                     RepeatBehavior="Forever" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Image.Triggers>
                                </Image>
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                           Visibility="{Binding ShowResultLink, Converter={StaticResource booleanToVisibilityConverter}}">
                                    <Hyperlink Command="{Binding Path=DataContext.OpenResultCommand, ElementName=WindowRef}"
                                               CommandParameter="{Binding ResultFilePath}"
                                               TextDecorations="{x:Null}"
                                               ToolTip="Open results file">
                                        <Run Text="{Binding ReferenceNumber}" />
                                    </Hyperlink>
                                </TextBlock>
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                           Visibility="{Binding IsValid, Converter={StaticResource invertedBooleanToVisibilityConverter}}"
                                           Foreground="Red">
                                    NOT VALID
                                </TextBlock>
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                           Visibility="{Binding ShowResultText, Converter={StaticResource booleanToVisibilityConverter}}"
                                           Foreground="Red"
                                           Text="{Binding ReferenceNumber}" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn MinWidth="0" Width="2"
                                        CellStyle="{StaticResource DataGridColumnSeparatorStyle}" CanUserResize="False" />
            </controls:TransactionDataGrid.Columns>
        </controls:TransactionDataGrid>
        <Grid Grid.Row="0"
              Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Button Grid.Row="1" Width="30" Margin="5 0 -5 5" FontFamily="Marlett" FontSize="20" Content="5"
                    Command="{Binding MoveUpCommand}" />
            <Button Grid.Row="2" Width="30" Margin="5 5 -5 0" FontFamily="Marlett" FontSize="20" Content="6"
                    Command="{Binding MoveDownCommand}" />
        </Grid>
        <Grid Grid.Row="1"
              Grid.Column="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ProgressBar Grid.Row="0"
                         Grid.Column="0"
                         Margin="0 10 0 0"
                         Value="{Binding CurrentProgress}"
                         Minimum="0"
                         Maximum="1"
                         Visibility="{Binding IsBusy, Converter={StaticResource booleanToVisibilityConverter}}" />
            <StackPanel Grid.Row="0"
                        Grid.Column="1"
                        Orientation="Horizontal"
                        HorizontalAlignment="Right">
                <Button Command="{Binding OpenFileCommand}" Margin="10 10 10 0">Open file</Button>
                <Button Command="{Binding RunBatchCommand}" Margin="0 10 0 0" Visibility="{Binding IsBusy, Converter={StaticResource invertedBooleanToVisibilityConverter}}">Run</Button>
                <Button Command="{Binding StopBatchCommand}" Margin="0 10 0 0" Visibility="{Binding IsBusy, Converter={StaticResource booleanToVisibilityConverter}}">Stop</Button>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>